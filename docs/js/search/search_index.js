var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/directives/DefaultViewDirective.html",[0,1.45,1,1.625]],["body/directives/DefaultViewDirective.html",[0,1.805,1,2.023,2,1.282,3,0.315,4,0.366,5,0.366,6,4.578,7,1.622,8,0.513,9,1.172,10,0.041,11,1.456,12,0.506,13,2.611,14,1.335,15,0.397,16,3.281,17,3.049,18,0.711,19,0.041,20,0.556,21,0.515,22,4.189,23,0.925,24,1.183,25,0.76,26,1.065,27,0.82,28,1.416,29,0.941,30,3.714,31,1.483,32,1.829,33,3.161,34,4.127,35,0.042,36,2.284,37,2.541,38,0.784,39,0.897,40,0.311,41,1.311,42,1.172,43,1.647,44,4.304,45,1.282,46,1.15,47,2.638,48,1.456,49,1.85,50,1.456,51,1.685,52,1.805,53,1.647,54,0.266,55,0.853,56,3.022,57,4.919,58,3.025,59,0.76,60,3.831,61,4.667,62,3.049,63,3.529,64,3.022,65,0.988,66,2.638,67,0.689,68,0.388,69,3.714,70,1.198,71,1.104,72,1.928,73,4.299,74,1.25,75,0.685,76,1.874,77,1.517,78,4.038,79,1.467,80,2.638,81,2.611,82,0.76,83,1.789,84,0.76,85,3.714,86,1.045,87,3.714,88,1.456,89,4.667,90,1.622,91,0.838,92,2.638,93,0.76,94,1.456,95,1.181,96,2.611,97,1.045,98,2.284,99,1.619,100,1.181,101,3.049,102,2.224,103,2.638,104,3.714,105,0.375,106,3.714,107,0.685,108,1.062,109,3.714,110,1.801,111,3.714,112,1.062,113,2.638,114,1.073,115,1.459,116,0.988,117,2.284,118,0.76,119,0.813,120,0.853,121,3.714,122,3.714,123,2.611,124,1.619,125,3.049,126,1.456,127,2.638,128,1.647,129,3.714,130,1.181,131,1.805,132,1.829,133,0.853,134,1.062,135,1.456,136,3.714,137,2.638,138,1.198,139,3.281,140,4.667,141,3.714,142,3.049,143,1.829,144,3.714,145,4.189,146,3.049,147,3.714,148,3.714,149,1.072,150,1.456,151,2.638,152,3.049,153,3.714,154,1.456,155,3.049,156,3.831,157,2.165,158,2.638,159,2.638,160,0.677,161,2.611,162,2.023,163,2.611,164,3.281,165,1.311,166,2.284,167,1.181,168,2.611,169,1.311,170,1.311,171,1.456,172,0.389,173,1.311,174,0.366,175,1.456,176,1.034,177,0.931,178,2.165,179,0.931,180,1.034,181,0.366,182,0.134,183,2.638,184,2.638,185,2.638,186,2.638,187,2.638,188,0.838,189,2.638,190,0.931,191,2.638,192,2.638,193,2.638,194,3.714,195,2.638,196,3.714,197,1.854,198,1.854,199,1.062,200,2.638,201,1.854,202,1.181,203,1.229,204,2.638,205,2.638,206,2.638,207,2.638,208,2.638,209,2.638,210,2.638,211,3.714,212,2.638,213,2.638,214,0.018,215,0.025,216,0.018,217,0.018]],["title/directives/ErrorViewDirective.html",[0,1.45,218,1.625]],["body/directives/ErrorViewDirective.html",[0,2.505,2,2.126,3,0.522,4,0.607,5,0.607,7,2.69,8,0.522,9,1.184,10,0.03,12,0.472,13,3.624,14,1.474,15,0.343,18,0.615,19,0.041,20,0.571,21,0.715,24,0.895,25,1.055,26,0.793,35,0.042,40,0.343,45,2.126,46,1.906,52,2.505,54,0.441,55,1.184,56,3.624,65,1.005,67,0.615,68,0.343,70,1.123,82,1.055,105,0.343,116,1.005,119,0.697,172,0.364,174,0.607,181,0.607,182,0.222,214,0.03,215,0.035,216,0.03,217,0.03,218,2.807,219,5.482,220,4.232,221,1.324,222,4.232,223,3.17,224,1.184,225,1.474,226,1.184,227,3.624,228,4.647,229,3.591,230,4.74,231,3.591,232,3.591,233,3.591]],["title/injectables/EventService.html",[234,0.766,235,1.053]],["body/injectables/EventService.html",[3,0.359,4,0.417,5,0.417,8,0.589,10,0.041,12,0.488,15,0.398,19,0.042,20,0.548,23,0.737,24,0.943,25,0.615,26,1.05,27,0.793,29,0.943,35,0.042,40,0.343,42,0.934,54,0.303,55,0.934,59,0.832,65,1.248,67,0.668,68,0.373,70,1.182,71,1.418,72,1.934,74,1.221,76,1.771,79,1.477,82,1.055,88,1.593,91,0.955,93,0.832,96,2.857,105,0.368,107,0.648,114,0.615,120,0.934,123,2.857,130,1.86,133,1.221,138,1.323,143,1.593,149,1.058,167,1.292,172,0.339,174,0.417,181,0.417,182,0.152,199,1.474,214,0.02,215,0.028,216,0.028,217,0.02,234,1.044,235,1.435,236,1.637,237,2.467,238,1.519,239,4.934,240,1.286,241,5.312,242,3.337,243,1.044,244,1.044,245,3.337,246,4.065,247,4.934,248,4.065,249,4.065,250,4.065,251,4.065,252,4.065,253,4.065,254,4.065,255,4.065,256,1.435,257,1.162,258,4.065,259,4.605,260,4.605,261,4.605,262,4.065,263,4.065,264,4.065,265,1.312,266,2.213,267,3.337,268,4.459,269,4.065,270,3.034,271,2.129,272,5.711,273,3.238,274,1.714,275,4.065,276,5.312,277,3.006,278,4.065,279,4.065,280,3.169,281,3.337,282,3.48,283,4.065,284,4.065,285,1.182,286,4.065,287,3.006,288,3.337,289,3.337,290,4.934,291,4.605,292,4.065,293,1.248,294,4.065,295,3.337,296,3.337,297,1.934,298,1.771,299,4.065,300,4.065,301,4.065,302,5.154,303,3.006,304,3.337,305,1.435,306,4.065,307,1.771,308,4.065,309,1.044,310,4.231,311,4.361,312,3.006,313,3.238,314,3.006,315,4.065,316,4.065,317,0.955,318,2.467,319,3.337,320,2.467,321,1.061,322,1.061,323,3.006,324,1.044,325,3.006,326,3.006,327,3.006,328,2.467,329,1.461,330,3.006,331,2.113,332,2.467,333,3.006,334,3.006,335,4.605,336,1.178,337,3.006,338,3.006,339,3.006,340,3.337,341,2.467,342,3.006,343,2.467,344,2.113,345,3.006,346,3.006,347,3.006]],["title/directives/FallbackViewDirective.html",[0,1.45,348,1.625]],["body/directives/FallbackViewDirective.html",[0,2.505,2,2.126,3,0.522,4,0.607,5,0.607,7,2.69,8,0.522,9,1.184,10,0.03,12,0.472,13,3.624,14,1.474,15,0.343,18,0.615,19,0.039,20,0.571,21,0.715,24,0.895,25,1.055,26,0.793,35,0.042,40,0.343,45,2.126,46,1.906,52,2.505,54,0.441,55,1.184,56,3.624,65,1.005,67,0.615,68,0.377,70,1.123,82,1.055,105,0.377,116,1.005,119,0.697,172,0.364,174,0.607,181,0.607,182,0.222,214,0.03,215,0.035,216,0.03,217,0.03,220,4.232,221,1.324,222,4.232,223,3.17,224,1.184,226,1.184,228,4.647,229,3.591,230,4.74,231,3.591,232,3.591,233,3.591,348,2.807,349,5.482,350,5.155,351,2.807]],["title/interfaces/ISuspenseable.html",[352,1.3,353,0.948]],["body/interfaces/ISuspenseable.html",[3,0.344,4,0.26,5,0.26,8,0.344,9,0.43,10,0.041,11,1.9,12,0.497,14,0.535,15,0.388,18,0.71,19,0.042,20,0.574,21,0.808,23,0.951,24,0.72,25,0.383,26,0.937,27,0.83,28,1.095,29,0.936,31,1.356,32,0.733,35,0.042,38,0.749,39,0.773,40,0.39,41,0.66,42,0.907,43,1.017,48,1.129,49,0.66,50,0.733,51,0.733,53,0.66,54,0.189,59,0.72,65,0.662,67,0.641,68,0.398,70,0.48,71,0.903,72,0.733,74,1.079,75,0.68,76,1.256,77,1.017,79,1.245,82,0.961,83,0.594,84,0.873,86,1.018,88,1.129,91,1.493,93,0.383,94,0.733,95,0.916,97,1.074,99,0.815,100,1.432,102,0.815,105,0.387,107,0.298,108,1.13,110,0.66,112,0.824,114,0.923,115,1.22,116,0.662,118,0.992,119,0.63,120,1.114,124,0.815,126,0.733,128,0.66,130,1.432,131,1.4,132,1.129,133,1.246,134,1.386,135,2.082,138,1.347,149,0.98,150,1.548,154,0.733,165,0.66,167,0.594,169,0.66,170,1.017,171,0.733,172,0.414,173,0.66,174,0.26,175,0.733,176,0.733,177,0.66,179,1.394,180,0.733,181,0.753,182,0.178,188,0.594,199,1.005,202,0.916,203,1.005,214,0.013,215,0.02,216,0.013,217,0.013,221,0.48,224,1.266,225,1.422,226,1.143,234,0.74,235,1.241,238,1.005,240,1.143,243,1.157,244,1.157,256,1.241,257,0.824,265,0.907,271,0.733,274,1.422,285,1.393,293,0.43,297,1.129,298,1.256,305,0.66,307,0.815,309,1.206,317,0.594,321,1.394,322,1.394,324,1.347,329,1.4,336,1.9,352,1.256,353,1.117,354,1.4,355,0.815,356,2.073,357,1.569,358,1.4,359,1.129,360,1.157,361,1.256,362,1.256,363,1.256,364,1.256,365,1.569,366,2.151,367,1.569,368,2.073,369,2.073,370,1.92,371,2.073,372,1.9,373,1.87,374,2.151,375,2.151,376,2.282,377,2.113,378,2.286,379,1.92,380,1.87,381,1.824,382,2.073,383,1.87,384,1.569,385,1.569,386,1.569,387,1.859,388,1.256,389,1.569,390,1.569,391,1.256,392,1.569,393,1.256,394,1.256,395,1.569,396,1.569,397,1.569,398,1.569,399,1.378,400,1.548,401,1.569,402,1.569,403,1.569,404,1.569,405,1.672,406,1.92,407,1.4,408,1.569,409,1.569,410,1.569,411,1.256,412,1.569,413,1.569,414,1.87,415,2.151,416,1.4,417,1.569,418,1.569,419,1.4,420,1.4,421,2.151,422,1.87,423,1.569,424,1.569,425,1.569,426,1.378,427,1.548,428,1.569,429,1.766,430,1.548,431,1.018,432,0.66,433,1.378,434,2.073,435,1.914,436,1.914,437,1.018,438,1.129,439,0.733,440,1.018,441,0.733,442,1.018,443,0.815,444,0.815,445,1.018,446,0.909,447,0.66,448,1.018,449,1.018,450,1.018,451,0.909,452,1.277,453,1.018,454,0.909,455,0.815,456,1.708,457,1.018,458,1.018,459,1.018,460,0.909,461,1.018,462,1.018,463,1.018,464,0.909,465,1.018,466,1.4,467,1.256,468,1.014,469,0.733,470,1.4,471,1.018,472,1.018,473,1.241,474,1.569,475,1.018,476,1.129,477,1.005,478,1.289,479,1.914,480,1.018,481,1.129,482,1.017,483,1.532,484,0.815,485,0.909,486,0.916,487,0.733,488,0.733,489,0.733,490,0.733,491,0.733,492,0.733,493,0.733,494,0.824,495,1.017,496,1.018,497,1.018,498,1.018,499,1.017,500,1.22,501,1.129,502,1.569,503,1.569,504,1.018,505,1.569,506,0.733,507,0.594,508,0.66,509,1.394,510,1.018,511,0.909,512,1.018,513,1.018,514,0.815,515,0.66,516,1.018,517,1.018,518,1.569,519,1.018,520,1.018,521,1.548,522,1.017,523,0.733,524,0.909,525,0.815,526,1.4,527,0.909,528,1.672,529,0.909,530,1.859,531,1.708,532,1.569,533,1.569,534,1.4,535,0.733,536,1.018,537,1.018,538,0.916,539,1.4,540,1.4,541,1.4,542,0.909,543,1.4,544,1.256,545,1.4,546,1.4,547,0.909,548,1.018,549,0.815,550,0.815,551,1.018,552,1.018,553,0.909,554,0.909,555,0.815,556,1.256,557,0.909,558,0.733,559,0.909,560,0.815,561,0.815,562,0.909,563,0.909,564,0.909,565,0.909,566,1.672,567,0.815,568,1.4,569,1.532,570,0.909,571,0.66,572,0.909,573,0.66,574,0.909,575,0.909,576,1.378,577,0.909,578,0.909,579,1.4,580,1.256,581,1.4,582,0.733,583,0.909,584,0.909,585,1.4,586,0.815,587,0.48,588,0.909,589,0.909,590,0.909,591,0.909,592,0.909,593,0.909,594,1.708,595,2.113,596,2.046,597,2.073,598,0.909,599,0.909,600,1.4,601,1.708,602,1.4,603,1.394,604,1.4,605,0.909,606,0.909,607,0.909,608,1.721,609,0.909,610,1.708,611,0.909,612,0.909,613,0.909,614,0.815,615,0.909,616,0.909,617,0.909,618,0.909,619,0.909,620,0.909,621,0.909]],["title/components/QpSuspenseErrorComponent.html",[190,1.053,622,1.834]],["body/components/QpSuspenseErrorComponent.html",[1,1.663,3,0.364,4,0.424,5,0.424,8,0.554,9,0.702,10,0.032,12,0.445,15,0.274,18,0.651,19,0.038,35,0.042,39,0.655,40,0.274,45,1.484,46,1.331,52,2.694,68,0.274,75,0.74,83,1.306,84,0.841,86,0.841,93,0.95,105,0.356,116,0.702,119,0.487,162,2.528,172,0.342,174,0.424,181,0.424,182,0.155,190,1.45,214,0.021,215,0.028,216,0.021,217,0.021,218,1.663,221,1.055,225,1.606,226,0.944,257,1.175,282,2.855,348,1.663,351,1.663,360,1.512,432,1.078,473,1.45,476,1.61,478,1.328,515,1.45,538,1.306,622,3.053,623,3.811,624,2.147,625,2.147,626,2.507,627,3.054,628,2.759,629,2.526,630,2.526,631,4.108,632,2.888,633,3.373,634,3.373,635,2.888,636,2.526,637,3.373,638,3.373,639,2.888,640,2.888,641,2.888,642,2.888,643,4.381,644,3.811,645,4.643,646,3.811,647,3.264,648,4.611,649,4.381,650,3.811,651,4.611,652,5.048,653,4.611,654,3.811,655,3.811,656,3.811,657,4.611,658,3.781,659,3.811,660,4.643,661,4.643,662,4.643,663,4.643,664,4.643,665,4.643,666,3.282,667,4.381,668,4.643,669,4.736,670,5.337,671,4.643,672,4.643,673,4.643,674,5.617,675,4.643,676,4.643,677,4.643,678,3.811,679,4.643,680,4.643,681,4.643,682,4.643,683,5.769,684,5.769,685,5.769,686,6.141,687,6.141,688,4.643,689,4.643,690,2.888,691,4.108,692,2.888,693,2.147,694,2.147,695,2.526,696,2.526,697,3.491,698,2.147,699,2.147,700,2.147,701,1.878,702,2.147,703,1.878,704,2.147,705,2.147,706,2.147,707,2.147]],["title/components/QpSuspenseSpinnerComponent.html",[190,1.053,701,1.834]],["body/components/QpSuspenseSpinnerComponent.html",[1,1.676,3,0.367,4,0.427,5,0.427,8,0.367,9,0.707,10,0.035,12,0.474,15,0.356,18,0.678,19,0.037,20,0.31,29,0.658,33,2.249,35,0.042,37,2.249,38,0.491,39,0.658,40,0.332,45,1.496,46,1.341,52,2.699,54,0.31,62,3.391,67,0.367,68,0.311,75,0.743,84,0.846,86,1.02,93,0.63,94,1.619,105,0.37,107,0.491,110,1.458,116,0.707,117,2.54,119,0.491,160,0.79,162,2.538,172,0.344,174,0.427,181,0.427,182,0.156,190,1.458,214,0.021,215,0.028,216,0.021,217,0.021,218,1.676,221,1.06,226,0.949,257,1.181,282,2.866,331,2.904,348,1.676,351,1.676,360,1.555,432,1.086,473,1.458,476,1.619,477,1.181,478,1.609,515,1.458,538,1.313,622,1.893,623,3.827,624,2.164,625,2.164,626,3.391,628,2.763,629,2.54,632,2.904,633,3.391,634,3.391,635,2.904,636,2.54,637,3.391,638,3.391,639,2.904,640,2.904,641,2.904,643,4.742,644,3.827,646,4.619,647,4.06,648,4.871,649,4.619,650,4.619,651,4.742,652,4.392,653,4.619,654,3.827,655,3.827,656,3.827,657,4.619,658,3.648,659,4.619,666,2.866,667,4.392,669,4.392,678,3.827,690,2.904,692,2.904,693,2.164,694,2.164,695,2.54,696,2.54,697,3.842,698,2.164,699,2.164,700,2.164,701,3.063,702,2.164,703,1.893,704,2.164,705,2.164,706,2.164,707,2.164,708,3.078,709,5.555,710,3.415,711,4.13,712,3.078,713,4.13,714,5.196,715,4.13,716,4.13,717,4.662,718,3.277,719,5.933,720,4.662,721,4.662,722,4.662,723,4.662,724,5.35,725,5.35,726,5.776,727,5.35,728,4.662,729,5.35,730,4.662,731,4.662,732,4.662,733,4.662,734,4.662,735,3.827,736,4.662,737,4.662,738,5.35,739,4.662,740,5.626,741,4.662,742,4.662,743,5.35,744,4.662,745,4.662,746,3.078,747,4.13,748,3.078,749,3.078]],["title/injectables/SuspenseCacheService.html",[49,1.053,234,0.766]],["body/injectables/SuspenseCacheService.html",[3,0.409,4,0.476,5,0.476,8,0.62,10,0.038,12,0.497,15,0.367,18,0.691,19,0.042,20,0.524,21,0.616,24,1.006,26,1.07,27,0.833,28,1.557,29,0.879,34,3.876,35,0.042,38,0.547,39,0.829,40,0.296,49,1.565,54,0.346,55,1.019,59,0.908,65,1.129,67,0.658,68,0.391,70,1.262,71,1.139,74,1.019,75,0.707,78,3.641,79,1.475,81,3.876,82,1.129,83,1.652,84,0.908,105,0.379,107,0.547,112,1.268,114,1.064,115,1.268,118,0.908,119,0.707,143,1.738,145,3.641,149,1.194,152,3.641,160,0.881,172,0.286,174,0.476,181,0.476,182,0.174,188,1.41,199,1.486,202,1.41,203,1.268,214,0.023,215,0.03,216,0.023,217,0.023,234,1.139,236,1.868,243,1.334,244,1.139,265,1.019,285,1.139,307,1.933,313,3.654,321,1.211,322,1.211,324,1.139,360,1.139,466,2.526,467,1.933,477,1.268,494,1.268,507,1.41,538,1.41,586,2.478,587,1.334,608,1.933,628,2.156,629,2.727,636,2.727,750,5.611,751,3.43,752,4.436,753,3.118,754,4.036,755,4.916,756,5.198,757,4.436,758,4.436,759,4.436,760,4.436,761,3.43,762,4.436,763,3.43,764,4.436,765,4.436,766,4.436,767,4.436,768,5.686,769,5.513,770,5.198,771,3.876,772,4.436,773,3.43,774,4.436,775,4.436,776,4.436,777,4.419,778,3.43,779,4.436,780,4.436,781,4.436,782,4.436,783,4.436,784,3.43,785,3.43,786,3.43,787,3.43,788,3.43]],["title/components/SuspenseComponent.html",[190,1.053,703,1.834]],["body/components/SuspenseComponent.html",[1,1.986,2,0.964,3,0.141,4,0.164,5,0.164,8,0.307,9,0.271,10,0.04,11,1.007,12,0.505,14,1.319,15,0.383,16,2.564,18,0.724,19,0.042,20,0.551,21,0.751,22,2.476,23,0.944,24,0.617,25,0.617,26,0.896,27,0.821,28,1.209,29,0.936,31,1.667,32,0.462,33,2.512,34,3.473,35,0.042,36,1.22,37,1.832,38,0.735,39,0.649,40,0.38,41,0.7,42,0.891,43,1.287,44,3.48,45,0.573,46,0.514,48,1.182,49,0.907,50,1.182,51,1.007,52,2.129,53,1.369,54,0.119,55,0.456,58,2.069,59,0.406,60,1.629,63,3.48,64,0.829,65,0.591,67,0.621,68,0.395,70,1.284,71,0.51,72,0.462,74,1.229,75,0.798,77,0.907,79,1.268,81,1.395,82,1.074,83,0.631,84,0.794,86,1.046,90,1.854,91,1.393,93,0.747,95,0.631,96,2.12,97,1.036,98,1.854,100,0.631,101,0.968,105,0.377,107,0.848,108,1.165,110,1.064,112,0.962,114,1.074,115,1.581,116,1.007,117,2.606,118,0.997,119,0.481,120,1.222,123,2.366,124,0.865,125,1.629,126,1.661,130,1.295,132,0.778,133,0.936,134,1.109,135,1.597,138,1.088,139,1.395,143,1.007,146,1.629,149,0.693,154,0.778,155,1.629,156,2.994,157,2.763,160,1.125,161,1.395,162,1.081,163,1.395,164,2.564,165,0.7,166,1.22,167,0.631,168,1.395,169,1.064,170,0.7,171,1.182,172,0.392,173,0.416,174,0.164,175,1.007,176,0.462,177,0.416,178,0.968,179,0.416,180,1.182,181,0.357,182,0.13,188,1.466,190,1.287,197,1.395,198,1.807,199,1.043,201,0.829,202,0.631,203,1.043,214,0.008,215,0.014,216,0.025,217,0.008,218,1.986,221,1.251,223,1.22,224,0.838,225,1.371,226,1.26,227,2.366,235,1.438,240,1.196,242,0.968,243,1.125,244,0.774,245,1.629,256,1.064,265,0.891,266,1.081,267,0.968,270,1.581,271,0.778,273,1.807,274,0.735,281,2.11,282,1.581,285,0.864,288,1.629,293,0.456,295,1.629,296,1.629,297,0.778,304,2.476,305,0.7,309,0.936,311,3.185,317,0.375,320,0.968,324,0.66,328,1.629,331,2.12,332,1.629,336,1.597,341,1.629,343,0.968,348,1.986,351,1.986,353,1.159,358,0.964,359,0.778,360,1.284,361,1.314,362,0.865,363,0.865,364,0.514,372,1.879,378,1.314,379,0.964,381,0.7,387,0.514,391,0.865,393,1.314,394,0.514,399,1.429,400,1.007,405,0.462,407,1.885,426,0.778,430,1.182,432,0.416,439,0.462,441,0.778,447,1.438,451,0.964,452,0.996,454,1.885,455,1.963,460,1.98,464,1.465,467,0.514,468,0.864,469,1.319,473,1.064,477,0.962,482,1.369,483,0.865,484,0.865,486,0.375,494,0.862,500,0.568,507,1.07,508,0.416,509,0.7,514,1.775,515,0.907,522,0.7,524,1.465,525,0.865,528,0.462,530,0.514,535,1.007,538,0.631,544,0.865,549,0.865,556,1.314,558,0.778,560,1.467,566,0.462,571,0.907,576,1.319,580,0.514,582,1.007,595,0.865,603,1.188,622,0.725,624,1.807,625,0.829,628,0.964,630,2.694,632,1.395,635,1.807,636,2.069,639,1.395,640,1.395,641,1.395,642,1.395,647,0.829,658,1.22,690,2.564,692,1.395,693,2.366,694,0.829,695,1.22,696,1.22,697,2.12,698,0.829,699,2.12,700,0.829,701,0.725,702,0.829,703,1.854,704,0.829,705,0.829,706,0.829,707,0.829,710,2.069,718,1.395,735,0.968,753,2.12,754,3.48,771,2.12,777,3.48,789,0.968,790,1.985,791,1.985,792,2.994,793,1.395,794,1.985,795,1.985,796,1.985,797,1.985,798,3.016,799,1.985,800,1.629,801,1.985,802,4.505,803,1.985,804,1.985,805,1.985,806,1.985,807,1.629,808,2.476,809,1.985,810,1.985,811,1.985,812,1.985,813,1.985,814,2.57,815,2.57,816,2.57,817,2.57,818,3.016,819,2.57,820,1.629,821,1.985,822,3.016,823,1.985,824,1.985,825,3.016,826,3.647,827,1.985,828,1.985,829,1.807,830,1.985,831,3.016,832,1.985,833,1.985,834,1.985,835,2.57,836,1.985,837,1.985,838,1.985,839,3.879,840,1.985,841,2.476,842,3.016,843,2.57,844,3.016,845,1.985,846,1.629,847,1.985,848,1.985,849,2.57,850,3.016,851,2.476,852,1.985,853,1.985,854,3.016,855,1.985,856,2.476,857,1.985,858,1.985,859,1.985,860,1.985,861,1.985,862,1.985,863,1.985,864,2.57,865,1.985,866,1.985,867,3.365,868,1.985,869,1.985,870,1.985,871,1.985,872,1.985,873,4.074,874,1.985,875,3.647,876,1.985,877,1.985,878,1.985,879,1.629,880,1.985,881,1.985,882,1.985,883,1.985,884,1.985,885,1.985,886,1.985,887,1.985,888,1.985,889,1.985,890,3.016,891,1.629,892,1.985,893,1.985,894,1.985,895,1.985,896,1.985,897,1.985,898,3.016,899,3.016,900,1.985,901,1.985,902,1.985,903,1.985,904,1.985,905,1.985,906,1.985,907,1.985,908,1.985,909,1.985,910,4.239,911,1.629,912,1.629,913,1.985,914,1.985,915,1.985,916,1.629,917,2.11,918,3.647,919,1.985,920,1.985,921,1.985,922,1.807,923,3.647,924,3.879,925,3.016,926,4.074,927,3.647,928,2.57,929,1.985,930,1.985,931,1.985,932,1.985,933,1.179,934,2.57,935,4.94,936,3.016,937,2.57,938,1.985,939,3.647,940,1.179,941,1.179,942,1.985,943,3.365,944,1.179,945,1.985,946,3.016,947,1.629,948,1.985,949,1.985,950,1.985,951,1.985,952,3.365,953,1.179,954,1.179,955,1.985,956,1.985,957,1.179,958,3.365,959,1.985,960,1.179,961,1.179,962,1.985,963,1.985,964,2.11,965,1.985,966,1.179,967,1.985,968,1.179,969,1.985,970,1.985,971,1.985,972,3.016,973,1.179,974,1.179,975,1.629,976,1.179,977,1.985,978,1.985,979,1.985,980,1.985,981,1.179,982,1.179,983,1.985,984,1.179,985,1.179,986,1.985,987,1.985,988,1.985,989,3.016,990,3.016,991,3.365,992,1.985,993,1.179,994,1.985,995,1.985,996,1.985,997,1.985,998,1.985,999,1.985,1000,1.985,1001,1.985,1002,1.985,1003,3.016,1004,1.985,1005,1.179,1006,1.985,1007,1.179,1008,1.985,1009,1.985,1010,1.179,1011,0.968,1012,1.179,1013,1.179,1014,1.395,1015,0.968,1016,1.179,1017,0.968,1018,1.179,1019,2.11,1020,1.179,1021,1.179,1022,1.179,1023,1.179,1024,1.179,1025,2.57,1026,3.016,1027,1.179,1028,3.016,1029,3.016,1030,1.179,1031,1.985,1032,2.57,1033,1.985,1034,1.179,1035,1.179,1036,1.985,1037,1.179,1038,1.179,1039,1.179,1040,1.179,1041,2.57,1042,1.985,1043,1.179,1044,1.985,1045,1.985,1046,1.179,1047,1.179,1048,1.179,1049,1.179,1050,1.179,1051,1.985,1052,1.985,1053,1.179,1054,1.179,1055,1.179,1056,1.179,1057,0.968,1058,1.985,1059,1.179,1060,0.642,1061,1.179,1062,1.179,1063,0.968,1064,1.179,1065,0.968,1066,1.179,1067,1.629,1068,1.179,1069,0.968,1070,0.968,1071,1.179,1072,1.179,1073,1.179,1074,1.179,1075,1.985,1076,1.985,1077,2.476,1078,2.476,1079,1.985,1080,1.179,1081,3.879,1082,1.179,1083,1.985,1084,2.57,1085,0.968,1086,0.968,1087,1.179,1088,3.016,1089,1.985,1090,3.879,1091,3.879,1092,4.239,1093,3.185,1094,4.074,1095,3.879,1096,3.879,1097,3.879,1098,4.613,1099,1.179,1100,3.016,1101,3.016,1102,3.365,1103,1.179,1104,1.179,1105,0.968,1106,1.179,1107,1.179,1108,1.179,1109,1.179,1110,1.179,1111,1.179,1112,1.179,1113,1.985,1114,1.179,1115,1.179,1116,1.179,1117,1.985,1118,1.179,1119,1.179,1120,1.179,1121,1.179,1122,1.179,1123,1.179,1124,1.179,1125,1.179,1126,1.985,1127,3.365,1128,1.179,1129,1.179,1130,1.179,1131,1.179,1132,1.179,1133,1.985,1134,1.179,1135,0.968,1136,1.179,1137,1.179,1138,1.179,1139,1.179,1140,0.968,1141,0.968,1142,1.179,1143,1.629,1144,1.179,1145,0.968,1146,1.179,1147,0.968,1148,1.179,1149,1.179,1150,1.179,1151,1.179,1152,1.179,1153,1.179,1154,1.179,1155,1.179,1156,1.179,1157,1.179,1158,1.179,1159,0.968,1160,1.179,1161,1.179,1162,1.179,1163,1.179,1164,1.179,1165,1.179,1166,1.179,1167,0.968,1168,1.179,1169,1.179,1170,1.179,1171,1.179,1172,1.179,1173,1.179,1174,1.179,1175,1.179,1176,1.179,1177,1.179,1178,1.179,1179,1.179,1180,1.179]],["title/injectables/Suspenseable.html",[21,0.414,234,0.766]],["body/injectables/Suspenseable.html",[3,0.346,4,0.262,5,0.262,8,0.225,9,0.433,10,0.041,11,1.905,12,0.493,14,0.539,15,0.388,18,0.701,19,0.042,20,0.579,21,0.804,23,0.939,24,0.812,25,0.386,26,0.904,27,0.821,28,1.161,29,0.921,31,1.261,32,0.739,35,0.042,38,0.848,39,0.721,40,0.389,41,0.666,42,0.984,43,1.024,48,1.137,49,0.666,50,0.739,51,0.739,53,0.666,54,0.19,55,0.666,59,0.723,65,0.666,67,0.671,68,0.399,70,0.484,71,1.018,72,0.739,74,1.082,75,0.683,76,0.822,77,1.024,79,1.28,82,0.812,83,0.599,84,0.877,86,0.964,88,0.739,91,1.497,93,0.386,94,0.739,95,0.922,97,1.06,99,0.822,100,1.261,102,0.822,105,0.384,107,0.721,108,1.224,110,0.666,112,0.829,114,0.877,115,1.224,116,0.666,118,0.995,119,0.632,120,1.039,124,0.822,126,0.739,128,0.666,130,1.361,131,1.409,132,1.137,133,1.259,134,1.426,135,2.06,138,1.248,149,1.117,150,1.555,154,0.739,160,1.099,165,0.666,167,0.599,169,0.666,170,1.024,171,0.739,172,0.415,173,0.666,174,0.262,175,0.739,176,0.739,177,0.666,179,1.4,180,0.739,181,0.754,182,0.179,188,0.599,199,1.01,202,0.922,203,1.01,214,0.013,215,0.02,216,0.013,217,0.013,221,0.484,224,1.248,225,1.293,226,1.039,234,0.745,235,1.596,236,1.027,238,1.01,240,1.19,243,1.018,244,1.018,256,1.024,257,0.829,265,0.911,271,1.137,274,1.347,285,1.417,293,0.433,297,0.739,298,1.264,305,0.666,307,0.822,309,1.099,317,0.599,321,1.4,322,1.4,324,1.349,329,0.916,336,1.905,352,1.264,353,0.922,354,1.409,355,0.822,356,2.081,357,1.027,358,0.916,359,0.739,360,1.018,361,0.822,362,0.822,363,0.822,364,0.822,365,1.027,366,1.579,367,1.027,368,2.081,369,2.081,370,1.928,371,2.081,372,1.846,374,1.579,375,1.579,376,2.081,377,1.866,378,2.219,379,1.409,381,1.76,382,1.928,384,1.027,385,1.027,386,1.027,387,1.54,388,0.822,389,1.027,390,1.027,391,0.822,392,1.027,393,0.822,394,0.822,395,1.027,396,1.027,397,1.027,398,1.027,399,1.137,400,1.385,401,1.027,402,1.027,403,1.027,404,1.027,405,1.555,406,1.717,407,0.916,408,1.027,409,1.027,410,1.027,411,0.822,412,1.027,413,1.027,415,1.579,416,0.916,417,1.027,418,1.027,419,0.916,420,0.916,421,2.462,423,1.027,424,1.027,425,1.027,426,1.137,427,1.385,428,1.027,429,1.772,430,1.555,431,1.027,432,0.666,433,1.772,434,2.081,435,2.16,436,2.16,437,1.027,438,1.385,439,0.739,440,1.027,441,0.739,442,1.027,443,0.822,444,0.822,445,1.027,446,0.916,447,0.666,448,1.027,449,1.027,450,1.027,451,0.916,452,1.307,453,1.027,454,0.916,455,0.822,456,1.717,457,1.027,458,1.027,459,1.027,460,0.916,461,1.027,462,1.027,463,1.027,464,0.916,465,1.027,466,1.409,467,1.264,468,1.018,469,0.739,470,1.409,471,1.027,472,1.027,473,1.247,474,1.579,475,1.027,476,1.137,477,1.01,478,1.347,479,1.924,480,1.027,481,1.385,482,1.247,483,1.729,484,0.822,485,0.916,486,1.545,487,1.385,488,1.137,489,1.137,490,1.385,491,1.137,492,1.137,493,1.385,494,1.39,495,1.247,496,1.027,497,1.027,498,1.027,499,1.247,500,1.347,501,1.385,502,1.579,503,1.579,504,1.027,505,1.579,506,1.137,507,0.922,508,1.4,509,1.596,510,1.579,511,1.409,512,1.579,513,1.579,514,1.264,515,1.024,516,1.579,517,1.579,518,1.924,519,1.579,520,1.579,521,1.905,522,1.024,523,0.739,524,1.928,525,1.264,526,1.717,527,1.409,528,1.678,529,0.916,530,1.866,531,1.717,532,1.579,533,1.579,534,1.409,535,0.739,536,1.027,537,1.027,538,0.922,539,1.409,540,1.409,541,1.409,542,0.916,543,1.409,544,1.264,545,1.409,546,1.409,547,0.916,548,1.027,549,0.822,550,0.822,551,1.027,552,1.027,553,0.916,554,0.916,555,0.822,556,1.264,557,0.916,558,0.739,559,0.916,560,0.822,561,0.822,562,0.916,563,0.916,564,0.916,565,0.916,566,1.678,567,0.822,568,1.409,569,1.54,570,0.916,571,0.666,572,0.916,573,0.666,574,0.916,575,0.916,576,1.385,577,0.916,578,0.916,579,1.409,580,1.264,581,1.409,582,0.739,583,0.916,584,0.916,585,1.409,586,0.822,587,0.484,588,0.916,589,0.916,590,0.916,591,0.916,592,0.916,593,0.916,594,1.717,595,2.119,596,2.052,597,2.081,598,0.916,599,0.916,600,1.409,601,1.717,602,1.409,603,1.4,604,1.409,605,0.916,606,0.916,607,0.916,608,1.729,609,0.916,610,1.717,611,0.916,612,0.916,613,0.916,614,0.822,615,0.916,616,0.916,617,0.916,618,0.916,619,0.916,620,0.916,621,0.916,1181,1.027,1182,1.886,1183,1.886,1184,1.886,1185,1.886,1186,1.886,1187,1.886,1188,1.886,1189,2.332,1190,1.027,1191,1.886,1192,1.886,1193,1.027,1194,1.027,1195,1.027,1196,1.027]],["title/classes/SuspenseableBroadcaster.html",[182,0.151,439,1.169]],["body/classes/SuspenseableBroadcaster.html",[3,0.358,4,0.416,5,0.416,8,0.358,10,0.039,12,0.506,15,0.388,17,3.331,18,0.698,19,0.041,20,0.547,21,0.563,23,0.736,24,0.942,25,0.831,26,1.035,27,0.792,28,1.042,29,0.928,31,1.687,33,2.209,35,0.042,37,2.209,38,0.865,39,0.647,40,0.354,42,0.689,54,0.302,55,0.932,59,0.831,64,3.465,67,0.675,68,0.402,70,0.77,71,1.042,79,1.363,82,1.009,84,0.614,86,0.831,93,0.831,97,1.111,100,1.29,105,0.373,107,0.821,108,1.16,114,0.831,118,1.146,119,0.647,120,0.932,130,1.567,133,1.337,134,1.473,135,2.254,139,2.852,143,1.59,149,1.132,160,1.322,172,0.383,173,1.058,174,0.416,175,1.175,176,1.175,181,0.416,182,0.152,190,1.432,214,0.02,215,0.028,216,0.02,217,0.02,221,1.042,224,1.057,225,1.579,226,0.932,235,1.874,240,1.132,243,1.265,244,1.265,265,0.932,274,1.618,285,1.394,293,1.132,309,1.042,324,1.042,344,2.852,353,0.953,368,2.395,369,2.395,370,2.58,376,2.395,378,2.148,381,1.623,382,1.972,387,2.148,394,1.768,406,1.972,411,1.768,419,1.972,429,2.018,433,1.803,438,1.175,439,1.932,452,0.77,468,1.265,478,0.857,481,1.175,482,1.058,486,1.755,487,1.59,488,1.175,489,1.175,490,1.59,491,1.175,492,1.175,493,1.59,494,1.518,495,1.058,499,1.058,500,0.857,501,1.175,506,1.175,507,1.462,508,1.623,509,1.432,521,1.932,522,1.058,523,1.175,525,1.768,527,1.972,528,1.59,534,2.58,538,1.567,539,1.972,540,1.972,541,1.972,542,1.457,543,1.972,544,1.768,545,1.972,546,1.972,547,1.457,571,1.432,576,1.932,582,1.175,587,0.77,642,2.852,710,2.495,829,2.852,841,4.046,947,3.331,975,3.331,1060,2.684,1135,3.331,1140,3.331,1181,1.632,1189,2.804,1190,1.632,1193,1.632,1194,1.632,1195,1.632,1196,1.632,1197,3.264,1198,2.998,1199,3.331,1200,4.057,1201,4.057,1202,4.057,1203,4.057,1204,4.057,1205,4.057,1206,4.057,1207,4.057,1208,4.057,1209,4.057,1210,4.057,1211,3.331,1212,4.057,1213,4.057,1214,4.057,1215,2.107,1216,2.852,1217,2.998,1218,2.998,1219,2.998,1220,2.998,1221,2.998,1222,2.107]],["title/classes/SuspenseableClassic.html",[182,0.151,441,1.169]],["body/classes/SuspenseableClassic.html",[3,0.462,4,0.538,5,0.538,8,0.462,10,0.037,12,0.399,15,0.388,18,0.666,19,0.041,20,0.574,21,0.754,23,0.869,27,0.815,28,1.23,35,0.042,38,0.907,40,0.379,42,0.89,54,0.391,55,1.101,59,0.981,67,0.679,68,0.396,75,0.764,79,0.995,84,1.065,97,0.793,98,2.946,105,0.372,107,0.866,118,1.065,133,1.101,134,1.487,138,1.46,149,1.101,160,1.395,172,0.399,181,0.538,182,0.196,214,0.026,215,0.033,216,0.026,217,0.026,224,1.195,238,1.37,244,1.23,285,0.995,293,1.101,309,1.23,317,1.232,353,1.232,372,2.316,381,1.836,388,2.088,429,2.039,430,2.039,433,2.039,438,1.519,441,1.878,447,1.691,452,0.995,468,1.23,477,1.37,478,1.108,481,1.519,482,1.368,486,1.851,487,1.878,488,1.519,489,1.519,490,1.878,491,1.519,492,1.519,493,1.878,494,1.627,495,1.368,499,1.368,500,1.108,501,1.519,506,1.519,507,1.232,508,1.836,509,1.691,521,2.13,522,1.368,523,1.519,535,1.878,550,2.088,571,1.691,587,0.995,630,2.946,1060,2.609,1063,3.933,1181,2.11,1189,3.041,1190,2.11,1193,2.11,1194,2.11,1195,2.11,1196,2.11,1197,2.946,1215,2.724,1216,3.368,1222,2.724,1223,3.875,1224,3.933,1225,3.875]],["title/classes/SuspenseableEventDriven.html",[182,0.151,443,1.3]],["body/classes/SuspenseableEventDriven.html",[3,0.286,4,0.333,5,0.333,8,0.414,10,0.041,12,0.5,15,0.398,18,0.703,19,0.042,20,0.563,21,0.621,23,0.947,24,0.492,26,0.435,27,0.827,28,0.892,29,0.833,31,1.421,35,0.042,36,2.136,37,2.435,38,0.914,39,0.788,40,0.385,42,0.938,43,1.44,54,0.242,55,0.798,58,2.917,59,0.711,65,0.938,67,0.666,68,0.395,70,0.617,74,1.136,75,0.554,79,1.048,82,0.711,83,1.297,84,0.835,86,1.106,88,1.361,90,2.136,91,1.104,93,0.492,97,0.711,100,1.104,105,0.39,107,0.897,108,1.167,112,0.687,114,1.012,118,1.143,119,0.651,120,1.2,132,1.361,133,1.027,134,1.167,138,1.479,143,1.361,149,1.027,154,1.361,160,1.366,161,2.442,162,1.891,163,2.442,164,3.144,165,1.226,166,2.136,167,1.104,168,2.442,169,1.226,170,1.226,171,1.361,172,0.34,173,0.848,174,0.333,177,0.848,179,0.848,181,0.333,182,0.122,197,2.442,198,2.869,199,0.993,201,1.688,202,0.763,203,0.687,214,0.016,215,0.024,216,0.016,217,0.016,224,1.283,225,1.597,238,1.414,240,1.09,243,0.617,244,1.148,265,0.938,266,2.435,268,3.895,270,2.136,274,0.993,285,0.892,293,1.136,305,1.746,309,1.048,313,2.442,317,0.763,324,1.309,344,1.688,353,0.763,356,1.688,359,1.361,371,2.404,372,2.246,377,1.779,381,2.012,399,1.361,405,1.361,411,1.514,416,1.167,420,1.688,426,1.361,427,1.361,429,2.145,430,1.938,433,1.599,438,0.941,443,1.514,444,2.319,447,1.578,452,0.892,455,1.514,456,1.688,468,0.892,469,1.361,470,1.688,473,1.226,477,0.993,478,0.687,481,0.941,482,1.675,486,1.66,487,1.361,488,0.941,489,0.941,490,1.361,491,0.941,492,0.941,493,1.361,494,1.493,495,0.848,499,0.848,500,0.687,501,0.941,506,0.941,507,0.763,508,1.44,509,1.226,521,1.753,522,0.848,523,0.941,528,1.361,529,1.167,530,1.047,535,1.361,549,1.514,550,1.514,555,2.068,587,0.617,603,1.578,792,4.06,793,1.688,808,4.287,829,3.144,846,2.852,851,2.852,911,1.971,1011,2.852,1014,1.688,1060,1.891,1093,2.852,1159,3.35,1167,2.852,1181,1.308,1189,2.584,1190,1.308,1193,1.308,1194,1.308,1195,1.308,1196,1.308,1197,3.272,1211,2.852,1215,1.688,1216,2.442,1222,1.688,1224,2.852,1226,1.971,1227,4.472,1228,3.474,1229,3.474,1230,3.474,1231,3.474,1232,4.081,1233,5.473,1234,4.436,1235,4.652,1236,3.474,1237,3.474,1238,4.472,1239,4.472,1240,4.472,1241,4.472,1242,3.474,1243,4.472,1244,2.401,1245,3.474,1246,4.472,1247,2.401,1248,3.474,1249,3.474,1250,3.474,1251,3.474,1252,2.401,1253,3.474,1254,4.472,1255,2.401,1256,3.474,1257,3.474,1258,3.474,1259,3.474,1260,3.474,1261,3.474,1262,3.474,1263,3.474,1264,3.474,1265,4.081,1266,3.474,1267,3.474,1268,3.474,1269,4.472,1270,2.401,1271,2.401,1272,2.401,1273,3.474,1274,3.474,1275,2.401,1276,3.474,1277,2.401,1278,2.401,1279,2.401,1280,2.401,1281,2.401,1282,2.401,1283,2.401,1284,2.401,1285,1.971,1286,2.401,1287,2.401,1288,2.401,1289,2.401,1290,2.401,1291,2.401,1292,2.401,1293,4.745,1294,2.401,1295,2.401,1296,2.401,1297,2.401,1298,2.401,1299,2.401,1300,2.401]],["title/classes/SuspenseableInModule.html",[182,0.151,553,1.45]],["body/classes/SuspenseableInModule.html",[3,0.343,4,0.259,5,0.259,8,0.222,9,0.428,10,0.041,11,1.898,12,0.494,14,0.533,15,0.39,18,0.702,19,0.042,20,0.578,21,0.821,23,0.936,24,0.807,25,0.588,26,0.901,27,0.82,28,1.204,29,0.92,31,1.253,32,1.126,35,0.042,38,0.846,39,0.717,40,0.389,41,0.658,42,1.034,43,1.014,48,1.126,49,0.658,50,0.73,51,0.73,53,0.658,54,0.188,55,0.66,59,0.807,65,0.66,67,0.673,68,0.399,70,0.478,71,1.012,72,0.73,74,1.077,75,0.679,76,0.812,77,1.014,79,1.276,82,0.807,83,0.592,84,0.872,86,0.96,88,0.73,91,1.49,93,0.381,94,0.73,95,0.913,97,1.057,99,0.812,100,1.253,102,0.812,105,0.383,107,0.747,108,1.287,110,0.658,112,0.822,114,0.872,115,1.287,116,0.66,118,1.017,119,0.628,120,1.034,124,0.812,126,0.73,128,0.658,130,1.354,131,1.396,132,1.126,133,1.245,134,1.421,135,2.054,138,1.243,149,1.113,150,1.545,154,0.73,160,1.093,165,0.658,167,0.592,169,0.658,170,1.014,171,1.126,172,0.414,173,0.658,174,0.259,175,0.73,176,0.73,177,0.658,179,1.391,180,0.73,181,0.752,182,0.178,188,0.592,199,1.003,202,0.913,203,1.003,214,0.013,215,0.02,216,0.013,217,0.013,221,0.478,224,1.245,225,1.287,226,1.034,234,0.738,235,1.588,238,1.003,240,1.166,243,1.012,244,1.012,256,1.014,257,0.822,265,0.806,271,0.73,274,1.341,285,1.414,293,0.66,297,0.73,298,1.252,305,0.658,307,0.812,309,1.093,317,0.592,321,1.391,322,1.391,324,1.346,329,0.905,336,1.898,352,1.252,353,0.913,354,0.905,355,0.812,356,2.069,357,1.014,358,0.905,359,0.73,360,1.012,361,0.812,362,0.812,363,0.812,364,0.812,365,1.014,366,1.564,367,1.014,368,2.069,369,2.069,370,1.916,371,2.069,372,1.838,374,1.564,375,1.564,376,2.069,377,1.856,378,2.211,379,1.396,381,1.753,382,1.916,384,1.014,385,1.014,386,1.014,387,1.528,388,0.812,389,1.014,390,1.014,391,0.812,392,1.014,393,0.812,394,0.812,395,1.014,396,1.014,397,1.014,398,1.014,399,1.126,400,1.374,401,1.014,402,1.014,403,1.014,404,1.014,405,1.545,406,1.704,407,0.905,408,1.014,409,1.014,410,1.014,411,0.812,412,1.014,413,1.014,415,1.564,416,0.905,417,1.014,418,1.014,419,0.905,420,0.905,421,2.45,423,1.014,424,1.014,425,1.014,426,1.126,427,1.374,428,1.014,429,1.763,430,1.545,431,1.014,432,0.658,433,1.763,434,2.069,435,1.91,436,1.91,437,1.014,438,1.374,439,0.73,440,1.014,441,0.73,442,1.014,443,0.812,444,0.812,445,1.014,446,0.905,447,0.658,448,1.014,449,1.014,450,1.014,451,0.905,452,1.303,453,1.014,454,0.905,455,0.812,456,1.704,457,1.014,458,1.014,459,1.014,460,0.905,461,1.014,462,1.014,463,1.014,464,0.905,465,1.014,466,1.704,467,1.252,468,1.012,469,0.73,470,1.704,471,1.014,472,1.014,473,1.238,474,1.564,475,1.014,476,1.126,477,1.003,478,1.341,479,1.91,480,1.014,481,1.374,482,1.238,483,1.718,484,0.812,485,0.905,486,1.49,487,1.374,488,1.126,489,1.126,490,1.374,491,1.126,492,1.126,493,1.374,494,1.575,495,1.238,496,1.014,497,1.014,498,1.014,499,1.238,500,1.287,501,1.374,502,1.564,503,1.564,504,1.014,505,1.564,506,1.126,507,0.913,508,1.391,509,1.588,510,1.014,511,0.905,512,1.014,513,1.014,514,0.812,515,0.658,516,1.014,517,1.014,518,1.91,519,1.014,520,1.014,521,1.898,522,1.014,523,0.73,524,1.916,525,1.252,526,1.704,527,1.396,528,1.669,529,0.905,530,1.856,531,1.704,532,1.564,533,1.564,534,1.396,535,0.73,536,1.014,537,1.014,538,0.913,539,1.396,540,1.396,541,1.396,542,0.905,543,1.396,544,1.252,545,1.396,546,1.396,547,0.905,548,1.564,549,1.252,550,1.252,551,1.564,552,1.564,553,1.396,554,0.905,555,0.812,556,1.252,557,0.905,558,0.73,559,0.905,560,0.812,561,0.812,562,0.905,563,0.905,564,0.905,565,0.905,566,1.669,567,0.812,568,1.396,569,1.528,570,0.905,571,0.658,572,0.905,573,0.658,574,0.905,575,0.905,576,1.374,577,0.905,578,0.905,579,1.396,580,1.252,581,1.396,582,0.73,583,0.905,584,0.905,585,1.396,586,0.812,587,0.738,588,0.905,589,0.905,590,0.905,591,0.905,592,0.905,593,0.905,594,1.704,595,2.11,596,2.044,597,2.069,598,0.905,599,0.905,600,1.396,601,1.704,602,1.396,603,1.391,604,1.396,605,0.905,606,0.905,607,0.905,608,1.718,609,0.905,610,1.704,611,0.905,612,0.905,613,0.905,614,0.812,615,0.905,616,0.905,617,0.905,618,0.905,619,0.905,620,0.905,621,0.905,1181,1.014,1189,2.923,1190,1.014,1193,1.014,1194,1.014,1195,1.014,1196,1.014,1301,1.863,1302,1.863,1303,1.863,1304,1.863,1305,1.863,1306,1.863,1307,1.863,1308,1.863,1309,1.863]],["title/interfaces/SuspenseableModule.html",[126,1.169,352,1.3]],["body/interfaces/SuspenseableModule.html",[3,0.369,4,0.284,5,0.284,8,0.244,9,0.471,10,0.041,11,1.955,12,0.496,14,0.586,15,0.389,18,0.706,19,0.042,20,0.564,21,0.811,23,0.943,24,0.419,25,0.419,26,0.879,27,0.824,28,1.141,29,0.927,31,1.484,32,0.803,35,0.042,38,0.744,39,0.744,40,0.391,41,0.723,42,0.951,43,1.09,48,1.211,49,0.723,50,0.803,51,0.803,53,0.723,54,0.207,59,0.761,65,0.71,67,0.578,68,0.395,71,0.955,72,0.803,74,1.073,75,0.708,76,0.893,77,1.09,79,1.141,82,0.848,83,0.651,84,0.848,86,1.021,88,0.803,91,1.586,93,0.419,94,0.803,95,0.982,97,1.045,99,0.893,100,1.316,102,0.893,105,0.385,107,0.327,108,1.184,110,0.723,112,0.883,114,0.909,115,1.386,116,0.854,118,0.992,119,0.66,120,1.073,124,1.346,126,1.211,128,0.723,130,1.316,131,1.501,132,1.211,133,1.244,134,1.386,135,2.039,138,1.281,149,0.471,150,1.623,154,0.803,165,0.723,167,0.651,169,0.723,170,1.09,171,0.803,172,0.425,173,0.723,174,0.284,175,0.803,176,0.803,177,0.723,179,1.461,180,0.803,181,0.766,182,0.188,188,0.651,199,1.063,202,0.982,203,1.063,214,0.014,215,0.021,216,0.014,217,0.014,221,0.526,224,1.257,225,1.335,226,1.073,234,0.793,235,1.312,238,1.063,240,1.173,243,1.063,244,1.063,256,1.09,257,0.883,265,0.854,271,0.803,274,1.335,285,1.336,293,0.471,297,0.803,298,1.346,305,0.723,307,0.893,309,1.141,317,0.651,321,1.461,322,1.461,324,1.375,329,0.996,336,1.955,352,1.346,353,0.982,354,1.501,355,0.893,356,2.159,357,1.116,358,0.996,359,0.803,360,1.063,361,0.893,362,0.893,363,0.893,364,0.893,365,1.116,366,1.682,367,1.116,368,1.501,369,1.501,370,1.501,371,1.501,372,1.623,374,1.682,375,1.682,376,2.012,377,1.936,378,2.112,379,1.501,381,1.761,382,1.807,384,1.116,385,1.116,386,1.116,387,1.621,388,0.893,389,1.116,390,1.116,391,0.893,392,1.116,393,0.893,394,0.893,395,1.116,396,1.116,397,1.116,398,1.116,399,1.211,400,1.457,401,1.116,402,1.116,403,1.116,404,1.116,405,1.623,406,1.807,407,0.996,408,1.116,409,1.116,410,1.116,411,0.893,412,1.116,413,1.116,415,1.682,416,0.996,417,1.116,418,1.116,419,0.996,420,0.996,421,2.025,423,1.116,424,1.116,425,1.116,426,1.211,427,1.457,428,1.116,429,1.741,430,1.457,431,1.116,432,0.723,433,1.457,434,2.159,435,2.025,436,2.025,437,1.116,438,1.211,439,0.803,440,1.116,441,0.803,442,1.116,443,0.893,444,0.893,445,1.116,446,0.996,447,1.09,448,1.682,449,1.682,450,2.254,451,0.996,452,1.311,453,1.116,454,0.996,455,0.893,456,1.807,457,1.116,458,1.116,459,1.116,460,0.996,461,1.116,462,1.116,463,1.116,464,0.996,465,1.116,466,1.501,467,1.346,468,1.063,469,0.803,470,1.501,471,1.116,472,1.116,473,1.312,474,1.682,475,1.116,476,1.211,477,1.063,478,1.335,479,2.025,480,1.116,481,1.211,482,1.09,483,1.621,484,0.893,485,0.996,486,0.982,487,0.803,488,0.803,489,0.803,490,0.803,491,0.803,492,0.803,493,0.803,494,0.883,495,1.09,496,1.116,497,1.116,498,1.116,499,1.09,500,1.27,501,1.211,502,1.682,503,1.682,504,1.116,505,1.682,506,0.803,507,0.651,508,0.723,509,1.461,510,1.116,511,0.996,512,1.116,513,1.116,514,0.893,515,0.723,516,1.116,517,1.116,518,1.682,519,1.116,520,1.116,521,1.623,522,1.09,523,0.803,524,0.996,525,0.893,526,1.501,527,0.996,528,1.741,529,0.996,530,1.936,531,1.807,532,1.682,533,1.682,534,1.501,535,0.803,536,1.116,537,1.116,538,0.982,539,1.501,540,1.501,541,1.501,542,0.996,543,1.501,544,1.346,545,1.501,546,1.501,547,0.996,548,1.116,549,0.893,550,0.893,551,1.116,552,1.116,553,0.996,554,0.996,555,0.893,556,1.346,557,0.996,558,0.803,559,0.996,560,0.893,561,0.893,562,0.996,563,0.996,564,0.996,565,0.996,566,1.741,567,0.893,568,1.501,569,1.621,570,0.996,571,0.723,572,0.996,573,0.723,574,0.996,575,0.996,576,1.457,577,0.996,578,0.996,579,1.501,580,1.346,581,1.501,582,0.803,583,0.996,584,0.996,585,1.501,586,0.893,587,0.526,588,0.996,589,0.996,590,0.996,591,0.996,592,0.996,593,0.996,594,1.807,595,2.174,596,2.112,597,2.159,598,0.996,599,0.996,600,1.501,601,1.807,602,1.501,603,1.461,604,1.501,605,0.996,606,0.996,607,0.996,608,1.804,609,0.996,610,1.807,611,0.996,612,0.996,613,0.996,614,0.893,615,0.996,616,0.996,617,0.996,618,0.996,619,0.996,620,0.996,621,0.996,1310,2.049]],["title/classes/SuspenseableRenderer.html",[182,0.151,486,0.948]],["body/classes/SuspenseableRenderer.html",[3,0.346,4,0.262,5,0.262,8,0.225,9,0.433,10,0.041,11,1.905,12,0.497,14,0.539,15,0.397,18,0.708,19,0.042,20,0.572,21,0.804,23,0.939,24,0.386,25,0.386,26,0.854,27,0.821,28,1.209,29,0.926,31,1.261,32,0.739,35,0.042,38,0.858,39,0.751,40,0.393,41,0.666,42,1.039,43,1.024,48,1.137,49,0.666,50,0.739,51,0.739,53,0.666,54,0.19,55,0.666,59,0.723,65,0.984,67,0.627,68,0.398,71,0.907,72,1.137,74,1.082,75,0.683,76,0.822,77,1.247,79,1.161,82,0.877,83,0.922,84,0.964,86,0.964,88,0.739,91,1.497,93,0.386,94,0.739,95,0.922,97,1.06,99,0.822,100,1.261,102,0.822,105,0.385,107,0.683,108,1.135,110,0.666,112,0.83,114,0.877,115,1.225,116,0.666,118,1.042,119,0.632,120,1.039,124,0.822,126,0.739,128,0.666,130,1.261,131,1.41,132,1.137,133,1.223,134,1.426,135,1.995,138,1.248,149,0.433,150,1.555,154,1.137,160,1.019,165,0.666,167,0.6,169,0.666,170,1.024,171,0.739,172,0.415,173,0.666,174,0.262,175,0.739,176,0.739,177,0.666,179,1.4,180,0.739,181,0.754,182,0.179,188,0.6,199,1.011,202,0.922,203,1.011,214,0.013,215,0.02,216,0.013,217,0.013,221,0.745,224,1.292,225,1.347,226,1.039,234,0.745,235,1.247,238,1.011,240,1.223,243,1.161,244,1.019,256,1.247,257,0.83,265,0.812,271,0.739,274,1.293,285,1.33,293,0.433,297,0.739,298,1.264,305,0.666,307,1.264,309,1.099,317,0.6,321,1.4,322,1.4,324,1.35,329,0.917,336,1.905,352,1.264,353,0.922,354,0.917,355,0.822,356,1.928,357,1.027,358,0.917,359,0.739,360,1.019,361,0.822,362,0.822,363,0.822,364,0.822,365,1.027,366,1.58,367,1.027,368,1.41,369,1.41,370,1.41,371,1.41,372,1.555,374,1.58,375,1.58,376,1.928,377,1.866,378,2.053,379,1.41,381,1.879,382,1.718,384,1.027,385,1.027,386,1.027,387,1.729,388,0.822,389,1.027,390,1.027,391,0.822,392,1.027,393,0.822,394,0.822,395,1.027,396,1.027,397,1.027,398,1.027,399,1.385,400,1.385,401,1.027,402,1.027,403,1.027,404,1.027,405,1.678,406,1.718,407,0.917,408,1.027,409,1.027,410,1.027,411,0.822,412,1.027,413,1.027,415,1.58,416,0.917,417,1.027,418,1.027,419,0.917,420,0.917,421,2.16,423,1.027,424,1.027,425,1.027,426,1.385,427,1.385,428,1.027,429,1.954,430,1.385,431,1.027,432,0.666,433,1.772,434,2.081,435,1.925,436,1.925,437,1.027,438,1.385,439,0.739,440,1.027,441,0.739,442,1.027,443,0.822,444,0.822,445,1.027,446,0.917,447,0.666,448,1.027,449,1.027,450,1.027,451,1.41,452,1.367,453,1.58,454,1.41,455,1.264,456,2.198,457,1.58,458,1.58,459,1.58,460,1.41,461,1.58,462,1.58,463,1.58,464,1.41,465,1.58,466,1.718,467,1.729,468,1.099,469,1.137,470,1.718,471,1.58,472,1.58,473,1.4,474,2.16,475,1.58,476,1.555,477,1.135,478,1.456,479,2.332,480,1.58,481,1.555,482,1.4,483,1.729,484,1.264,485,1.41,486,1.123,487,1.385,488,1.137,489,1.137,490,1.385,491,1.137,492,1.137,493,1.385,494,1.135,495,1.4,496,1.58,497,1.58,498,1.58,499,1.4,500,1.347,501,1.555,502,1.58,503,1.58,504,1.027,505,1.58,506,1.137,507,0.922,508,1.4,509,1.4,510,1.027,511,0.917,512,1.027,513,1.027,514,0.822,515,0.666,516,1.027,517,1.027,518,1.58,519,1.027,520,1.027,521,1.555,522,1.024,523,0.739,524,0.917,525,0.822,526,1.41,527,0.917,528,1.678,529,0.917,530,1.866,531,1.718,532,1.58,533,1.58,534,1.41,535,0.739,536,1.027,537,1.027,538,0.922,539,1.41,540,1.41,541,1.41,542,0.917,543,1.41,544,1.264,545,1.41,546,1.41,547,0.917,548,1.027,549,0.822,550,0.822,551,1.027,552,1.027,553,0.917,554,0.917,555,0.822,556,1.264,557,0.917,558,0.739,559,0.917,560,0.822,561,0.822,562,0.917,563,0.917,564,0.917,565,0.917,566,1.678,567,0.822,568,1.41,569,1.54,570,0.917,571,0.666,572,0.917,573,0.666,574,0.917,575,0.917,576,1.385,577,0.917,578,0.917,579,1.41,580,1.264,581,1.41,582,0.739,583,0.917,584,0.917,585,1.41,586,0.822,587,0.745,588,0.917,589,0.917,590,0.917,591,0.917,592,0.917,593,0.917,594,1.718,595,2.119,596,2.053,597,2.081,598,0.917,599,0.917,600,1.41,601,1.718,602,1.41,603,1.4,604,1.41,605,0.917,606,0.917,607,0.917,608,1.729,609,0.917,610,1.718,611,0.917,612,0.917,613,0.917,614,0.822,615,0.917,616,0.917,617,0.917,618,0.917,619,0.917,620,0.917,621,0.917,1311,2.901,1312,1.886,1313,1.886,1314,1.886,1315,1.886]],["title/injectables/YieldToMainService.html",[234,0.766,922,2.097]],["body/injectables/YieldToMainService.html",[3,0.366,4,0.425,5,0.425,8,0.555,10,0.039,12,0.388,15,0.395,19,0.041,20,0.502,23,0.902,24,0.843,25,0.627,26,0.747,27,0.841,29,0.793,31,1.309,33,2.243,35,0.042,38,0.657,39,0.793,40,0.31,46,2.027,54,0.309,59,0.843,65,1.069,67,0.637,68,0.392,70,1.277,71,1.277,86,0.843,93,0.627,97,0.627,98,3.058,105,0.274,107,0.793,112,0.876,114,1.136,118,1.018,119,0.657,128,1.082,133,0.946,143,1.614,149,1.069,150,1.949,160,1.277,172,0.255,174,0.425,181,0.425,182,0.155,199,1.422,202,1.309,203,1.178,214,0.021,215,0.028,216,0.034,217,0.021,234,1.057,236,1.669,238,1.484,240,1.192,243,1.372,257,0.876,265,1.192,270,3.357,271,1.949,280,3.19,285,1.332,289,3.381,293,1.143,297,1.614,305,1.454,321,1.082,322,1.082,324,0.787,336,1.823,340,4.083,364,1.795,388,2.167,468,1.458,561,2.167,573,1.082,596,1.336,603,1.454,658,2.532,666,2.86,771,2.895,800,4.083,820,2.516,922,2.895,1019,4.26,1065,3.381,1067,3.381,1077,3.381,1078,3.819,1143,3.819,1147,3.819,1316,4.26,1317,2.516,1318,4.481,1319,5.73,1320,5.73,1321,5.549,1322,5.549,1323,4.119,1324,4.119,1325,4.119,1326,4.119,1327,4.119,1328,4.119,1329,5.189,1330,5.621,1331,4.119,1332,4.119,1333,5.459,1334,3.065,1335,4.119,1336,5.189,1337,4.26,1338,3.065,1339,5.808,1340,4.119,1341,4.386,1342,5.808,1343,2.516,1344,4.119,1345,3.819,1346,4.973,1347,4.119,1348,4.973,1349,3.065,1350,4.652,1351,5.459,1352,4.652,1353,4.652,1354,4.119,1355,4.119,1356,4.973,1357,3.065,1358,4.119,1359,3.381,1360,2.155,1361,2.516,1362,2.516,1363,2.516,1364,2.516,1365,2.516,1366,4.386,1367,3.381,1368,2.516,1369,3.381,1370,2.516,1371,2.516,1372,3.065,1373,3.065,1374,3.065,1375,3.065,1376,4.652,1377,4.119,1378,3.065,1379,3.065,1380,3.065,1381,3.065,1382,4.119,1383,3.065,1384,3.065,1385,3.065,1386,4.119,1387,3.065,1388,3.065,1389,3.065,1390,3.065,1391,4.973,1392,3.065,1393,3.065,1394,3.065,1395,3.065,1396,4.119,1397,3.065]],["title/dependencies.html",[1398,2.056,1399,3.581]],["body/dependencies.html",[10,0.032,19,0.032,35,0.042,174,0.643,214,0.032,215,0.036,216,0.032,217,0.032,317,1.474,432,1.636,495,1.882,912,3.806,1105,3.806,1400,4.636,1401,6.01,1402,4.636,1403,4.636,1404,5.333,1405,4.636,1406,4.636,1407,4.636,1408,4.636,1409,4.636,1410,4.636,1411,4.636,1412,4.636]],["title/miscellaneous/enumerations.html",[1413,1.761,1414,3.581]],["body/miscellaneous/enumerations.html",[10,0.036,15,0.304,19,0.036,25,0.935,27,0.634,35,0.041,38,0.942,40,0.304,54,0.46,68,0.304,97,0.935,105,0.304,128,1.612,214,0.031,215,0.036,216,0.031,217,0.031,238,1.306,240,1.049,265,1.049,573,1.612,666,3.431,1316,3.748,1317,4.34,1318,3.748,1337,4.34,1341,3.748,1345,3.748,1359,3.748,1360,3.21,1361,3.748,1362,3.748,1363,3.748,1364,3.748,1365,3.748,1366,4.711,1367,4.34,1368,3.748,1369,4.34,1370,3.748,1371,3.748,1415,3.21,1416,4.566,1417,4.566]],["title/index.html",[1057,2.056,1418,2.505,1419,2.505]],["body/index.html",[2,1.789,9,0.846,10,0.04,12,0.504,14,1.327,15,0.393,16,3.262,18,0.694,19,0.041,20,0.371,21,0.644,23,1.018,27,0.779,28,1.191,29,0.587,32,1.443,35,0.039,36,2.263,38,0.587,39,0.81,40,0.355,41,1.299,42,0.846,53,1.299,59,0.753,67,0.439,68,0.374,74,1.264,75,0.919,77,1.299,82,0.753,84,0.753,86,1.04,93,0.753,95,1.475,97,1.04,100,1.17,105,0.339,107,0.587,108,1.053,114,0.753,115,1.053,116,0.846,117,2.853,118,0.753,120,1.226,128,1.299,142,3.022,143,1.443,166,2.263,172,0.307,188,1.615,214,0.025,215,0.032,216,0.025,217,0.025,221,1.191,223,2.263,224,1.066,225,1.327,226,1.168,227,2.588,240,1.31,243,1.305,244,0.945,256,1.638,257,1.053,273,2.588,274,1.053,280,2.263,293,0.846,309,0.945,351,2.004,359,1.443,360,1.494,361,1.604,362,2.022,363,1.604,391,2.022,393,1.604,399,1.443,400,1.443,426,1.443,427,1.819,447,1.299,452,1.191,468,0.945,469,1.443,476,1.443,478,1.053,483,1.604,484,1.604,485,1.789,494,1.053,499,1.299,500,1.526,511,1.789,514,2.022,515,1.794,558,1.443,573,1.299,587,0.945,614,1.604,628,2.593,629,2.853,630,2.263,695,2.263,696,2.263,710,2.853,718,3.262,753,2.588,793,3.262,807,3.022,856,3.022,879,3.022,916,3.022,917,3.022,964,3.022,1060,2.004,1069,3.022,1070,3.022,1085,3.022,1141,3.022,1145,3.809,1199,3.022,1234,3.022,1235,3.022,1285,3.809,1420,3.681,1421,3.681,1422,3.681,1423,3.681,1424,3.681,1425,3.681,1426,3.681,1427,3.681,1428,3.681,1429,3.681,1430,3.681,1431,3.681,1432,3.681,1433,4.64,1434,3.681,1435,3.681,1436,3.681,1437,3.681,1438,3.681,1439,3.681,1440,3.681,1441,3.681,1442,3.681,1443,5.082,1444,3.681,1445,3.681,1446,3.681,1447,3.681,1448,3.681,1449,3.681,1450,3.681,1451,3.809,1452,3.681,1453,3.681,1454,3.681,1455,3.681,1456,3.681,1457,3.681,1458,3.681,1459,4.64,1460,3.681,1461,3.681,1462,3.681,1463,3.681,1464,3.681,1465,3.681,1466,3.681,1467,3.681,1468,3.681,1469,3.681,1470,3.681,1471,3.681,1472,3.681,1473,5.082,1474,3.681,1475,3.681,1476,3.681,1477,3.681,1478,3.681,1479,3.681,1480,3.681,1481,3.681,1482,3.681,1483,3.681,1484,3.681,1485,3.681,1486,3.681,1487,3.681,1488,3.681,1489,3.681]],["title/modules.html",[1490,4.044]],["body/modules.html",[10,0.033,19,0.033,35,0.037,214,0.033,215,0.037,216,0.033,217,0.033,1491,4.787]],["title/overview.html",[1492,4.044]],["body/overview.html",[2,2.305,8,0.566,10,0.032,19,0.032,35,0.037,75,0.756,214,0.032,215,0.037,216,0.032,217,0.032,236,2.583,354,2.305,567,2.067,587,1.218,1014,3.335,1015,4.436,1017,3.894,1493,4.744]],["title/properties.html",[891,2.939,1398,2.056]],["body/properties.html",[10,0.032,19,0.032,35,0.041,55,1.077,190,1.654,214,0.032,215,0.037,216,0.032,217,0.032,256,1.654,360,1.485,628,2.277,1086,3.846,1451,3.846,1494,4.686,1495,4.686,1496,4.686,1497,4.686,1498,4.686,1499,4.686,1500,4.686,1501,4.686,1502,4.686,1503,4.686,1504,4.686,1505,4.686]],["title/miscellaneous/typealiases.html",[1413,1.761,1506,3.581]],["body/miscellaneous/typealiases.html",[9,0.997,10,0.039,12,0.455,14,1.241,15,0.364,18,0.652,19,0.041,20,0.603,21,0.819,23,0.931,25,0.889,26,0.787,27,0.8,29,0.818,35,0.035,39,0.692,40,0.364,41,1.532,53,1.532,54,0.438,67,0.518,68,0.289,74,0.997,75,0.871,90,2.669,91,1.631,94,1.702,95,1.38,99,1.892,102,2.237,105,0.376,115,1.241,116,0.997,120,0.997,138,1.115,150,2.012,172,0.362,214,0.03,215,0.035,216,0.03,217,0.03,226,0.997,237,3.564,274,1.241,280,2.669,293,0.997,310,3.564,318,3.564,319,4.213,355,1.892,400,2.012,452,1.115,477,1.241,554,2.11,555,1.892,556,1.892,557,2.11,558,1.702,559,2.11,560,2.237,561,1.892,562,2.11,563,2.11,564,2.11,565,2.11,566,1.702,567,1.892,568,2.494,569,2.237,1343,4.213,1360,3.052,1415,3.052,1507,4.341,1508,4.486]],["title/miscellaneous/variables.html",[266,1.95,1413,1.761]],["body/miscellaneous/variables.html",[3,0.429,6,2.95,7,2.81,10,0.04,11,1.791,12,0.455,15,0.372,18,0.429,19,0.041,20,0.533,21,0.499,23,0.911,27,0.804,29,0.904,35,0.042,38,0.924,39,0.728,40,0.364,42,0.826,43,1.613,48,1.791,50,1.408,51,1.791,54,0.362,58,3.432,68,0.372,71,1.173,74,0.826,75,0.728,77,1.268,86,0.935,95,1.142,97,0.736,105,0.382,107,0.924,108,1.028,110,1.268,112,1.028,114,1.029,115,1.028,118,0.935,119,0.728,120,1.05,130,1.142,133,1.05,134,1.028,138,1.173,160,1.488,165,1.268,167,1.142,169,1.268,170,1.774,172,0.299,177,1.613,179,1.97,180,1.408,188,1.142,203,1.437,214,0.024,215,0.031,216,0.024,217,0.024,224,0.826,238,1.028,240,1.05,257,1.307,265,0.826,266,1.957,298,1.992,309,0.923,321,1.867,322,1.867,324,1.456,355,1.566,360,1.29,377,1.566,405,1.791,427,1.791,434,2.57,444,1.992,446,1.746,452,1.358,468,0.923,500,1.307,526,1.746,531,1.746,566,2.073,569,1.566,570,1.746,571,1.268,572,1.746,573,1.268,574,1.746,575,1.746,576,1.791,577,2.221,578,1.746,579,2.221,580,1.992,581,2.221,582,1.791,583,1.746,584,1.746,585,2.221,586,1.566,587,0.923,588,1.746,589,1.746,590,1.746,591,1.746,592,1.746,593,1.746,594,2.221,595,2.471,596,2.432,597,2.712,598,1.746,599,1.746,600,2.442,601,2.221,602,2.221,603,1.867,604,2.221,605,1.746,606,1.746,607,1.746,608,2.19,609,2.221,610,2.442,611,1.746,612,1.746,613,1.746,614,1.566,615,1.746,616,1.746,617,1.746,618,1.746,619,1.746,620,1.746,621,1.746,789,2.95,1197,2.209,1226,3.752,1415,2.526,1508,4.757,1509,3.593,1510,3.593,1511,3.593]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":658,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"injectables/YieldToMainService.html":{}}}],["0.045",{"_index":733,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["0.12.0",{"_index":1412,"title":{},"body":{"dependencies.html":{}}}],["0.355",{"_index":734,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["0.5rem",{"_index":720,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["1",{"_index":735,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["1.0.1",{"_index":1495,"title":{},"body":{"properties.html":{}}}],["1.0.1.tgz",{"_index":1453,"title":{},"body":{"index.html":{}}}],["1.1rem",{"_index":738,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["1.8",{"_index":747,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["100",{"_index":652,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["10rem",{"_index":654,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["1200ms",{"_index":730,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["15",{"_index":834,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["15.2.1",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["1f34fd603584",{"_index":367,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["1rem",{"_index":664,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["2",{"_index":1014,"title":{},"body":{"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{},"overview.html":{}}}],["2.4.0",{"_index":1410,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":678,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["2.7rem",{"_index":672,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["20",{"_index":186,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["25rem",{"_index":656,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["29",{"_index":686,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["3",{"_index":1015,"title":{},"body":{"components/SuspenseComponent.html":{},"overview.html":{}}}],["3rem",{"_index":669,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["4",{"_index":1017,"title":{},"body":{"components/SuspenseComponent.html":{},"overview.html":{}}}],["5",{"_index":1493,"title":{},"body":{"overview.html":{}}}],["50",{"_index":725,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["7.8.0",{"_index":1408,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":687,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["8.12.0",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["_clazzname",{"_index":1041,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["_err",{"_index":1099,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["_noop",{"_index":597,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["_padre_",{"_index":1016,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["_readystatus",{"_index":1080,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["absorber",{"_index":418,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["abstract",{"_index":521,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["abstracta",{"_index":509,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["acciones",{"_index":403,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["actual_component",{"_index":707,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["admite",{"_index":1246,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["afectar",{"_index":616,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["agrega",{"_index":343,"title":{},"body":{"injectables/EventService.html":{},"components/SuspenseComponent.html":{}}}],["agregada",{"_index":1047,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["ajustar",{"_index":715,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["ajv",{"_index":1406,"title":{},"body":{"dependencies.html":{}}}],["al",{"_index":82,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["alguna",{"_index":1285,"title":{},"body":{"classes/SuspenseableEventDriven.html":{},"index.html":{}}}],["alguno",{"_index":845,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["algunos",{"_index":884,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["algún",{"_index":1140,"title":{},"body":{"components/SuspenseComponent.html":{},"classes/SuspenseableBroadcaster.html":{}}}],["alias",{"_index":1360,"title":{},"body":{"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["align",{"_index":649,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["almacena",{"_index":779,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["almacenar",{"_index":73,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["anchor",{"_index":923,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["angular",{"_index":256,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"properties.html":{}}}],["angular/animations",{"_index":1400,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":432,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":174,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["animation",{"_index":728,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["anotherinput",{"_index":861,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["antes",{"_index":455,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["any)?.eventname",{"_index":1171,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["any)['scheduler'].posttask(task",{"_index":1397,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["any)['scheduling'].isinputpending",{"_index":1379,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["any)[param",{"_index":1024,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["análogamente",{"_index":1213,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{}}}],["api",{"_index":1392,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["aplica",{"_index":131,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["aplicable",{"_index":548,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["aplicaciones",{"_index":619,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["aplicación",{"_index":167,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["aplicando",{"_index":1431,"title":{},"body":{"index.html":{}}}],["aplicar",{"_index":358,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["app",{"_index":996,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["app.module",{"_index":605,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["aprovechar",{"_index":1256,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["apunta",{"_index":905,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["aqu",{"_index":101,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{}}}],["aquellos",{"_index":564,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["args",{"_index":276,"title":{},"body":{"injectables/EventService.html":{}}}],["argumentos",{"_index":283,"title":{},"body":{"injectables/EventService.html":{}}}],["array",{"_index":1019,"title":{},"body":{"components/SuspenseComponent.html":{},"injectables/YieldToMainService.html":{}}}],["arreglo",{"_index":340,"title":{},"body":{"injectables/EventService.html":{},"injectables/YieldToMainService.html":{}}}],["asegurando",{"_index":1263,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["asegurar",{"_index":917,"title":{},"body":{"components/SuspenseComponent.html":{},"index.html":{}}}],["asegurarse",{"_index":298,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["asegurese",{"_index":870,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["asigna",{"_index":109,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["asignar",{"_index":946,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["asignándole",{"_index":1340,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["asociada",{"_index":81,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{}}}],["asociadas",{"_index":752,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["asociado",{"_index":223,"title":{},"body":{"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{},"components/SuspenseComponent.html":{},"index.html":{}}}],["asumiendo",{"_index":501,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["async",{"_index":1143,"title":{},"body":{"components/SuspenseComponent.html":{},"injectables/YieldToMainService.html":{}}}],["atributo",{"_index":41,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["author",{"_index":1500,"title":{},"body":{"properties.html":{}}}],["auto",{"_index":659,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["autoexplicativo",{"_index":1462,"title":{},"body":{"index.html":{}}}],["await",{"_index":1077,"title":{},"body":{"components/SuspenseComponent.html":{},"injectables/YieldToMainService.html":{}}}],["aún",{"_index":1441,"title":{},"body":{"index.html":{}}}],["b30000",{"_index":668,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["background",{"_index":666,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{}}}],["bajo",{"_index":614,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["basada",{"_index":1200,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{}}}],["base",{"_index":1227,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["bastante",{"_index":245,"title":{},"body":{"injectables/EventService.html":{},"components/SuspenseComponent.html":{}}}],["behaviorsubject",{"_index":1233,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["behaviorsubject(false",{"_index":1243,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["bezier(0.645",{"_index":732,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["bien",{"_index":36,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{},"index.html":{}}}],["blocking",{"_index":1369,"title":{},"body":{"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{}}}],["bloque",{"_index":639,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["bloquear",{"_index":1321,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["bold",{"_index":680,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["boolean",{"_index":112,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/variables.html":{}}}],["booleano",{"_index":866,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["border",{"_index":719,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["box",{"_index":726,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["breve",{"_index":638,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["broadcast",{"_index":262,"title":{},"body":{"injectables/EventService.html":{}}}],["broadcast(name",{"_index":275,"title":{},"body":{"injectables/EventService.html":{}}}],["broadcaster",{"_index":440,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["broadcaster.ts",{"_index":1198,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{}}}],["broadcaster.ts:37",{"_index":1218,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{}}}],["broadcaster.ts:42",{"_index":1217,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{}}}],["broadcaster.ts:44",{"_index":1221,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{}}}],["broadcaster.ts:46",{"_index":1220,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{}}}],["broadcaster.ts:58",{"_index":1219,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{}}}],["broadcasterror",{"_index":368,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["broadcastload",{"_index":369,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["browser",{"_index":495,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"dependencies.html":{}}}],["bueno",{"_index":878,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["bundle",{"_index":810,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["buscar",{"_index":408,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["básica",{"_index":246,"title":{},"body":{"injectables/EventService.html":{}}}],["búsqeuda/rescate",{"_index":782,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["búsqueda",{"_index":769,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["cabe",{"_index":384,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["cach",{"_index":586,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["cache",{"_index":145,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/SuspenseCacheService.html":{}}}],["cache.service.ts",{"_index":751,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["cache.service.ts:11",{"_index":760,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["cache.service.ts:20",{"_index":773,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["cache.service.ts:30",{"_index":763,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["cache.service.ts:40",{"_index":778,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["cache.service.ts:48",{"_index":761,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["cada",{"_index":273,"title":{},"body":{"injectables/EventService.html":{},"components/SuspenseComponent.html":{},"index.html":{}}}],["callback",{"_index":272,"title":{},"body":{"injectables/EventService.html":{}}}],["cambia",{"_index":506,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["cambiando",{"_index":480,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["cambiar",{"_index":498,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["captura",{"_index":1201,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{}}}],["capturados",{"_index":392,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["capturar",{"_index":376,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["capturarlo",{"_index":308,"title":{},"body":{"injectables/EventService.html":{}}}],["carga",{"_index":226,"title":{},"body":{"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["cargado",{"_index":77,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cargados",{"_index":1473,"title":{},"body":{"index.html":{}}}],["cargan",{"_index":994,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["cargando",{"_index":710,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableBroadcaster.html":{},"index.html":{}}}],["cargar",{"_index":83,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["cargarla",{"_index":1097,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["cargándose",{"_index":794,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["casi",{"_index":828,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["caso",{"_index":97,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["casos",{"_index":514,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["catch",{"_index":1127,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["catch((suspenseerr",{"_index":1157,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["catch(rendererr",{"_index":1089,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["center",{"_index":648,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["cfd8dc",{"_index":722,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["children",{"_index":1426,"title":{},"body":{"index.html":{}}}],["ciclo",{"_index":462,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["ciertas",{"_index":402,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["ciertos",{"_index":389,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["claros",{"_index":888,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["clase",{"_index":28,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["clases",{"_index":587,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":182,"title":{"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"classes/SuspenseableRenderer.html":{}},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{}}}],["classic",{"_index":442,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["classic.ts",{"_index":1223,"title":{},"body":{"classes/SuspenseableClassic.html":{}}}],["classic.ts:11",{"_index":1225,"title":{},"body":{"classes/SuspenseableClassic.html":{}}}],["clazz",{"_index":777,"title":{},"body":{"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{}}}],["clazzmap",{"_index":755,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["clazzname",{"_index":34,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{}}}],["clazzname.tolowercase()).replace('component",{"_index":1132,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["clazzname?.tolowercase())?.startswith(eventname",{"_index":1130,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["clip",{"_index":683,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["cmp",{"_index":893,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["coincidan",{"_index":217,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":667,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["column",{"_index":717,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["combina",{"_index":1282,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["combinelatest",{"_index":1272,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["combinelatest([this.setupready",{"_index":1291,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["command",{"_index":249,"title":{},"body":{"injectables/EventService.html":{}}}],["comments",{"_index":817,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["commonmodule",{"_index":692,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["como",{"_index":39,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["comp",{"_index":576,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["comp.setup",{"_index":1073,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["comparación",{"_index":214,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["comparte",{"_index":106,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["compclazz",{"_index":1029,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["compcomponent",{"_index":854,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["compilacion",{"_index":909,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["completa",{"_index":806,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["compoente",{"_index":796,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["component",{"_index":190,"title":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}},"body":{"directives/DefaultViewDirective.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableBroadcaster.html":{},"properties.html":{}}}],["component_template",{"_index":698,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["componentclass",{"_index":194,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["componente",{"_index":18,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["componente...opcionalmente",{"_index":712,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["componente.\\nusando",{"_index":1119,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["componente/contenido",{"_index":222,"title":{},"body":{"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{}}}],["componente/módulo",{"_index":906,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["componentes",{"_index":75,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["componentfactory",{"_index":196,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["componentinstance",{"_index":1028,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["componentparams",{"_index":44,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{}}}],["componentref",{"_index":939,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["components",{"_index":699,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["comportamiento",{"_index":617,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["compparams",{"_index":943,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["compparams[param",{"_index":1027,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["compref",{"_index":924,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["comunicación",{"_index":977,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["con",{"_index":93,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"index.html":{}}}],["condicionada",{"_index":87,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["condiciones",{"_index":428,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["configuración",{"_index":423,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["configurado",{"_index":168,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{}}}],["configuration=development",{"_index":1485,"title":{},"body":{"index.html":{}}}],["considera",{"_index":510,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["consistencia",{"_index":299,"title":{},"body":{"injectables/EventService.html":{}}}],["consola",{"_index":595,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["console",{"_index":179,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["console.log('event_service",{"_index":584,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["console.log('suspense_cache",{"_index":591,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["console.log(`[qpsuspensecacheservice",{"_index":787,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["const",{"_index":336,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{}}}],["constructor",{"_index":65,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{}}}],["constructor(@inject(suspense_cache",{"_index":200,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["constructor(public",{"_index":233,"title":{},"body":{"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{}}}],["constructor(suspensecache",{"_index":66,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["constructor(tpl",{"_index":229,"title":{},"body":{"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{}}}],["constructor/factory",{"_index":104,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["contenedor",{"_index":955,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["contenedora",{"_index":220,"title":{},"body":{"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{}}}],["contenido",{"_index":636,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{}}}],["content",{"_index":647,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["contentchild",{"_index":1003,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["contentchild(defaultviewdirective",{"_index":960,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["contentchild(errorviewdirective",{"_index":973,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["contentchild(fallbackviewdirective",{"_index":981,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["contentchildren",{"_index":1005,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["contentchildren(suspense",{"_index":992,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["contexto",{"_index":531,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["contiene",{"_index":315,"title":{},"body":{"injectables/EventService.html":{}}}],["control",{"_index":808,"title":{},"body":{"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{}}}],["controla",{"_index":791,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["controlar",{"_index":986,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["contructor",{"_index":850,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["corrección",{"_index":1209,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{}}}],["corresponda",{"_index":936,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["corresponde",{"_index":898,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["correspondiente",{"_index":947,"title":{},"body":{"components/SuspenseComponent.html":{},"classes/SuspenseableBroadcaster.html":{}}}],["correspondientes",{"_index":851,"title":{},"body":{"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{}}}],["cqrs",{"_index":248,"title":{},"body":{"injectables/EventService.html":{}}}],["crea",{"_index":934,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["creada",{"_index":938,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["crear",{"_index":1044,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["createcomponent",{"_index":1006,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["createcomponent(compclazz",{"_index":1051,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["createngmodule",{"_index":1007,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["createngmodule(clazz[modulename",{"_index":1038,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["cruz",{"_index":1504,"title":{},"body":{"properties.html":{}}}],["css",{"_index":476,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["cuando",{"_index":293,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["cubic",{"_index":731,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["cuestión",{"_index":296,"title":{},"body":{"injectables/EventService.html":{},"components/SuspenseComponent.html":{}}}],["curso/proceso",{"_index":350,"title":{},"body":{"directives/FallbackViewDirective.html":{}}}],["cuya",{"_index":1199,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{},"index.html":{}}}],["cuyo",{"_index":565,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["código",{"_index":142,"title":{},"body":{"directives/DefaultViewDirective.html":{},"index.html":{}}}],["cómo",{"_index":640,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["d",{"_index":987,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["d9681becba9b",{"_index":1109,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["dado",{"_index":307,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["date",{"_index":585,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["dato",{"_index":318,"title":{},"body":{"injectables/EventService.html":{},"miscellaneous/typealiases.html":{}}}],["datos",{"_index":46,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"injectables/YieldToMainService.html":{}}}],["de",{"_index":19,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["deba",{"_index":395,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["debe",{"_index":31,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{}}}],["deben",{"_index":1477,"title":{},"body":{"index.html":{}}}],["deber",{"_index":841,"title":{},"body":{"components/SuspenseComponent.html":{},"classes/SuspenseableBroadcaster.html":{}}}],["debido",{"_index":1093,"title":{},"body":{"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{}}}],["debioera",{"_index":874,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["debug",{"_index":608,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["debug_suspense",{"_index":170,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["debugclazzmap",{"_index":756,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["decir",{"_index":571,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["declara",{"_index":864,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["declarado",{"_index":124,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["declarar",{"_index":907,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["declare",{"_index":448,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["decoradores",{"_index":157,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{}}}],["default",{"_index":556,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["defaultdisplay",{"_index":493,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["defaulteventdrivensetup",{"_index":1238,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["defaulteventdrivensetup(response",{"_index":1253,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["defaultview",{"_index":53,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["defaultview]'},{'name",{"_index":705,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["defaultview]=\"componentfactory",{"_index":111,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["defaultviewdirective",{"_index":1,"title":{"directives/DefaultViewDirective.html":{}},"body":{"directives/DefaultViewDirective.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["defecto",{"_index":160,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/variables.html":{}}}],["defer",{"_index":192,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["defido",{"_index":545,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["define",{"_index":11,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["definen",{"_index":962,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["definición",{"_index":1060,"title":{},"body":{"components/SuspenseComponent.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"index.html":{}}}],["definida",{"_index":1474,"title":{},"body":{"index.html":{}}}],["definidas",{"_index":332,"title":{},"body":{"injectables/EventService.html":{},"components/SuspenseComponent.html":{}}}],["definido",{"_index":67,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["definidos",{"_index":95,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["definir",{"_index":25,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["del",{"_index":29,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["demo",{"_index":1487,"title":{},"body":{"index.html":{}}}],["demás",{"_index":618,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["deno",{"_index":593,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["dentro",{"_index":42,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dependencias",{"_index":912,"title":{},"body":{"components/SuspenseComponent.html":{},"dependencies.html":{}}}],["dependencies",{"_index":1399,"title":{"dependencies.html":{}},"body":{}}],["dependiendo",{"_index":451,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["desarrollador",{"_index":848,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["desarrollo",{"_index":532,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["descaradamente",{"_index":1422,"title":{},"body":{"index.html":{}}}],["desconoce",{"_index":470,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["desconocida",{"_index":1267,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["descripción",{"_index":8,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"overview.html":{}}}],["descriptivos",{"_index":1363,"title":{},"body":{"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{}}}],["desde",{"_index":494,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["desea",{"_index":1465,"title":{},"body":{"index.html":{}}}],["deshabilita",{"_index":604,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["deshabilitar",{"_index":594,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["desplegada",{"_index":1049,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["desplegado",{"_index":429,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["desplegados",{"_index":1433,"title":{},"body":{"index.html":{}}}],["desplegar",{"_index":221,"title":{},"body":{"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["desplegarlos",{"_index":1071,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["desplegarse",{"_index":386,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["despliega",{"_index":507,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["despliegue",{"_index":473,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["después",{"_index":1150,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["desventajas",{"_index":818,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["detalle",{"_index":1141,"title":{},"body":{"components/SuspenseComponent.html":{},"index.html":{}}}],["detectar",{"_index":1179,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["determina",{"_index":1229,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["devolver",{"_index":1061,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["devuelto",{"_index":1268,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["devuelve",{"_index":149,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{}}}],["diferente",{"_index":869,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["difiera",{"_index":122,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["dinamica",{"_index":1118,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["dinamicamente",{"_index":589,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["dinamicos",{"_index":811,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["dinámica",{"_index":832,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["dinámicamente",{"_index":990,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["dinámico",{"_index":903,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["dinámicos",{"_index":790,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["directamente",{"_index":1448,"title":{},"body":{"index.html":{}}}],["direction",{"_index":644,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["directiva",{"_index":9,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["directivas",{"_index":2,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{},"components/SuspenseComponent.html":{},"index.html":{},"overview.html":{}}}],["directive",{"_index":0,"title":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{}},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{}}}],["directives",{"_index":704,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["disparado",{"_index":279,"title":{},"body":{"injectables/EventService.html":{}}}],["disparan",{"_index":401,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["dispare",{"_index":310,"title":{},"body":{"injectables/EventService.html":{},"miscellaneous/typealiases.html":{}}}],["display",{"_index":478,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["disponibilizada",{"_index":613,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["disponibilizan",{"_index":1211,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{}}}],["disponibilizando",{"_index":804,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["disponibles",{"_index":1455,"title":{},"body":{"index.html":{}}}],["documentado",{"_index":1489,"title":{},"body":{"index.html":{}}}],["dom",{"_index":624,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["donde",{"_index":14,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["done",{"_index":925,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["driven",{"_index":445,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["driven.ts",{"_index":1226,"title":{},"body":{"classes/SuspenseableEventDriven.html":{},"miscellaneous/variables.html":{}}}],["driven.ts:26",{"_index":1242,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["driven.ts:37",{"_index":1247,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["driven.ts:43",{"_index":1252,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["driven.ts:50",{"_index":1244,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["driven.ts:62",{"_index":1255,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["driven.ts:90",{"_index":1270,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["driven.ts:98",{"_index":1271,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["dynamic",{"_index":1105,"title":{},"body":{"components/SuspenseComponent.html":{},"dependencies.html":{}}}],["e",{"_index":855,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["ef%b8%8f",{"_index":366,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["efectivamente",{"_index":427,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ej",{"_index":899,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["ejecución",{"_index":270,"title":{},"body":{"injectables/EventService.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{},"injectables/YieldToMainService.html":{}}}],["ejecuta",{"_index":1067,"title":{},"body":{"components/SuspenseComponent.html":{},"injectables/YieldToMainService.html":{}}}],["ejecutadas",{"_index":1355,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["ejecutado",{"_index":388,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{}}}],["ejecutar",{"_index":280,"title":{},"body":{"injectables/EventService.html":{},"injectables/YieldToMainService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["ejecutarlas",{"_index":333,"title":{},"body":{"injectables/EventService.html":{}}}],["ejecutyado",{"_index":1324,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["ejemplo",{"_index":856,"title":{},"body":{"components/SuspenseComponent.html":{},"index.html":{}}}],["el",{"_index":12,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["elemento",{"_index":695,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"index.html":{}}}],["elementref",{"_index":433,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["elimina",{"_index":288,"title":{},"body":{"injectables/EventService.html":{},"components/SuspenseComponent.html":{}}}],["eliminar",{"_index":1180,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["ello",{"_index":1232,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["ellos",{"_index":242,"title":{},"body":{"injectables/EventService.html":{},"components/SuspenseComponent.html":{}}}],["embargo",{"_index":469,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["emitir",{"_index":239,"title":{},"body":{"injectables/EventService.html":{}}}],["en",{"_index":68,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["encargada",{"_index":329,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["encargan",{"_index":1480,"title":{},"body":{"index.html":{}}}],["encargar",{"_index":72,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["encontrar",{"_index":877,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["encuentra",{"_index":466,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["encuentre",{"_index":456,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["ende",{"_index":1062,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["entender",{"_index":1063,"title":{},"body":{"components/SuspenseComponent.html":{},"classes/SuspenseableClassic.html":{}}}],["entonces",{"_index":1429,"title":{},"body":{"index.html":{}}}],["entrada",{"_index":1351,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["entradas",{"_index":62,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["entre",{"_index":978,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["entregado",{"_index":155,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{}}}],["enum",{"_index":1359,"title":{},"body":{"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{}}}],["enumeraciones",{"_index":1416,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1414,"title":{"miscellaneous/enumerations.html":{}},"body":{}}],["environmentinjector",{"_index":926,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["error",{"_index":225,"title":{},"body":{"directives/ErrorViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["error'},{'name",{"_index":700,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["error('[defaulteventdrivensetup",{"_index":1294,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["error('eventhandler",{"_index":537,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["error('init",{"_index":529,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["error('setup",{"_index":536,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["error('usando",{"_index":543,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["error(`el",{"_index":1131,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["error.component.ts",{"_index":627,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["errores",{"_index":630,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableClassic.html":{},"index.html":{}}}],["errorview",{"_index":227,"title":{},"body":{"directives/ErrorViewDirective.html":{},"components/SuspenseComponent.html":{},"index.html":{}}}],["errorview]'},{'name",{"_index":706,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["errorviewdirective",{"_index":218,"title":{"directives/ErrorViewDirective.html":{}},"body":{"directives/ErrorViewDirective.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["es",{"_index":23,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["esa",{"_index":499,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["escrito",{"_index":901,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["escuchar",{"_index":1281,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["escuche",{"_index":1284,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["ese",{"_index":341,"title":{},"body":{"injectables/EventService.html":{},"components/SuspenseComponent.html":{}}}],["esm",{"_index":783,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["eso",{"_index":457,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["espacio",{"_index":1469,"title":{},"body":{"index.html":{}}}],["especial",{"_index":554,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["especifica",{"_index":1207,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{}}}],["especificado",{"_index":144,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["específico",{"_index":867,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["esperada",{"_index":357,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["est",{"_index":86,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["esta",{"_index":405,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["estado",{"_index":224,"title":{},"body":{"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["estados",{"_index":792,"title":{},"body":{"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{}}}],["estando",{"_index":471,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["estar",{"_index":100,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["estas",{"_index":1262,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["este",{"_index":309,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["esten",{"_index":575,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["estilo",{"_index":361,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["estilos",{"_index":1470,"title":{},"body":{"index.html":{}}}],["esto",{"_index":873,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["estos",{"_index":972,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["estoy",{"_index":956,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["estructura",{"_index":356,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["están",{"_index":94,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["estáticas",{"_index":1323,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["estén",{"_index":1069,"title":{},"body":{"components/SuspenseComponent.html":{},"index.html":{}}}],["etc",{"_index":465,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["event",{"_index":444,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["event_service",{"_index":582,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["eventhandler",{"_index":370,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["eventhandler(eventname",{"_index":382,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["eventhandlers",{"_index":843,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["eventname",{"_index":378,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["eventname}:error",{"_index":1175,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["eventname}:load",{"_index":1174,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["evento",{"_index":274,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["eventos",{"_index":130,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["eventos/comportamiento",{"_index":824,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["events",{"_index":259,"title":{},"body":{"injectables/EventService.html":{}}}],["eventservice",{"_index":235,"title":{"injectables/EventService.html":{}},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["eventssubject",{"_index":260,"title":{},"body":{"injectables/EventService.html":{}}}],["eventualmente",{"_index":153,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["everyday/tip",{"_index":185,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["eviar",{"_index":472,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["evita",{"_index":557,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["evitar",{"_index":146,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{}}}],["excepción",{"_index":1288,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["existan",{"_index":945,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["existe",{"_index":902,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["existencia",{"_index":767,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["exitosamente",{"_index":872,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["explicativos",{"_index":881,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["explícitamente",{"_index":171,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["explícito",{"_index":572,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["exponer",{"_index":612,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":181,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{}}}],["exportar",{"_index":908,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["expresamente",{"_index":559,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["extender",{"_index":844,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["extendiendo",{"_index":840,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["extends",{"_index":522,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["extiende",{"_index":1181,"title":{},"body":{"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{}}}],["extienden",{"_index":485,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["factory",{"_index":566,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["fall",{"_index":642,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableBroadcaster.html":{}}}],["fallara",{"_index":795,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["fallback",{"_index":1145,"title":{},"body":{"components/SuspenseComponent.html":{},"index.html":{}}}],["fallbackview",{"_index":351,"title":{},"body":{"directives/FallbackViewDirective.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"index.html":{}}}],["fallbackviewdirective",{"_index":348,"title":{"directives/FallbackViewDirective.html":{}},"body":{"directives/FallbackViewDirective.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["false",{"_index":603,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":675,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["favor",{"_index":882,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["fc04abb6eb87",{"_index":191,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["fetch",{"_index":60,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{}}}],["fetch(clazzname",{"_index":136,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["fetchclass",{"_index":1110,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["fetchclass().then((comp",{"_index":1112,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["fetching",{"_index":1471,"title":{},"body":{"index.html":{}}}],["fff",{"_index":681,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["fichero",{"_index":5,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{}}}],["filter",{"_index":1273,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["filtra",{"_index":1283,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["finalize",{"_index":1012,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["finalize(async",{"_index":1076,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["finished",{"_index":1427,"title":{},"body":{"index.html":{}}}],["first",{"_index":1387,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["flex",{"_index":643,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["flujo",{"_index":965,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["flujos",{"_index":461,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["font",{"_index":674,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["forkjoin",{"_index":1010,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["forkjoin(setup).pipe",{"_index":1074,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["forma",{"_index":1239,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["forzar",{"_index":1224,"title":{},"body":{"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{}}}],["from(this.compref.instance.setup()).pipe",{"_index":1124,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["fue",{"_index":1178,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["fuera",{"_index":1095,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["fuerza",{"_index":1204,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{}}}],["fuga",{"_index":1123,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["funcion",{"_index":415,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["funciona",{"_index":819,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["funcionamiento",{"_index":822,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["funciones",{"_index":271,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{}}}],["función",{"_index":138,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":1343,"title":{},"body":{"injectables/YieldToMainService.html":{},"miscellaneous/typealiases.html":{}}}],["g",{"_index":1505,"title":{},"body":{"properties.html":{}}}],["genera",{"_index":1134,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["general",{"_index":567,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["generar",{"_index":267,"title":{},"body":{"injectables/EventService.html":{},"components/SuspenseComponent.html":{}}}],["genere",{"_index":1122,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["getclazz",{"_index":757,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["getclazz(clazzname",{"_index":762,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["getclazzname",{"_index":61,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["getcomponent",{"_index":450,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["getcomponentinstance",{"_index":929,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["getcomponentinstance(clazz",{"_index":932,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["getting",{"_index":1418,"title":{"index.html":{}},"body":{}}],["github",{"_index":1446,"title":{},"body":{"index.html":{}}}],["guía",{"_index":847,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["ha",{"_index":143,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"injectables/YieldToMainService.html":{},"index.html":{}}}],["haber",{"_index":544,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["haberse",{"_index":89,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["habiendo",{"_index":375,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["habilita",{"_index":602,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["habilitado",{"_index":374,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["habilitar",{"_index":601,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["habitual",{"_index":574,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["hace",{"_index":918,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["hacerlo",{"_index":30,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["hacia",{"_index":141,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["hasclazz",{"_index":758,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["hasclazz(clazzname",{"_index":772,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["haserror",{"_index":1235,"title":{},"body":{"classes/SuspenseableEventDriven.html":{},"index.html":{}}}],["hasta",{"_index":458,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["hay",{"_index":216,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["haya",{"_index":98,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableClassic.html":{},"injectables/YieldToMainService.html":{}}}],["hayan",{"_index":76,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["hecho",{"_index":765,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["height",{"_index":653,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["here",{"_index":1381,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["heredado",{"_index":1189,"title":{},"body":{"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{}}}],["high",{"_index":1371,"title":{},"body":{"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{}}}],["hijos",{"_index":1066,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["html",{"_index":696,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"index.html":{}}}],["https://github.com/angular/angular/commit/97dc85ba5e4eb6cfa741908a04cfccb1459cec9b",{"_index":1018,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["https://github.com/queplan/qp",{"_index":1451,"title":{},"body":{"index.html":{},"properties.html":{}}}],["https://medium.com/@geor.oikonomopoulos/angular",{"_index":1104,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["https://medium.com/javascript",{"_index":184,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["https://netbasal.com/adding",{"_index":365,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["https://web.dev/optimize",{"_index":1327,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["idea",{"_index":1257,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["identificado",{"_index":289,"title":{},"body":{"injectables/EventService.html":{},"injectables/YieldToMainService.html":{}}}],["identificar",{"_index":413,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["ie",{"_index":989,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["if(!this.defaultview.onevent",{"_index":1116,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["if(clazzname",{"_index":206,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["if(eventname",{"_index":1172,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["if(isplatformbrowser(this.platformid",{"_index":502,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["if(useinit",{"_index":1277,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["if(watchuserinput",{"_index":1375,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["ignacio",{"_index":1502,"title":{},"body":{"properties.html":{}}}],["implementa",{"_index":1215,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{}}}],["implementación",{"_index":244,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["implementado",{"_index":530,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["implementar",{"_index":447,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["implemente",{"_index":125,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{}}}],["implements",{"_index":523,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["implmentación",{"_index":520,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["import",{"_index":172,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["importado",{"_index":825,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["importados",{"_index":588,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["importante",{"_index":22,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{}}}],["importarse",{"_index":863,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["imports",{"_index":693,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["imágenes",{"_index":633,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["incluir",{"_index":17,"title":{},"body":{"directives/DefaultViewDirective.html":{},"classes/SuspenseableBroadcaster.html":{}}}],["incluso",{"_index":255,"title":{},"body":{"injectables/EventService.html":{}}}],["incorporación",{"_index":971,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["independiente",{"_index":1048,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["index",{"_index":1057,"title":{"index.html":{}},"body":{"components/SuspenseComponent.html":{}}}],["indica",{"_index":305,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{}}}],["indicada",{"_index":1394,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["indicado",{"_index":344,"title":{},"body":{"injectables/EventService.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{}}}],["indicador",{"_index":711,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["indicar",{"_index":37,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{}}}],["indicarse",{"_index":913,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["indiquen",{"_index":1202,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{}}}],["infinite",{"_index":736,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/variables.html":{}}}],["informa",{"_index":278,"title":{},"body":{"injectables/EventService.html":{}}}],["información",{"_index":1482,"title":{},"body":{"index.html":{}}}],["informan",{"_index":1476,"title":{},"body":{"index.html":{}}}],["informar",{"_index":379,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["informarse",{"_index":396,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["informe",{"_index":1264,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["inherit",{"_index":481,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["inicial",{"_index":482,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["inicial/original",{"_index":497,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["inicializa",{"_index":339,"title":{},"body":{"injectables/EventService.html":{}}}],["inicializacion",{"_index":1250,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["inicialización",{"_index":416,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["inicializar",{"_index":264,"title":{},"body":{"injectables/EventService.html":{}}}],["inicialmente",{"_index":1280,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["iniciar",{"_index":459,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["init",{"_index":371,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["initialized",{"_index":1241,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["inject",{"_index":173,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["inject(elementref",{"_index":489,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["inject(environmentinjector",{"_index":967,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["inject(event_service",{"_index":975,"title":{},"body":{"components/SuspenseComponent.html":{},"classes/SuspenseableBroadcaster.html":{}}}],["inject(eventservice",{"_index":526,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["inject(injector",{"_index":983,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["inject(platform_id",{"_index":492,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["inject(renderer2",{"_index":488,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["inject(suspense_cache",{"_index":158,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["inject(suspense_log",{"_index":161,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{}}}],["inject(suspensecacheservice",{"_index":592,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":234,"title":{"injectables/EventService.html":{},"injectables/SuspenseCacheService.html":{},"injectables/Suspenseable.html":{},"injectables/YieldToMainService.html":{}},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{}}}],["injectiontoken",{"_index":434,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('debug_suspense",{"_index":606,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('eventservice",{"_index":583,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('suspense",{"_index":446,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('suspense_log",{"_index":620,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken>('suspensecache",{"_index":590,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":927,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["inmediatamente",{"_index":1046,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["inocente",{"_index":512,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["input",{"_index":33,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableBroadcaster.html":{},"injectables/YieldToMainService.html":{}}}],["input('defaultview",{"_index":195,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["instalación",{"_index":1439,"title":{},"body":{"index.html":{}}}],["instalar",{"_index":1444,"title":{},"body":{"index.html":{}}}],["install",{"_index":1450,"title":{},"body":{"index.html":{}}}],["instancia",{"_index":935,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["instanciado",{"_index":959,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["instanciar",{"_index":895,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["intentando",{"_index":1149,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["intentar",{"_index":1120,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["intentaron",{"_index":631,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["interface",{"_index":352,"title":{"interfaces/ISuspenseable.html":{},"interfaces/SuspenseableModule.html":{}},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["interfaces",{"_index":354,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"overview.html":{}}}],["internamente",{"_index":950,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["interpretarlo",{"_index":398,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["interrumpido",{"_index":1146,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["interrumpio",{"_index":1091,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["inyectables",{"_index":236,"title":{},"body":{"injectables/EventService.html":{},"injectables/SuspenseCacheService.html":{},"injectables/Suspenseable.html":{},"injectables/YieldToMainService.html":{},"overview.html":{}}}],["inyectado",{"_index":453,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["inyectarlo",{"_index":1326,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["inyectores",{"_index":969,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["ir",{"_index":853,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["islazy",{"_index":1058,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["ismodule",{"_index":63,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{}}}],["ismodule=true",{"_index":914,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["isplatformbrowser",{"_index":431,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["isready",{"_index":1293,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["isstandalone",{"_index":1032,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["isuspenseable",{"_index":353,"title":{"interfaces/ISuspenseable.html":{}},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["items",{"_index":650,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["iterando",{"_index":948,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["iterar",{"_index":330,"title":{},"body":{"injectables/EventService.html":{}}}],["jose",{"_index":1501,"title":{},"body":{"properties.html":{}}}],["json",{"_index":1266,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["justify",{"_index":646,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["key",{"_index":197,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{}}}],["keyframes",{"_index":742,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["keyof",{"_index":1025,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["keywords",{"_index":1496,"title":{},"body":{"properties.html":{}}}],["la",{"_index":27,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lanzar",{"_index":1287,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["las",{"_index":265,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lazy",{"_index":188,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lazy.component.html",{"_index":998,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["lazy.component.scss",{"_index":1000,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["lcp",{"_index":1467,"title":{},"body":{"index.html":{}}}],["le",{"_index":304,"title":{},"body":{"injectables/EventService.html":{},"components/SuspenseComponent.html":{}}}],["leer",{"_index":883,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["left",{"_index":663,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["lets",{"_index":1424,"title":{},"body":{"index.html":{}}}],["leyenda",{"_index":694,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["librería",{"_index":1440,"title":{},"body":{"index.html":{}}}],["libs/.../default",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../event.service.ts",{"_index":1507,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../suspense.component.ts",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../suspenseable",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../types.ts",{"_index":1508,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../yield",{"_index":1417,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/suspense/components/qp",{"_index":626,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["libs/suspense/directives/default",{"_index":6,"title":{},"body":{"directives/DefaultViewDirective.html":{},"miscellaneous/variables.html":{}}}],["libs/suspense/directives/error",{"_index":219,"title":{},"body":{"directives/ErrorViewDirective.html":{}}}],["libs/suspense/directives/fallback",{"_index":349,"title":{},"body":{"directives/FallbackViewDirective.html":{}}}],["libs/suspense/services/event.service.ts",{"_index":237,"title":{},"body":{"injectables/EventService.html":{},"miscellaneous/typealiases.html":{}}}],["libs/suspense/services/event.service.ts:22",{"_index":314,"title":{},"body":{"injectables/EventService.html":{}}}],["libs/suspense/services/event.service.ts:27",{"_index":312,"title":{},"body":{"injectables/EventService.html":{}}}],["libs/suspense/services/event.service.ts:32",{"_index":263,"title":{},"body":{"injectables/EventService.html":{}}}],["libs/suspense/services/event.service.ts:63",{"_index":303,"title":{},"body":{"injectables/EventService.html":{}}}],["libs/suspense/services/event.service.ts:83",{"_index":287,"title":{},"body":{"injectables/EventService.html":{}}}],["libs/suspense/services/event.service.ts:95",{"_index":277,"title":{},"body":{"injectables/EventService.html":{}}}],["libs/suspense/services/suspense",{"_index":750,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["libs/suspense/services/yield",{"_index":1316,"title":{},"body":{"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{}}}],["libs/suspense/src/lib/suspense/suspense.component.ts",{"_index":789,"title":{},"body":{"components/SuspenseComponent.html":{},"miscellaneous/variables.html":{}}}],["libs/suspense/src/lib/suspense/suspense.component.ts:152",{"_index":954,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["libs/suspense/src/lib/suspense/suspense.component.ts:158",{"_index":961,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["libs/suspense/src/lib/suspense/suspense.component.ts:159",{"_index":982,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["libs/suspense/src/lib/suspense/suspense.component.ts:160",{"_index":974,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["libs/suspense/src/lib/suspense/suspense.component.ts:177",{"_index":993,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["libs/suspense/src/lib/suspense/suspense.component.ts:183",{"_index":968,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["libs/suspense/src/lib/suspense/suspense.component.ts:184",{"_index":984,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["libs/suspense/src/lib/suspense/suspense.component.ts:190",{"_index":976,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["libs/suspense/src/lib/suspense/suspense.component.ts:196",{"_index":985,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["libs/suspense/src/lib/suspense/suspense.component.ts:201",{"_index":957,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["libs/suspense/src/lib/suspense/suspense.component.ts:207",{"_index":966,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["libs/suspense/src/lib/suspense/suspense.component.ts:213",{"_index":931,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["libs/suspense/src/lib/suspense/suspense.component.ts:227",{"_index":944,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["libs/suspense/src/lib/suspense/suspense.component.ts:246",{"_index":933,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["libs/suspense/src/lib/suspense/suspense.component.ts:278",{"_index":940,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["libs/suspense/src/lib/suspense/suspense.component.ts:450",{"_index":941,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["libs/suspense/types/suspenseable",{"_index":1197,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"miscellaneous/variables.html":{}}}],["libs/suspense/types/types.ts",{"_index":355,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/suspense/types/types.ts:110",{"_index":1315,"title":{},"body":{"classes/SuspenseableRenderer.html":{}}}],["libs/suspense/types/types.ts:124",{"_index":1187,"title":{},"body":{"injectables/Suspenseable.html":{}}}],["libs/suspense/types/types.ts:125",{"_index":1186,"title":{},"body":{"injectables/Suspenseable.html":{}}}],["libs/suspense/types/types.ts:130",{"_index":1192,"title":{},"body":{"injectables/Suspenseable.html":{}}}],["libs/suspense/types/types.ts:135",{"_index":1191,"title":{},"body":{"injectables/Suspenseable.html":{}}}],["libs/suspense/types/types.ts:137",{"_index":1185,"title":{},"body":{"injectables/Suspenseable.html":{}}}],["libs/suspense/types/types.ts:141",{"_index":1188,"title":{},"body":{"injectables/Suspenseable.html":{}}}],["libs/suspense/types/types.ts:150",{"_index":1184,"title":{},"body":{"injectables/Suspenseable.html":{}}}],["libs/suspense/types/types.ts:159",{"_index":1183,"title":{},"body":{"injectables/Suspenseable.html":{}}}],["libs/suspense/types/types.ts:171",{"_index":1182,"title":{},"body":{"injectables/Suspenseable.html":{}}}],["libs/suspense/types/types.ts:22",{"_index":422,"title":{},"body":{"interfaces/ISuspenseable.html":{}}}],["libs/suspense/types/types.ts:41",{"_index":383,"title":{},"body":{"interfaces/ISuspenseable.html":{}}}],["libs/suspense/types/types.ts:48",{"_index":380,"title":{},"body":{"interfaces/ISuspenseable.html":{}}}],["libs/suspense/types/types.ts:55",{"_index":373,"title":{},"body":{"interfaces/ISuspenseable.html":{}}}],["libs/suspense/types/types.ts:62",{"_index":414,"title":{},"body":{"interfaces/ISuspenseable.html":{}}}],["libs/suspense/types/types.ts:72",{"_index":1310,"title":{},"body":{"interfaces/SuspenseableModule.html":{}}}],["libs/suspense/types/types.ts:88",{"_index":1314,"title":{},"body":{"classes/SuspenseableRenderer.html":{}}}],["libs/suspense/types/types.ts:89",{"_index":1312,"title":{},"body":{"classes/SuspenseableRenderer.html":{}}}],["libs/suspense/types/types.ts:90",{"_index":1313,"title":{},"body":{"classes/SuspenseableRenderer.html":{}}}],["libs/suspense/types/types.ts:92",{"_index":1311,"title":{},"body":{"classes/SuspenseableRenderer.html":{}}}],["license",{"_index":1497,"title":{},"body":{"properties.html":{}}}],["limpia",{"_index":1162,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["line",{"_index":671,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["lista",{"_index":1249,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["listener",{"_index":302,"title":{},"body":{"injectables/EventService.html":{}}}],["listener(...args",{"_index":338,"title":{},"body":{"injectables/EventService.html":{}}}],["listenerfunction",{"_index":319,"title":{},"body":{"injectables/EventService.html":{},"miscellaneous/typealiases.html":{}}}],["listeners",{"_index":261,"title":{},"body":{"injectables/EventService.html":{}}}],["listo",{"_index":381,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["listos",{"_index":1070,"title":{},"body":{"components/SuspenseComponent.html":{},"index.html":{}}}],["literal",{"_index":90,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{},"miscellaneous/typealiases.html":{}}}],["llamada",{"_index":1135,"title":{},"body":{"components/SuspenseComponent.html":{},"classes/SuspenseableBroadcaster.html":{}}}],["llamadas",{"_index":300,"title":{},"body":{"injectables/EventService.html":{}}}],["llamando",{"_index":1260,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["llamar",{"_index":411,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["llave",{"_index":768,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["llaves",{"_index":949,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["lleg",{"_index":1245,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["lleva",{"_index":868,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["lo",{"_index":108,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":394,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["loaded",{"_index":189,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["loader",{"_index":718,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"index.html":{}}}],["loader/spinner/otro",{"_index":1055,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["loader::after",{"_index":737,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["loading",{"_index":1428,"title":{},"body":{"index.html":{}}}],["log",{"_index":165,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["lograr",{"_index":871,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["long",{"_index":1328,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["los",{"_index":74,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["low",{"_index":1370,"title":{},"body":{"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{}}}],["luego",{"_index":410,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["lugar",{"_index":827,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["líbrería",{"_index":615,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["lógica",{"_index":359,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["magia",{"_index":1481,"title":{},"body":{"index.html":{}}}],["magic",{"_index":816,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["main",{"_index":1389,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["main.service.ts",{"_index":1317,"title":{},"body":{"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{}}}],["main.service.ts:24",{"_index":1334,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["main.service.ts:32",{"_index":1357,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["main.service.ts:44",{"_index":1349,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["main.service.ts:77",{"_index":1338,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["mal",{"_index":900,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["malo",{"_index":551,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["manera",{"_index":500,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["map",{"_index":313,"title":{},"body":{"injectables/EventService.html":{},"injectables/SuspenseCacheService.html":{},"classes/SuspenseableEventDriven.html":{}}}],["mapa",{"_index":290,"title":{},"body":{"injectables/EventService.html":{}}}],["marcas",{"_index":1475,"title":{},"body":{"index.html":{}}}],["margin",{"_index":657,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["max",{"_index":655,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["mayor",{"_index":807,"title":{},"body":{"components/SuspenseComponent.html":{},"index.html":{}}}],["mayoría",{"_index":880,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["medida",{"_index":803,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["medium",{"_index":1345,"title":{},"body":{"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{}}}],["mejor",{"_index":798,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["memoria",{"_index":467,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["menos",{"_index":518,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["mensaje",{"_index":1208,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{}}}],["mensajes",{"_index":164,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{}}}],["meta",{"_index":45,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["mientras",{"_index":793,"title":{},"body":{"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{},"index.html":{}}}],["minimización",{"_index":809,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["minimizar",{"_index":1466,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1413,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{}}],["miscelánea",{"_index":1415,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misma",{"_index":846,"title":{},"body":{"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{}}}],["mismo",{"_index":829,"title":{},"body":{"components/SuspenseComponent.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{}}}],["mit",{"_index":1498,"title":{},"body":{"properties.html":{}}}],["modelo",{"_index":247,"title":{},"body":{"injectables/EventService.html":{}}}],["modifica",{"_index":951,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["modo",{"_index":133,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/variables.html":{}}}],["modulename",{"_index":1035,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["moduleref",{"_index":1037,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["moduleref.instance.getcomponent",{"_index":1040,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["modules",{"_index":1490,"title":{"modules.html":{}},"body":{}}],["modulo",{"_index":835,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["momento",{"_index":426,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["monitoreados",{"_index":1138,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["monitoreo",{"_index":1261,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["mostrar",{"_index":166,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{},"index.html":{}}}],["motivos",{"_index":897,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["moz",{"_index":688,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["ms",{"_index":689,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["mucho",{"_index":1458,"title":{},"body":{"index.html":{}}}],["muestra",{"_index":1085,"title":{},"body":{"components/SuspenseComponent.html":{},"index.html":{}}}],["muy",{"_index":511,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["mycomponent",{"_index":1459,"title":{},"body":{"index.html":{}}}],["más",{"_index":573,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["método",{"_index":534,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["métodos",{"_index":59,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"index.html":{}}}],["módulo",{"_index":115,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["módulo/componente",{"_index":921,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["módulos",{"_index":1491,"title":{},"body":{"modules.html":{}}}],["múltiples",{"_index":1151,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["name",{"_index":282,"title":{},"body":{"injectables/EventService.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["navegacion",{"_index":1094,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["navegaciones",{"_index":1152,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["navegador",{"_index":596,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/variables.html":{}}}],["navigator",{"_index":1378,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["ndice",{"_index":54,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["necesario",{"_index":875,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["necesidad",{"_index":1325,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["new",{"_index":324,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/variables.html":{}}}],["newconsole",{"_index":610,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1079,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["ng",{"_index":1086,"title":{},"body":{"components/SuspenseComponent.html":{},"properties.html":{}}}],["ngafterviewinit",{"_index":464,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["ngcomponentoutlet",{"_index":1108,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["ngif",{"_index":1009,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["nginit",{"_index":1297,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["ngmoduleref",{"_index":1008,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["ngondestroy",{"_index":524,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["ngoninit",{"_index":421,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["nico",{"_index":1435,"title":{},"body":{"index.html":{}}}],["nombre",{"_index":26,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/typealiases.html":{}}}],["none",{"_index":479,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["normal",{"_index":535,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["normales",{"_index":563,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["notifica",{"_index":539,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["notificar",{"_index":1167,"title":{},"body":{"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{}}}],["notlazycomponent",{"_index":1002,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["npm",{"_index":1443,"title":{},"body":{"index.html":{}}}],["nuevamente",{"_index":147,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["null",{"_index":1165,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["number",{"_index":746,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["numérico",{"_index":713,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["o",{"_index":120,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":491,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["object.keys(clazz",{"_index":1034,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["object.keys(clazz).shift",{"_index":1036,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["object.keys(comp).shift",{"_index":1129,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["object.keys(compparams).filter(v",{"_index":1020,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["objeto",{"_index":43,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["obligar",{"_index":519,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["observable",{"_index":268,"title":{},"body":{"injectables/EventService.html":{},"classes/SuspenseableEventDriven.html":{}}}],["observableinput",{"_index":430,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["observer",{"_index":254,"title":{},"body":{"injectables/EventService.html":{}}}],["obtener",{"_index":904,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["obtenidda",{"_index":1030,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["octagon",{"_index":665,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["oculta",{"_index":474,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["off(name",{"_index":286,"title":{},"body":{"injectables/EventService.html":{}}}],["on(name",{"_index":301,"title":{},"body":{"injectables/EventService.html":{}}}],["ondestroy",{"_index":435,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["onevent",{"_index":64,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableBroadcaster.html":{}}}],["oninit",{"_index":436,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["oop",{"_index":1479,"title":{},"body":{"index.html":{}}}],["opcional",{"_index":24,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{}}}],["opcionalidad",{"_index":85,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["opcionalmente",{"_index":749,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["opción",{"_index":813,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["operacion",{"_index":980,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["operaciones",{"_index":419,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["operación",{"_index":134,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["operación/operaciones",{"_index":1231,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["operando",{"_index":540,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["operar",{"_index":527,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["original",{"_index":599,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["originalconsole",{"_index":600,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["otherinput",{"_index":859,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["otra",{"_index":1298,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["otro",{"_index":826,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["out",{"_index":1383,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["output",{"_index":821,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["overview",{"_index":1492,"title":{"overview.html":{}},"body":{}}],["p",{"_index":660,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["package",{"_index":1398,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padre",{"_index":849,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["paquete",{"_index":1449,"title":{},"body":{"index.html":{}}}],["para",{"_index":105,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":199,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{}}}],["params",{"_index":320,"title":{},"body":{"injectables/EventService.html":{},"components/SuspenseComponent.html":{}}}],["params.foreach(param",{"_index":1023,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["params.length",{"_index":1022,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["particulares",{"_index":885,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["parámetro",{"_index":110,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["parámetros",{"_index":70,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"injectables/YieldToMainService.html":{}}}],["pasar",{"_index":1296,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["pasarlo",{"_index":148,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["pasarán",{"_index":284,"title":{},"body":{"injectables/EventService.html":{}}}],["paso",{"_index":1236,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["path",{"_index":684,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["patrón",{"_index":253,"title":{},"body":{"injectables/EventService.html":{}}}],["pendientes",{"_index":1147,"title":{},"body":{"components/SuspenseComponent.html":{},"injectables/YieldToMainService.html":{}}}],["pending",{"_index":1377,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["pensada",{"_index":417,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["pensando",{"_index":838,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["permite",{"_index":238,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["permiten",{"_index":970,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["permitir",{"_index":269,"title":{},"body":{"injectables/EventService.html":{}}}],["pero",{"_index":99,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["persistir",{"_index":294,"title":{},"body":{"injectables/EventService.html":{}}}],["petición",{"_index":140,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["pick",{"_index":1216,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{}}}],["plano",{"_index":1320,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["platform_id",{"_index":437,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["platformid",{"_index":490,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["poco",{"_index":1361,"title":{},"body":{"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{}}}],["podemos",{"_index":1432,"title":{},"body":{"index.html":{}}}],["poder",{"_index":297,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{}}}],["podríamos",{"_index":397,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["polygon",{"_index":685,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["por",{"_index":107,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["posibilidad",{"_index":385,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["posible",{"_index":580,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["posiblemente",{"_index":516,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["posibles",{"_index":513,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["prefetch",{"_index":187,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["prefijo",{"_index":129,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["preparación",{"_index":424,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["presentarse",{"_index":1464,"title":{},"body":{"index.html":{}}}],["previamente",{"_index":78,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/SuspenseCacheService.html":{}}}],["previo",{"_index":1352,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["primary",{"_index":739,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["priori",{"_index":549,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["prioridad",{"_index":1341,"title":{},"body":{"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{}}}],["prioridades",{"_index":814,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["prioritization",{"_index":1106,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["prioritizetask",{"_index":1331,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["prioritizetask(task",{"_index":1335,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["priority",{"_index":1336,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["private",{"_index":754,"title":{},"body":{"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{}}}],["probablemente",{"_index":910,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["proceso",{"_index":460,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["procesos",{"_index":390,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["produce",{"_index":1358,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["producido",{"_index":1203,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{}}}],["producir",{"_index":1353,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["programar",{"_index":837,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["project",{"_index":1486,"title":{},"body":{"index.html":{}}}],["promesa",{"_index":561,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/typealiases.html":{}}}],["promise",{"_index":150,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/typealiases.html":{}}}],["promise(resolve",{"_index":1372,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["properties",{"_index":891,"title":{"properties.html":{}},"body":{"components/SuspenseComponent.html":{}}}],["propiedades",{"_index":55,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"classes/SuspenseableRenderer.html":{},"properties.html":{}}}],["provecho",{"_index":831,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["provee",{"_index":1237,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["proveedor",{"_index":570,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["proveedores",{"_index":47,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["provide",{"_index":48,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":321,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":169,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":180,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["proyección",{"_index":635,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["proyecto",{"_index":1483,"title":{},"body":{"index.html":{}}}],["ptimo",{"_index":833,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["public",{"_index":56,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{}}}],["publicada",{"_index":1442,"title":{},"body":{"index.html":{}}}],["pudiera",{"_index":154,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["pudo",{"_index":1159,"title":{},"body":{"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{}}}],["pueda",{"_index":88,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["puede",{"_index":117,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"index.html":{}}}],["pueden",{"_index":1354,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["página",{"_index":802,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["qp",{"_index":628,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"index.html":{},"properties.html":{}}}],["qpsuspenseerrorcomponent",{"_index":622,"title":{"components/QpSuspenseErrorComponent.html":{}},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["qpsuspensespinnercomponent",{"_index":701,"title":{"components/QpSuspenseSpinnerComponent.html":{}},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["que",{"_index":10,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["queplan/qp",{"_index":175,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["query",{"_index":250,"title":{},"body":{"injectables/EventService.html":{}}}],["querylist",{"_index":991,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["queue",{"_index":1384,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["quiere",{"_index":894,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["quizás",{"_index":1295,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["radius",{"_index":724,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["raptando",{"_index":1421,"title":{},"body":{"index.html":{}}}],["rea",{"_index":13,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{}}}],["react",{"_index":362,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["reactiva",{"_index":1133,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["reactivo",{"_index":135,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["read",{"_index":890,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["reading",{"_index":892,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["ready",{"_index":1139,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["realice",{"_index":1210,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{}}}],["realiza",{"_index":420,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["realizar",{"_index":139,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableBroadcaster.html":{}}}],["realizarse",{"_index":409,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["realmente",{"_index":919,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["reas",{"_index":963,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["reciba",{"_index":607,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["recibe",{"_index":1463,"title":{},"body":{"index.html":{}}}],["recibido",{"_index":1205,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{}}}],["recibir",{"_index":1148,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["recomendada",{"_index":404,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["recomienda",{"_index":916,"title":{},"body":{"components/SuspenseComponent.html":{},"index.html":{}}}],["recorre",{"_index":1065,"title":{},"body":{"components/SuspenseComponent.html":{},"injectables/YieldToMainService.html":{}}}],["reemplazar",{"_index":823,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["ref",{"_index":183,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["referencia",{"_index":958,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["referenciando",{"_index":1447,"title":{},"body":{"index.html":{}}}],["referencias",{"_index":1163,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["registrados",{"_index":291,"title":{},"body":{"injectables/EventService.html":{}}}],["registre",{"_index":306,"title":{},"body":{"injectables/EventService.html":{}}}],["registro",{"_index":163,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{}}}],["reimplementar",{"_index":842,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["rendercomponenteready",{"_index":508,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["renderer",{"_index":487,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["renderer2",{"_index":438,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["rendererr",{"_index":1098,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["renderizado",{"_index":1092,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["repositorio",{"_index":1445,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1499,"title":{},"body":{"properties.html":{}}}],["requeridas",{"_index":517,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["requerido",{"_index":525,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["requeridos",{"_index":812,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["requerimiento",{"_index":1436,"title":{},"body":{"index.html":{}}}],["requerimientos",{"_index":1434,"title":{},"body":{"index.html":{}}}],["requerir",{"_index":558,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["requiera",{"_index":1364,"title":{},"body":{"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{}}}],["requieran",{"_index":552,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["requiere",{"_index":123,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"components/SuspenseComponent.html":{}}}],["rescata",{"_index":152,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/SuspenseCacheService.html":{}}}],["rescatar",{"_index":496,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["rescate",{"_index":770,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["reservando",{"_index":1468,"title":{},"body":{"index.html":{}}}],["resolver",{"_index":1269,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["respaldo",{"_index":598,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["responde",{"_index":1289,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["responder",{"_index":425,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["response",{"_index":1265,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["responsibility",{"_index":251,"title":{},"body":{"injectables/EventService.html":{}}}],["respuesta",{"_index":555,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["respuestas",{"_index":1286,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["restringido",{"_index":634,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["resuelve",{"_index":1346,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["result",{"_index":1391,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["resultados",{"_index":215,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resultan",{"_index":886,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["resumiendo",{"_index":1457,"title":{},"body":{"index.html":{}}}],["retornar",{"_index":449,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["return",{"_index":203,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":202,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{}}}],["reutilizar",{"_index":581,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["revert",{"_index":662,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["root",{"_index":322,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/variables.html":{}}}],["rotate(0deg",{"_index":744,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["rotate(360deg",{"_index":745,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["rotation",{"_index":729,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["row",{"_index":645,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["run",{"_index":1386,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["rxjs",{"_index":317,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"dependencies.html":{}}}],["sabe",{"_index":876,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["sabemos",{"_index":568,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["saber",{"_index":1248,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["saca",{"_index":830,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["sacar",{"_index":915,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["sans",{"_index":676,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["santa",{"_index":1503,"title":{},"body":{"properties.html":{}}}],["scale",{"_index":714,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["scheduler",{"_index":1395,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["scheduling",{"_index":1393,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["se",{"_index":15,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sea",{"_index":452,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":364,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{}}}],["segregation",{"_index":252,"title":{},"body":{"injectables/EventService.html":{}}}],["segundo",{"_index":1319,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["según",{"_index":964,"title":{},"body":{"components/SuspenseComponent.html":{},"index.html":{}}}],["selector",{"_index":52,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["sen",{"_index":775,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["sencilla",{"_index":1240,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["sepamos",{"_index":533,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["ser",{"_index":118,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serif",{"_index":677,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["servicio",{"_index":71,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/variables.html":{}}}],["servir",{"_index":412,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["serán",{"_index":391,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["setclazz",{"_index":759,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["setclazz(clazzname",{"_index":776,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["setcomponentparams",{"_index":930,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["setcomponentparams(compref",{"_index":942,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["setea",{"_index":937,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["setear",{"_index":1300,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["seteen",{"_index":1258,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["settimeout(resolve",{"_index":1373,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["setup",{"_index":372,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["setupready",{"_index":1234,"title":{},"body":{"classes/SuspenseableEventDriven.html":{},"index.html":{}}}],["señalar",{"_index":121,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["señale",{"_index":995,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["señales",{"_index":258,"title":{},"body":{"injectables/EventService.html":{}}}],["shift",{"_index":1382,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["show",{"_index":928,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["si",{"_index":114,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["siempre",{"_index":295,"title":{},"body":{"injectables/EventService.html":{},"components/SuspenseComponent.html":{}}}],["sigue",{"_index":1228,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["simple",{"_index":629,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"index.html":{}}}],["simplemente",{"_index":1050,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["simples",{"_index":1362,"title":{},"body":{"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{}}}],["sin",{"_index":468,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["singleton",{"_index":579,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["size",{"_index":670,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["sizing",{"_index":727,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["sobre",{"_index":331,"title":{},"body":{"injectables/EventService.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["solamente",{"_index":132,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["solid",{"_index":721,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["solo",{"_index":1168,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["son",{"_index":400,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["soporta",{"_index":820,"title":{},"body":{"components/SuspenseComponent.html":{},"injectables/YieldToMainService.html":{}}}],["source",{"_index":4,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{}}}],["spinner",{"_index":709,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["spinner'},{'name",{"_index":702,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["spinner.component.ts",{"_index":708,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["spinner.component.ts:89",{"_index":748,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["standalone",{"_index":116,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["start",{"_index":1484,"title":{},"body":{"index.html":{}}}],["started",{"_index":1419,"title":{"index.html":{}},"body":{}}],["static",{"_index":1330,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["string",{"_index":79,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["styles",{"_index":623,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["styleurls",{"_index":999,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["su",{"_index":84,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["subject",{"_index":311,"title":{},"body":{"injectables/EventService.html":{},"components/SuspenseComponent.html":{}}}],["subscribe",{"_index":281,"title":{},"body":{"injectables/EventService.html":{},"components/SuspenseComponent.html":{}}}],["subtipo",{"_index":550,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["subtipos",{"_index":484,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["suficiente",{"_index":1461,"title":{},"body":{"index.html":{}}}],["sufijo",{"_index":1206,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{}}}],["super",{"_index":1275,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["supone",{"_index":764,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["supuestamente",{"_index":1488,"title":{},"body":{"index.html":{}}}],["supuesto",{"_index":1460,"title":{},"body":{"index.html":{}}}],["sus",{"_index":96,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"components/SuspenseComponent.html":{}}}],["suscribe",{"_index":1279,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["suscribirse",{"_index":241,"title":{},"body":{"injectables/EventService.html":{}}}],["suscripción",{"_index":328,"title":{},"body":{"injectables/EventService.html":{},"components/SuspenseComponent.html":{}}}],["suscriptores",{"_index":316,"title":{},"body":{"injectables/EventService.html":{}}}],["suspense",{"_index":360,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["suspense/directives",{"_index":1013,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["suspense/releases",{"_index":1456,"title":{},"body":{"index.html":{}}}],["suspense/releases/download/v1.0.1/queplan",{"_index":1452,"title":{},"body":{"index.html":{}}}],["suspense/services",{"_index":176,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["suspense/types",{"_index":178,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{}}}],["suspense_cache",{"_index":51,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["suspense_log",{"_index":177,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["suspenseable",{"_index":21,"title":{"injectables/Suspenseable.html":{}},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["suspenseable:124",{"_index":1308,"title":{},"body":{"classes/SuspenseableInModule.html":{}}}],["suspenseable:125",{"_index":1307,"title":{},"body":{"classes/SuspenseableInModule.html":{}}}],["suspenseable:130",{"_index":1302,"title":{},"body":{"classes/SuspenseableInModule.html":{}}}],["suspenseable:135",{"_index":1301,"title":{},"body":{"classes/SuspenseableInModule.html":{}}}],["suspenseable:137",{"_index":1306,"title":{},"body":{"classes/SuspenseableInModule.html":{}}}],["suspenseable:141",{"_index":1309,"title":{},"body":{"classes/SuspenseableInModule.html":{}}}],["suspenseable:150",{"_index":1305,"title":{},"body":{"classes/SuspenseableInModule.html":{}}}],["suspenseable:159",{"_index":1304,"title":{},"body":{"classes/SuspenseableInModule.html":{}}}],["suspenseable:171",{"_index":1303,"title":{},"body":{"classes/SuspenseableInModule.html":{}}}],["suspenseablebroadcaster",{"_index":439,"title":{"classes/SuspenseableBroadcaster.html":{}},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["suspenseableclassic",{"_index":441,"title":{"classes/SuspenseableClassic.html":{}},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["suspenseableeventdriven",{"_index":443,"title":{"classes/SuspenseableEventDriven.html":{}},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["suspenseableinmodule",{"_index":553,"title":{"classes/SuspenseableInModule.html":{}},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["suspenseablemodule",{"_index":126,"title":{"interfaces/SuspenseableModule.html":{}},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["suspenseablerenderer",{"_index":486,"title":{"classes/SuspenseableRenderer.html":{}},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["suspenseablerenderer)?.rendercomponenteready",{"_index":1083,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["suspenseablerenderer:110",{"_index":1190,"title":{},"body":{"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{}}}],["suspenseablerenderer:88",{"_index":1196,"title":{},"body":{"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{}}}],["suspenseablerenderer:89",{"_index":1194,"title":{},"body":{"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{}}}],["suspenseablerenderer:90",{"_index":1195,"title":{},"body":{"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{}}}],["suspenseablerenderer:92",{"_index":1193,"title":{},"body":{"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{}}}],["suspenseables",{"_index":839,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["suspensecache",{"_index":57,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["suspensecacheservice",{"_index":49,"title":{"injectables/SuspenseCacheService.html":{}},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["suspensecomponent",{"_index":703,"title":{"components/SuspenseComponent.html":{}},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["suspenseconsole",{"_index":58,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{},"miscellaneous/variables.html":{}}}],["suspenseconsole.error('verifique",{"_index":1161,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["suspenseconsole.error(`no",{"_index":1158,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["suspenseconsole.log('[defaulteventdrivensetup",{"_index":1276,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["suspenseconsole.log('componente",{"_index":1033,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["suspenseconsole.log('devolviendo",{"_index":213,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["suspenseconsole.log('not",{"_index":1064,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["suspenseconsole.log('seteando",{"_index":209,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["suspenseconsole.log('usando",{"_index":207,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["suspenseconsole.log(`${eventname}:error",{"_index":1156,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["suspenseconsole.log(`${eventname}:load",{"_index":1144,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["suspenseconsole.log(`eliminando",{"_index":1173,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["suspenseconsole.log(`eventhandlers",{"_index":1136,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["suspenseconsole.log(`no",{"_index":1117,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["suspenseconsole.log(this.anchor.length",{"_index":1154,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["suspenseconsole.warn('se",{"_index":1090,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["suspenseerr",{"_index":1160,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["suspensefactorypromise",{"_index":102,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["svelte",{"_index":1420,"title":{},"body":{"index.html":{}}}],["sólo",{"_index":538,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["t",{"_index":771,"title":{},"body":{"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/YieldToMainService.html":{}}}],["takeuntil",{"_index":1011,"title":{},"body":{"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{}}}],["takeuntil(this.done",{"_index":1075,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["tamaño",{"_index":716,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["tan",{"_index":887,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["tanto",{"_index":879,"title":{},"body":{"components/SuspenseComponent.html":{},"index.html":{}}}],["tap",{"_index":1274,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["tarea",{"_index":1339,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["tareas",{"_index":1318,"title":{},"body":{"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{}}}],["task",{"_index":1342,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["taskpriority",{"_index":1337,"title":{},"body":{"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{}}}],["taskpriority.medium",{"_index":1344,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["tasks",{"_index":1329,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["tasks.length",{"_index":1374,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["tasks.shift",{"_index":1388,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["tasks?.shift",{"_index":1385,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["tdefaultsuspenseable",{"_index":560,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["tdefaultsuspenseable).default",{"_index":1042,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["tdefaultsuspenseable)[_clazzname",{"_index":1043,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["template",{"_index":690,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["templateref",{"_index":230,"title":{},"body":{"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{}}}],["templateurl",{"_index":997,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["tenemos",{"_index":1430,"title":{},"body":{"index.html":{}}}],["tenga",{"_index":911,"title":{},"body":{"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{}}}],["termina",{"_index":852,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["terminar",{"_index":1096,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["text",{"_index":673,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["texto",{"_index":637,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["there's",{"_index":1380,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["this.anchor.clear",{"_index":1054,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.anchor.createcomponent(compclazz",{"_index":1045,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.anchor.createembeddedview(this.fallbackview.tpl",{"_index":1056,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.anchor.length",{"_index":1153,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.anchor?.clear",{"_index":1084,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.anchor?.createembeddedview(this.errorview.tpl",{"_index":1101,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.anchor?.insert(this.compref.hostview",{"_index":1126,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.anchor?.remove(0",{"_index":1100,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.anotherinput",{"_index":862,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.broadcasterror",{"_index":1214,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{}}}],["this.broadcastload",{"_index":1212,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{}}}],["this.clazzmap",{"_index":788,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["this.clazzmap.get(clazzname",{"_index":785,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["this.clazzmap.has(clazzname",{"_index":784,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["this.clazzmap.set(clazzname",{"_index":786,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["this.clazzname",{"_index":204,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["this.componentfactory",{"_index":211,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["this.componentparams?.clazzname",{"_index":205,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["this.compref",{"_index":1113,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.compref.instance",{"_index":1125,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.compref.instance.eventhandler(eventname",{"_index":1137,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.compref?.destroy",{"_index":1164,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.compref?.instance",{"_index":1170,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.defaultdisplay",{"_index":503,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["this.defaultview.componentparams",{"_index":1115,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.defaultview.fetch(clazzname",{"_index":1111,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.defaultview.getclazzname",{"_index":1103,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.defaultview.ismodule",{"_index":1031,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.defaultview.onevent",{"_index":1128,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.defaultview?.fetch",{"_index":1059,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.defaultview?.onevent",{"_index":1169,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.done.next(false",{"_index":1102,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.done.next(true",{"_index":1088,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.environmentinjector",{"_index":1052,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.eventname",{"_index":406,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["this.events",{"_index":326,"title":{},"body":{"injectables/EventService.html":{}}}],["this.events.subscribe",{"_index":334,"title":{},"body":{"injectables/EventService.html":{}}}],["this.eventservice.broadcast(`${this.eventname}:error",{"_index":547,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["this.eventservice.broadcast(`${this.eventname}:load",{"_index":542,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["this.eventservice.off(`${eventname}:error",{"_index":1177,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.eventservice.off(`${eventname}:load",{"_index":1176,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.eventservice.on(`${eventname}:error",{"_index":1155,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.eventservice.on(`${eventname}:load",{"_index":1142,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.eventssubject",{"_index":325,"title":{},"body":{"injectables/EventService.html":{}}}],["this.eventssubject.asobservable",{"_index":327,"title":{},"body":{"injectables/EventService.html":{}}}],["this.eventssubject.next",{"_index":347,"title":{},"body":{"injectables/EventService.html":{}}}],["this.getcomponentinstance(comp",{"_index":1114,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.haserror]).pipe",{"_index":1292,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["this.init",{"_index":1278,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["this.injector",{"_index":1039,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.input",{"_index":858,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.listeners",{"_index":323,"title":{},"body":{"injectables/EventService.html":{}}}],["this.listeners.delete(name",{"_index":346,"title":{},"body":{"injectables/EventService.html":{}}}],["this.listeners.get(name",{"_index":337,"title":{},"body":{"injectables/EventService.html":{}}}],["this.listeners.has(name",{"_index":335,"title":{},"body":{"injectables/EventService.html":{}}}],["this.listeners.set(name",{"_index":342,"title":{},"body":{"injectables/EventService.html":{}}}],["this.listeners?.get(name)?.push(listener",{"_index":345,"title":{},"body":{"injectables/EventService.html":{}}}],["this.ngoninit",{"_index":857,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.otherinput",{"_index":860,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.rendercomponenteready",{"_index":541,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["this.renderer.setstyle(this.elementref.nativeelement",{"_index":505,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["this.setcomponentparams(componentinstance.instance",{"_index":1053,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.setupready.pipe",{"_index":1290,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["this.show",{"_index":1087,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.suspenseables.foreach(comp",{"_index":1082,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.suspenseables.map((comp",{"_index":1072,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["this.suspensecache.getclazz(clazzname",{"_index":212,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["this.suspensecache.hasclazz(clazzname",{"_index":208,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["this.suspensecache.setclazz(clazzname",{"_index":210,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["this.suspenseconsole",{"_index":201,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{}}}],["thread",{"_index":1390,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["throw",{"_index":528,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["tiene",{"_index":407,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["til",{"_index":292,"title":{},"body":{"injectables/EventService.html":{}}}],["times",{"_index":691,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["tipo",{"_index":20,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tl;dr",{"_index":836,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["todos",{"_index":483,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["toggleconsole",{"_index":609,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["toggleconsole(inject(debug_suspense",{"_index":621,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["tomar",{"_index":865,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["top",{"_index":661,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["tpl",{"_index":228,"title":{},"body":{"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{}}}],["trae",{"_index":1423,"title":{},"body":{"index.html":{}}}],["transform",{"_index":740,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["translate3d(0",{"_index":743,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["translate3d(0,0,0",{"_index":741,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["transparent",{"_index":723,"title":{},"body":{"components/QpSuspenseSpinnerComponent.html":{}}}],["tras",{"_index":1230,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["través",{"_index":393,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["tree",{"_index":625,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["true",{"_index":119,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1081,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["trás",{"_index":1121,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["tslib",{"_index":1409,"title":{},"body":{"dependencies.html":{}}}],["tsuspenseable",{"_index":569,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":91,"title":{},"body":{"directives/DefaultViewDirective.html":{},"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":1506,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeerror",{"_index":889,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["typeof",{"_index":1026,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["types",{"_index":1222,"title":{},"body":{"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{}}}],["típicamente",{"_index":1299,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["ui",{"_index":1322,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["un",{"_index":40,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"injectables/EventService.html":{},"directives/FallbackViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["una",{"_index":243,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"index.html":{}}}],["undefined",{"_index":156,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{}}}],["unknown",{"_index":198,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{}}}],["uno",{"_index":1068,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["until",{"_index":1425,"title":{},"body":{"index.html":{}}}],["usa",{"_index":632,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["usado",{"_index":781,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["usados",{"_index":1166,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["usando",{"_index":477,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["usar",{"_index":32,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["usarlo",{"_index":641,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["useexisting",{"_index":578,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["useinit",{"_index":1254,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["user",{"_index":1366,"title":{},"body":{"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{}}}],["user_blocking",{"_index":1368,"title":{},"body":{"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{}}}],["user_visible",{"_index":1365,"title":{},"body":{"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{}}}],["users",{"_index":1472,"title":{},"body":{"index.html":{}}}],["usesuspense",{"_index":577,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["usesuspense(notlazycomponent",{"_index":1001,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["usevalue",{"_index":50,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":1107,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["uso",{"_index":515,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["usuario",{"_index":800,"title":{},"body":{"components/SuspenseComponent.html":{},"injectables/YieldToMainService.html":{}}}],["utilice",{"_index":988,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["utiliza",{"_index":257,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["utilizada",{"_index":562,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["utilizado",{"_index":979,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["utilizando",{"_index":780,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["utilizar",{"_index":128,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["utilizarse",{"_index":1251,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["ux",{"_index":799,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["v",{"_index":1021,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["v14",{"_index":1438,"title":{},"body":{"index.html":{}}}],["va",{"_index":16,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/SuspenseComponent.html":{},"index.html":{}}}],["valor",{"_index":38,"title":{},"body":{"directives/DefaultViewDirective.html":{},"interfaces/ISuspenseable.html":{},"components/QpSuspenseSpinnerComponent.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["valores",{"_index":1259,"title":{},"body":{"classes/SuspenseableEventDriven.html":{}}}],["van",{"_index":753,"title":{},"body":{"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"index.html":{}}}],["var",{"_index":697,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{}}}],["variable",{"_index":377,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":266,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/EventService.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{},"miscellaneous/variables.html":{}}}],["variedad",{"_index":1478,"title":{},"body":{"index.html":{}}}],["varios",{"_index":896,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["ve",{"_index":801,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["ventajas",{"_index":797,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["verifica",{"_index":774,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["verificación",{"_index":766,"title":{},"body":{"injectables/SuspenseCacheService.html":{}}}],["verificar",{"_index":1350,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["verifique",{"_index":546,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["version",{"_index":1494,"title":{},"body":{"properties.html":{}}}],["versiones",{"_index":1454,"title":{},"body":{"index.html":{}}}],["versión",{"_index":1437,"title":{},"body":{"index.html":{}}}],["vez",{"_index":387,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["vida",{"_index":463,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["view.directive.ts",{"_index":7,"title":{},"body":{"directives/DefaultViewDirective.html":{},"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{},"miscellaneous/variables.html":{}}}],["view.directive.ts:12",{"_index":231,"title":{},"body":{"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{}}}],["view.directive.ts:13",{"_index":232,"title":{},"body":{"directives/ErrorViewDirective.html":{},"directives/FallbackViewDirective.html":{}}}],["view.directive.ts:32",{"_index":103,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["view.directive.ts:39",{"_index":80,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["view.directive.ts:46",{"_index":92,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["view.directive.ts:54",{"_index":127,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["view.directive.ts:61",{"_index":113,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["view.directive.ts:67",{"_index":69,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["view.directive.ts:73",{"_index":159,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["view.directive.ts:81",{"_index":151,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["view.directive.ts:92",{"_index":137,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["viewchild",{"_index":1004,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["viewchild('anchor",{"_index":953,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["viewcontainerref",{"_index":952,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["vigilar",{"_index":1356,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["visible",{"_index":1367,"title":{},"body":{"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{}}}],["vista",{"_index":454,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["void",{"_index":285,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"injectables/SuspenseCacheService.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableClassic.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{}}}],["vs",{"_index":805,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["vue",{"_index":363,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["válido",{"_index":920,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["vía",{"_index":475,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["warn",{"_index":611,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"miscellaneous/variables.html":{}}}],["watchuserinput",{"_index":1348,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["webkit",{"_index":682,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["webpack",{"_index":815,"title":{},"body":{"components/SuspenseComponent.html":{}}}],["webpackprefetch",{"_index":193,"title":{},"body":{"directives/DefaultViewDirective.html":{}}}],["weight",{"_index":679,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{}}}],["width",{"_index":651,"title":{},"body":{"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{}}}],["window",{"_index":1396,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["window.getcomputedstyle(this.elementref.nativeelement).getpropertyvalue('display",{"_index":504,"title":{},"body":{"interfaces/ISuspenseable.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{}}}],["wrapper",{"_index":162,"title":{},"body":{"directives/DefaultViewDirective.html":{},"components/QpSuspenseErrorComponent.html":{},"components/QpSuspenseSpinnerComponent.html":{},"components/SuspenseComponent.html":{},"classes/SuspenseableEventDriven.html":{}}}],["y",{"_index":240,"title":{},"body":{"injectables/EventService.html":{},"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableBroadcaster.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"injectables/YieldToMainService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ya",{"_index":399,"title":{},"body":{"interfaces/ISuspenseable.html":{},"components/SuspenseComponent.html":{},"injectables/Suspenseable.html":{},"classes/SuspenseableEventDriven.html":{},"classes/SuspenseableInModule.html":{},"interfaces/SuspenseableModule.html":{},"classes/SuspenseableRenderer.html":{},"index.html":{}}}],["yield",{"_index":1376,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["yieldtaskarray",{"_index":1332,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["yieldtaskarray(tasks",{"_index":1347,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["yieldtomain",{"_index":1333,"title":{},"body":{"injectables/YieldToMainService.html":{}}}],["yieldtomainservice",{"_index":922,"title":{"injectables/YieldToMainService.html":{}},"body":{"components/SuspenseComponent.html":{},"injectables/YieldToMainService.html":{}}}],["yieldtomainservice.yieldtomain",{"_index":1078,"title":{},"body":{"components/SuspenseComponent.html":{},"injectables/YieldToMainService.html":{}}}],["zone.js",{"_index":1411,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"directives/DefaultViewDirective.html":{"url":"directives/DefaultViewDirective.html","title":"directive - DefaultViewDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directivas\n  DefaultViewDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            libs/suspense/directives/default-view.directive.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Directiva que define el área donde se va a incluir el componente de tipo Suspenseable.\nIMPORTANTE: Es opcional definir el nombre de la clase del componente. De hacerlo se debe usar el\n            @Input() clazzName ó bien indicar el valor como un atributo 'clazzName' dentro del objeto\n            @Input() componentParams\n\n            \n\n\n\n\n        \n            Meta datos\n            \n                \n                    \n                        Proveedores\n                        \n                            \n                                {\n    provide: SuspenseCacheService, useValue: SUSPENSE_CACHE\n}\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [defaultView]\n                    \n\n                \n            \n        \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                suspenseCache\n                            \n                            \n                                suspenseConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                fetch\n                            \n                            \n                                getClazzName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                clazzName\n                            \n                            \n                                componentParams\n                            \n                            \n                                defaultView\n                            \n                            \n                                isModule\n                            \n                            \n                                onEvent\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(suspenseCache: SuspenseCacheService)\n                    \n                \n                        \n                            \n                                Definido en libs/suspense/directives/default-view.directive.ts:67\n                            \n                        \n\n                \n                    \n                            Constructor de la directiva.\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        suspenseCache\n                                                  \n                                                        \n                                                                        SuspenseCacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que se encargará de almacenar los componentes que se hayan cargado previamente.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Entradas\n        \n            \n                \n                    \n                        \n                        clazzName\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definido en libs/suspense/directives/default-view.directive.ts:39\n                            \n                        \n                \n                    \n                        (opcional) Nombre de la clase asociada al componente a cargar.\nIMPORTANTE: Su opcionalidad está condicionada a que el valor de clazzName\n            pueda haberse definido previamente dentro del @Input() componentParams\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        componentParams\n                    \n                \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                        \n                            \n                                    Definido en libs/suspense/directives/default-view.directive.ts:46\n                            \n                        \n                \n                    \n                        (opcional) Objeto con los parámetros del Componente, que están definidos como sus @Input()\nIMPORTANTE: Es opcional (caso que no haya @Input()), pero clazzName debe estar definido aquí ó\n            en el @Input() clazzName\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultView\n                    \n                \n                \n                    \n                        Tipo :         SuspenseFactoryPromise\n\n                    \n                \n                        \n                            \n                                    Definido en libs/suspense/directives/default-view.directive.ts:32\n                            \n                        \n                \n                    \n                        Constructor/Factory para el componente a cargar. Comparte el nombre de la directiva, por lo que se\nse asigna como parámetro.\n[defaultView]=\"componentFactory\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isModule\n                    \n                \n                \n                    \n                        Tipo :     boolean | string\n\n                    \n                \n                        \n                            \n                                    Definido en libs/suspense/directives/default-view.directive.ts:61\n                            \n                        \n                \n                    \n                        (opcional) Indicará si el componente que se va a cargar está definido dentro de un módulo (no es standalone). Puede ser true o\nseñalar el nombre del módulo (en caso que difiera del nombre del componente). Requiere que el módulo donde está declarado el componente\nimplemente SuspenseableModule.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onEvent\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definido en libs/suspense/directives/default-view.directive.ts:54\n                            \n                        \n                \n                    \n                        (opcional) Nombre que se utilizará como prefijo para los eventos. Aplica solamente para el modo de operación reactivo.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        fetch\n                        \n                    \n                \n            \n            \n                \nfetch(clazzName?: string)\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/directives/default-view.directive.ts:92\n                \n            \n\n\n            \n                \n                    La función fetch() se encargará de realizar la petición hacia el código del componente a cargar.\nSi se ha especificado el nombre de la clase del componente, se utilizará el cache para evitar realizar\nla petición nuevamente.\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    clazzName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                    \n                                        opcional, en caso de pasarlo como parámetro se usará el cache\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         SuspenseFactoryPromise\n\n                    \n                    \n                        Promise que devuelve el componente a cargar\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getClazzName\n                        \n                    \n                \n            \n            \n                \ngetClazzName()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/directives/default-view.directive.ts:81\n                \n            \n\n\n            \n                \n                    Rescata el nombre de la clase que eventualmente pudiera haberse entregado como parámetro del componente.\n\n\n                    \n                    \n                    \n                        Devuelve :     string | undefined\n\n                    \n                    \n                        Nombre de la clase del componente a cargar\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        suspenseCache\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SuspenseCacheService\n\n                    \n                \n                \n                    \n                        Decoradores : \n                        \n                        \n                            @Inject(SUSPENSE_CACHE)\n                        \n                    \n                \n                    \n                        \n                                Definido en libs/suspense/directives/default-view.directive.ts:73\n                        \n                    \n\n            \n                \n                    Servicio que se encargará de almacenar los componentes que se hayan cargado previamente.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        suspenseConsole\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : inject(SUSPENSE_LOG)\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/directives/default-view.directive.ts:67\n                        \n                    \n\n            \n                \n                    Wrapper para función de registro de mensajes de log.\nMostrará los mensajes solamente si la aplicación ha configurado el provider DEBUG_SUSPENSE explícitamente en true.\n\n                \n            \n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, inject, Inject, Input } from '@angular/core';\nimport { SuspenseCacheService } from '@queplan/qp-suspense/services';\nimport { SuspenseFactoryPromise, SUSPENSE_CACHE, SUSPENSE_LOG } from '@queplan/qp-suspense/types';\n\nlet suspenseConsole: Console;\n\n/**\n * Directiva que define el área donde se va a incluir el componente de tipo Suspenseable.\n * IMPORTANTE: Es opcional definir el nombre de la clase del componente. De hacerlo se debe usar el \n *             @Input() clazzName ó bien indicar el valor como un atributo 'clazzName' dentro del objeto \n *             @Input() componentParams\n */\n@Directive({\n  selector  : '[defaultView]',\n  standalone: true,\n  providers : [ \n    {\n      provide: SuspenseCacheService,\n      useValue: SUSPENSE_CACHE\n    }\n  ]\n})\nexport class DefaultViewDirective {\n  // Ref: https://medium.com/javascript-everyday/tip-20-prefetch-lazy-loaded-component-fc04abb6eb87\n  // defer(() => import(/* webpackPrefetch: true |  */'').then( ({ [ComponentClass] }) => ComponentClass ))\n\n  /**\n   * Constructor/Factory para el componente a cargar. Comparte el nombre de la directiva, por lo que se\n   * se asigna como parámetro. \n   * `[defaultView]=\"componentFactory\"`\n   */\n  @Input('defaultView') componentFactory!: SuspenseFactoryPromise;  \n\n  /**\n   * (opcional) Nombre de la clase asociada al componente a cargar.\n   * IMPORTANTE: Su opcionalidad está condicionada a que el valor de clazzName \n   *             pueda haberse definido previamente dentro del @Input() componentParams\n   */\n  @Input() clazzName?         : string;\n\n  /**\n   * (opcional) Objeto con los parámetros del Componente, que están definidos como sus @Input()\n   * IMPORTANTE: Es opcional (caso que no haya @Input()), pero clazzName debe estar definido aquí ó\n   *             en el @Input() clazzName\n   */\n  @Input() componentParams?   : { \n    clazzName?: string | undefined,\n    [key: string]: unknown \n  };\n\n  /**\n   * (opcional) Nombre que se utilizará como prefijo para los eventos. Aplica solamente para el modo de operación reactivo.\n   */\n  @Input() onEvent?: string;\n\n  /**\n   * (opcional) Indicará si el componente que se va a cargar está definido dentro de un módulo (no es standalone). Puede ser true o \n   * señalar el nombre del módulo (en caso que difiera del nombre del componente). Requiere que el módulo donde está declarado el componente\n   * implemente SuspenseableModule.\n   */\n  @Input() isModule?          : boolean | string;\n\n  /**\n   * Wrapper para función de registro de mensajes de log.\n   * Mostrará los mensajes solamente si la aplicación ha configurado el provider DEBUG_SUSPENSE explícitamente en true.\n   */\n  suspenseConsole = inject(SUSPENSE_LOG);\n\n  /**\n   * Constructor de la directiva.\n   * @param suspenseCache Servicio que se encargará de almacenar los componentes que se hayan cargado previamente.\n   */\n  constructor(@Inject(SUSPENSE_CACHE) public suspenseCache: SuspenseCacheService) {\n    suspenseConsole = this.suspenseConsole;\n  }\n\n  /**\n   * Rescata el nombre de la clase que eventualmente pudiera haberse entregado como parámetro del componente.\n   * @returns {string | undefined} Nombre de la clase del componente a cargar\n   */\n  getClazzName(): string | undefined {\n    return this.clazzName ?? this.componentParams?.clazzName;\n  }\n\n  /**\n   * La función fetch() se encargará de realizar la petición hacia el código del componente a cargar.\n   * Si se ha especificado el nombre de la clase del componente, se utilizará el cache para evitar realizar\n   * la petición nuevamente.\n   * @param clazzName opcional, en caso de pasarlo como parámetro se usará el cache\n   * @returns {SuspenseFactoryPromise} Promise que devuelve el componente a cargar\n   */\n  fetch(clazzName?: string): SuspenseFactoryPromise {  \n    if(clazzName) {\n      suspenseConsole.log('Usando cache para clazzName: ', clazzName);\n      if (!this.suspenseCache.hasClazz(clazzName)) {\n        suspenseConsole.log('Seteando cache para clazzName: ', clazzName);\n        this.suspenseCache.setClazz(clazzName, this.componentFactory);\n      }       \n      return this.suspenseCache.getClazz(clazzName);\n    } else {\n      suspenseConsole.log('Devolviendo componentFactory');\n      return this.componentFactory;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"directives/ErrorViewDirective.html":{"url":"directives/ErrorViewDirective.html","title":"directive - ErrorViewDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directivas\n  ErrorViewDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            libs/suspense/directives/error-view.directive.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Directiva para definir el área contenedora donde se desplegará el\ncomponente/contenido asociado al estado de error de carga de un\ncomponente de tipo Suspenseable.\n\n            \n\n\n\n\n        \n            Meta datos\n            \n                \n\n                    \n                        Selector\n                        [errorView]\n                    \n\n                \n            \n        \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                tpl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tpl: TemplateRef)\n                    \n                \n                        \n                            \n                                Definido en libs/suspense/directives/error-view.directive.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        tpl\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tpl\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/directives/error-view.directive.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * Directiva para definir el área contenedora donde se desplegará el\n * componente/contenido asociado al estado de error de carga de un \n * componente de tipo Suspenseable.\n */\n@Directive({\n  selector: '[errorView]',\n  standalone: true,\n})\nexport class ErrorViewDirective {\n  constructor(public tpl: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/EventService.html":{"url":"injectables/EventService.html","title":"injectable - EventService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Inyectables\n  EventService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            libs/suspense/services/event.service.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Servicio que permite emitir eventos y suscribirse a ellos.\nUna implementación bastante básica del modelo CQRS (Command Query Responsibility Segregation), patrón Observer,\no incluso del modelo de eventos de Angular que utiliza \"señales\".\n\n            \n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                events\n                            \n                            \n                                eventsSubject\n                            \n                            \n                                listeners\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                broadcast\n                            \n                            \n                                off\n                            \n                            \n                                on\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en libs/suspense/services/event.service.ts:32\n                            \n                        \n\n                \n                    \n                            Constructor del servicio. Se encargará de inicializar las variables y de generar el observable que permitirá suscribirse a los eventos\ny la ejecución de las funciones de callback que se hayan definido para cada evento.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        broadcast\n                        \n                    \n                \n            \n            \n                \nbroadcast(name: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/services/event.service.ts:95\n                \n            \n\n\n            \n                \n                    Informa al servicio que se ha \"disparado\" un evento, de modo de que pueda ejecutar las funciones de callback.\nEl subscribe del constructor se encargará de la ejecución de las funciones de callback.\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nombre del evento.\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Argumentos que se pasarán a la función de callback.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        off\n                        \n                    \n                \n            \n            \n                \noff(name: string)\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/services/event.service.ts:83\n                \n            \n\n\n            \n                \n                    Elimina el evento identificado por \"name\" del mapa de evento registrados.\nEs útil cuando no se requiere persistir \"para siempre\" el evento en cuestión, de modo de poder\nasegurarse la consistencia de las llamadas del callback dentro de la aplicación.\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nombre del evento.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        on\n                        \n                    \n                \n            \n            \n                \non(name: string, listener: any)\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/services/event.service.ts:63\n                \n            \n\n\n            \n                \n                    Le indica al servicio que registre un evento con el nombre dado, de modo de poder capturarlo cuando este se \"dispare\".\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nombre del evento.\n\n                                    \n                                \n                                \n                                    listener\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Función que se ejecutará cuando se dispare el evento.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        events\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Observable\n\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/services/event.service.ts:32\n                        \n                    \n\n            \n                \n                    Observable que permite suscribirse a los eventos.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Subject\n\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/services/event.service.ts:27\n                        \n                    \n\n            \n                \n                    Subject que permite emitir eventos.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listeners\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Map>\n\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/services/event.service.ts:22\n                        \n                    \n\n            \n                \n                    Mapa que contiene los eventos y sus suscriptores.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n/**\n * Tipo de dato para definir la función que se ejecutará cuando se dispare un evento.\n */\ntype listenerFunction = (params?: any) => any;\n\n/**\n * Servicio que permite emitir eventos y suscribirse a ellos.\n * Una implementación bastante básica del modelo CQRS (Command Query Responsibility Segregation), patrón Observer,\n * o incluso del modelo de eventos de Angular que utiliza \"señales\".\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n\n  /**\n   * Mapa que contiene los eventos y sus suscriptores.\n   */\n  listeners: Map>;\n\n  /**\n   * Subject que permite emitir eventos.\n   */\n  eventsSubject: Subject;\n\n  /**\n   * Observable que permite suscribirse a los eventos.\n   */\n  events: Observable;\n\n  /**\n   * Constructor del servicio. Se encargará de inicializar las variables y de generar el observable que permitirá suscribirse a los eventos\n   * y la ejecución de las funciones de callback que se hayan definido para cada evento.\n   */\n  constructor() {\n      this.listeners = new Map();\n      this.eventsSubject = new Subject();\n\n      this.events = this.eventsSubject.asObservable();\n\n      /**\n       * Suscripción encargada de iterar sobre las funciones de callback definidas para cada evento y ejecutarlas.\n       */\n      this.events.subscribe(\n        ({ name, args }) => {\n          if (this.listeners.has(name)) {\n            for (const listener of this.listeners.get(name) ?? []) {\n              listener(...args);\n            }\n          }\n        }\n      );\n  }\n\n  /**\n   * Le indica al servicio que registre un evento con el nombre dado, de modo de poder capturarlo cuando este se \"dispare\".\n   * @param name {string} Nombre del evento.\n   * @param listener {listenerFunction} Función que se ejecutará cuando se dispare el evento.\n   */\n  on(name: string, listener: any) {\n    /**\n     * Si no hay eventos registrados, se inicializa el arreglo de eventos para ese nombre.\n     */\n    if (!this.listeners.has(name)) {\n      this.listeners.set(name, []);\n    }\n\n    /**\n     * Agrega el evento al arreglo de eventos para el nombre indicado.\n     */\n    this.listeners?.get(name)?.push(listener);\n  }\n\n  /**\n   * Elimina el evento identificado por \"name\" del mapa de evento registrados.\n   * Es útil cuando no se requiere persistir \"para siempre\" el evento en cuestión, de modo de poder \n   * asegurarse la consistencia de las llamadas del callback dentro de la aplicación.\n   * @param name {string} Nombre del evento.\n   */\n  off(name: string) {\n    if (this.listeners.has(name)) {\n      this.listeners.delete(name);\n    }\n  }\n\n  /**\n   * Informa al servicio que se ha \"disparado\" un evento, de modo de que pueda ejecutar las funciones de callback.\n   * El subscribe del constructor se encargará de la ejecución de las funciones de callback.\n   * @param name {string} Nombre del evento.\n   * @param args {any[]} Argumentos que se pasarán a la función de callback.\n   */\n  broadcast(name: string, ...args: any[]) {\n      this.eventsSubject.next({\n          name,\n          args\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"directives/FallbackViewDirective.html":{"url":"directives/FallbackViewDirective.html","title":"directive - FallbackViewDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directivas\n  FallbackViewDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            libs/suspense/directives/fallback-view.directive.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Directiva para definir el área contenedora donde se desplegará el\ncomponente/contenido asociado al estado de \"carga en curso/proceso\"\npara un componente de tipo Suspenseable.\n\n            \n\n\n\n\n        \n            Meta datos\n            \n                \n\n                    \n                        Selector\n                        [fallbackView]\n                    \n\n                \n            \n        \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                tpl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tpl: TemplateRef)\n                    \n                \n                        \n                            \n                                Definido en libs/suspense/directives/fallback-view.directive.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        tpl\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tpl\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/directives/fallback-view.directive.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * Directiva para definir el área contenedora donde se desplegará el\n * componente/contenido asociado al estado de \"carga en curso/proceso\"\n * para un componente de tipo Suspenseable.\n */\n@Directive({\n  selector: '[fallbackView]',\n  standalone: true,\n})\nexport class FallbackViewDirective {\n  constructor(public tpl: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/ISuspenseable.html":{"url":"interfaces/ISuspenseable.html","title":"interface - ISuspenseable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISuspenseable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            libs/suspense/types/types.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Define la estructura esperada para un componente al que se pueda aplicar la\nlógica tipo Suspense (al estilo React, o Vue)\nSee https://netbasal.com/adding-suspense-to-angular-%EF%B8%8F-%EF%B8%8F-1f34fd603584\n\n            \n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Métodos\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        broadcastError\n                                    \n                                \n                                \n                                    \n                                        broadcastLoad\n                                    \n                                \n                                \n                                    \n                                        eventHandler\n                                    \n                                \n                                \n                                    \n                                        init\n                                    \n                                \n                                \n                                    \n                                        setup\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastError\n                        \n                    \n                \n            \n            \n                \nbroadcastError()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/types.ts:55\n                \n            \n\n\n            \n                \n                    En caso de estar habilitado el modo \"reactivo\" (habiendo definido el nombre del evento a capturar\nen la variable eventName del componente de tipo Suspenseable), la función informará un estado de error\nen la carga del componente.\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastLoad\n                        \n                    \n                \n            \n            \n                \nbroadcastLoad()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/types.ts:48\n                \n            \n\n\n            \n                \n                    En caso de estar habilitado el modo \"reactivo\" (habiendo definido el nombre del evento a capturar\nen la variable eventName del componente de tipo Suspenseable), la función informará el estado de carga\ncomo listo.\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventHandler\n                        \n                    \n                \n            \n            \n                \neventHandler(eventName: string)\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/types.ts:41\n                \n            \n\n\n            \n                \n                    Cabe la posibilidad que el componente esté en un estado \"listo para poder desplegarse\"\nuna vez que se hayan ejecutado ciertos procesos, que serán capturados a través de los eventos:\n\n:load una vez que el componente este listo\n:error en caso que deba informarse un error\nEste tipo de operación podríamos  interpretarlo como reactivo, ya que son eventos que\ndisparan ciertas acciones.\nLa implementación recomendada para esta función es:\n\neventHandler(eventName: string): void {\n  this.eventName = eventName;\n}Si la variable eventName del componente Suspenseable no tiene valor definido, la carga del\ncomponente buscará realizarse luego de llamar la función setup()\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nombre que servirá para identificar el evento a capturar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/types.ts:62\n                \n            \n\n\n            \n                \n                    Funcion encargada de la inicialización del componente.\nPensada para absorber las operaciones que realiza ngOnInit().\nSu implementación es opcional.\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setup\n                        \n                    \n                \n            \n            \n                \nsetup()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/types.ts:22\n                \n            \n\n\n            \n                \n                    Funcion de configuración o preparación de un componente de tipo Suspenseable\nDebe responder al momento en que el componente esté efectivamente en condiciones de\nser desplegado.\n\n\n                    \n                        Devuelve :     ObservableInput\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, inject, Injectable, InjectionToken, OnDestroy, OnInit, PLATFORM_ID, Renderer2, Type } from '@angular/core';\nimport { ObservableInput } from 'rxjs';\nimport { EventService, SuspenseCacheService } from '@queplan/qp-suspense/services';\nimport { SuspenseableBroadcaster } from './suspenseable-broadcaster';\nimport { SuspenseableClassic } from './suspenseable-classic';\nimport { SuspenseableEventDriven } from './suspenseable-event-driven';\n\nexport const SUSPENSE = new InjectionToken('SUSPENSE');\n\n/**\n * Define la estructura esperada para un componente al que se pueda aplicar la \n * lógica tipo Suspense (al estilo React, o Vue)\n * @see https://netbasal.com/adding-suspense-to-angular-%EF%B8%8F-%EF%B8%8F-1f34fd603584\n */\nexport interface ISuspenseable {\n  /**\n   * Funcion de configuración o preparación de un componente de tipo Suspenseable\n   * Debe responder al momento en que el componente esté efectivamente en condiciones de\n   * ser desplegado.\n   */\n  setup(): ObservableInput;\n\n  /**\n   * Cabe la posibilidad que el componente esté en un estado \"listo para poder desplegarse\"\n   * una vez que se hayan ejecutado ciertos procesos, que serán capturados a través de los eventos:\n   * - :load una vez que el componente este listo\n   * - :error en caso que deba informarse un error\n   * Este tipo de operación podríamos  interpretarlo como reactivo, ya que son eventos que\n   * disparan ciertas acciones.\n   * La implementación recomendada para esta función es:\n   * ```\n   * eventHandler(eventName: string): void {\n   *   this.eventName = eventName;\n   * }\n   * ```\n   * Si la variable eventName del componente Suspenseable no tiene valor definido, la carga del \n   * componente buscará realizarse luego de llamar la función `setup()`\n   * @param eventName Nombre que servirá para identificar el evento a capturar\n   */\n  eventHandler(eventName: string): void;\n\n  /**\n   * En caso de estar habilitado el modo \"reactivo\" (habiendo definido el nombre del evento a capturar\n   * en la variable eventName del componente de tipo Suspenseable), la función informará el estado de carga \n   * como listo. \n   */\n  broadcastLoad(): void;\n\n  /**\n   * En caso de estar habilitado el modo \"reactivo\" (habiendo definido el nombre del evento a capturar\n   * en la variable eventName del componente de tipo Suspenseable), la función informará un estado de error \n   * en la carga del componente. \n   */\n  broadcastError(): void;\n\n  /**\n   * Funcion encargada de la inicialización del componente.\n   * Pensada para absorber las operaciones que realiza ngOnInit().\n   * Su implementación es opcional.\n   */\n  init(): void;\n}\n\n/**\n * Define la estructura que debe implementar un módulo que declare un componente Suspenseable no standalone\n */\nexport interface SuspenseableModule {\n  /**\n   * Debe retornar el componente Suspenseable que está declarado en el módulo\n   */\n  getComponent(): Type;\n}\n\n/**\n * Un componente de tipo Suspenseable, dependiendo de como sea inyectado en la vista, pudiera ser desplegado\n * antes que se encuentre en un estado listo para ser desplegado. Dado que eso es un error, se define una\n * clase que se encargará de que el componente no sea desplegado hasta que se encuentre en un estado listo.\n * Al momento de cargar el componente, y de iniciar el proceso del constructor, y flujos del ciclo de vida de \n * Angular (ngOnInit, ngAfterViewInit, etc), el componente ya se encuentra cargado en memoria, sin embargo se \n * desconoce su estado. Estando en memoria, para eviar que se despliegue, se oculta el componente vía CSS usando \n * `display: none`, y se desplegará, cambiando a `display: inherit` ó su valor inicial,  una vez que se encuentre \n * en un estado listo.\n * \n * Todos los subtipos de Suspenseable extienden de esta clase.\n */\nexport class SuspenseableRenderer {\n  renderer: Renderer2    = inject(Renderer2);\n  elementRef: ElementRef = inject(ElementRef);\n  platformId: Object     = inject(PLATFORM_ID);\n\n  defaultDisplay: string = 'inherit';\n\n\n  /**\n   * En caso que la operación sea desde dentro de un browser, se rescatará el valor CSS inicial/original de `display` \n   * del componente, y se cambiará a none, de esa manera se oculta el componente (asumiendo un estado *no listo*).\n   */\n  constructor() {\n    if(isPlatformBrowser(this.platformId)) {\n      this.defaultDisplay = window.getComputedStyle(this.elementRef.nativeElement).getPropertyValue('display');\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'none');\n    } \n  }\n\n  /**\n   * En caso que la operación sea desde dentro de un browser, se cambia el valor de `display` a su valor inicial; de\n   * esa manera se despliega el componente (asumiendo un estado *listo para ser desplegado*).\n   */\n  renderComponenteReady() {\n    if(isPlatformBrowser(this.platformId)) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', this.defaultDisplay);  \n    }\n  }\n}\n\n/**\n * Clase abstracta que define la estructura de un componente de tipo Suspenseable.\n * Considera de manera muy inocente, todos los posibles casos de uso, y funciones posiblemente requeridas.\n * Es abstracta de modo de a lo menos obligar la implmentación de las interfaces OnInit y OnDestroy.\n */\n@Injectable()\nexport abstract class Suspenseable extends SuspenseableRenderer implements ISuspenseable, OnInit, OnDestroy {\n  abstract ngOnInit(): void;\n  abstract ngOnDestroy(): void;\n  \n  /**\n   * Servicio de eventos, requerido para el modo de operación \"reactivo\"\n   */\n  eventService : EventService = inject(EventService);\n\n  /**\n   * Nombre del evento a capturar, en caso de operar en modo \"reactivo\"\n   */\n  eventName   ?: string;\n\n  init() {\n    throw new Error('init() no implementado');\n  }\n\n  setup(): ObservableInput {\n    /**\n     * Permite que en un contexto de desarrollo sepamos que este método no\n     * está implementado => despliegue de estado de error para carga del componente\n     * Aplica solamente para el modo de operación \"normal\" (usando  función `setup()` )\n     */\n    throw new Error('setup() no implementado');\n  }\n\n  eventHandler(eventName: string): void {\n    /**\n     * Permite que en un contexto de desarrollo sepamos que este método no\n     * está implementado => despliegue de estado de error para carga del componente\n     * Aplica solamente para el modo de operación \"reactivo\" (variable `eventName` con valor definido )\n     */\n    throw new Error('eventHandler() no implementado');\n  }\n\n  broadcastLoad(): void {\n    /**\n     * Sólo notifica el estado en caso de  estar operando en modo \"reactivo\"\n     */\n    if (this.eventName) {   \n      this.renderComponenteReady();   \n      this.eventService.broadcast(`${this.eventName}:load`, true);\n    } else {\n      throw new Error('Usando modo reactivo sin haber defido el nombre del evento. Verifique implementación de eventHandler()');\n    }\n  }\n\n  broadcastError(): void {\n    /**\n     * Sólo notifica el estado en caso de  estar operando en modo \"reactivo\"\n     */    \n    if (this.eventName) {\n      this.renderComponenteReady();\n      this.eventService.broadcast(`${this.eventName}:error`, true);\n    } else {\n      throw new Error('Usando modo reactivo sin haber defido el nombre del evento. Verifique implementación de eventHandler()');\n    }\n  }\n}\n\n/**\n * Clase abstracta que define la estructura de un componente de tipo Suspenseable aplicable cuando el  componente se encuentra\n * definido dentro de un módulo. A priori se desconoce que subtipo de componente Suspenseable será, por lo que lo menos malo es\n * usar la clase abstracta Suspenseable, y definir explícitamente todos los métodos que se requieran.\n */\nexport abstract class SuspenseableInModule extends Suspenseable {}\n\n/**\n * Tipo especial para la respuesta del import de un componente definido como Suspenseable.\n * Usando el atributo default se evita requerir expresamente el nombre del componente.\n */\nexport type TDefaultSuspenseable   = { default: Type };\n\n/**\n * Tipo de la promesa utilizada en la directiva defaultView para la carga de un componente Suspenseable.\n * Componentes Suspenseable \"normales\" son de tipo Promise\n * Componentes Suspenseable \"standalone\" o aquellos que cuyo factory sea el módulo donde están definidos son de tipo Promise>\n * \n */\nexport type SuspenseFactoryPromise = () => Promise | Promise>;\n\n/**\n * Tipo general para los componentes de tipo Suspenseable.\n * Sabemos que es Suspenseable, pero no sabemos que tipo de Suspenseable es.\n */\nexport type TSuspenseable = Type;\n\n/**\n * Se utiliza como proveedor de un componente de tipo Suspenseable que es cargado de modo \"no lazy\" (es decir sin un import explícito).\n * En este caso, lo más habitual es que los componentes esten definidos dentro de un módulo.\n * @param comp {TSuspenseable} Componente de tipo Suspenseable\n * @returns \n */\nexport const useSuspense = (comp: TSuspenseable) => ({\n  provide: SUSPENSE,\n  useExisting: comp,\n});\n\n/**\n * InjectionToken para servicio de eventos.\n * Se define de esta manera para asegurarse que sea efectivamente un Singleton, y que sea posible reutilizar \n * el objeto.\n */\nexport const EVENT_SERVICE = new InjectionToken('EventService', {\n  providedIn: 'root',\n  factory: () => {\n    // console.log('EVENT_SERVICE', new Date());\n    return inject(EventService);\n  }\n});\n\n/**\n * InjectionToken para servicio de caché para clases de componentes importados dinamicamente.\n * Se define de esta manera para asegurarse que sea efectivamente un Singleton, y que sea posible reutilizar \n * el objeto.\n */\nexport const SUSPENSE_CACHE = new InjectionToken>('SuspenseCache', {\n  providedIn: 'root',\n  factory: () => {\n    // console.log('SUSPENSE_CACHE', new Date());\n    return inject(SuspenseCacheService);\n  }\n});\n\n/**\n * Función deno-operación que permite deshabilitar la consola del navegador.\n */\nconst _noOp                 =  () => {};\n\n/**\n * Variable de respaldo de la consola del navegador en si estado original.\n */\nconst  originalConsole      = console;\n\n/**\n * InjectionToken para habilitar o deshabilitar la consola del navegador.\n * Si está en true se habilita, si está en false se deshabilita. Se utiliza como `provider` en el\n * `app.module` de la aplicación.  \n * ```\n * providers: [\n *    {\n *       provide: DEBUG_SUSPENSE,\n *       useValue: false // true para habilitar la consola del navegador\n *     },\n *   ],\n * ```\n */\nexport let DEBUG_SUSPENSE = new InjectionToken('DEBUG_SUSPENSE',{\n  providedIn: 'root',\n  factory: () => false\n});\n\n/**\n * Habilita o deshabilita la consola del navegador en función del parámetro que reciba.\n * @param debug {boolean} Indica si se debe habilitar o deshabilitar la consola del navegador.\n * @returns Función de console a utilizar.\n */\nexport const toggleConsole  = (debug: boolean = false): Console => {\n  let newConsole: Console = originalConsole;\n  if (!debug) {\n    (newConsole as any) = {\n      log  : _noOp,\n      warn : _noOp,\n      debug: _noOp,\n      info : _noOp,\n    };\n  }\n\n  return newConsole;\n};\n\n/**\n * InjectionToken para exponer la consola del navegador.\n * La consola que  será disponibilizada será bajo el contexto de la líbrería, de modo de no afectar el comportamiento\n * de las demás aplicaciones.\n */\nexport const SUSPENSE_LOG = new InjectionToken('SUSPENSE_LOG',\n{\n  providedIn: 'root',\n  factory   : () => toggleConsole(inject(DEBUG_SUSPENSE))\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/QpSuspenseErrorComponent.html":{"url":"components/QpSuspenseErrorComponent.html","title":"component - QpSuspenseErrorComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  QpSuspenseErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    libs/suspense/components/qp-suspense-error.component.ts\n\n\n\n    \n        Descripción\n    \n    \n        Componente qp-suspense-error\nComponente simple para el despliegue de errores de componentes\nque se  intentaron cargar con qp-suspense.\n\nNo usa imágenes, sólo CSS.\nSu uso no está restringido a qp-suspense.\nUtiliza proyección de contenido para desplegar un texto breve\n(como descripción para el Error) en el bloque .\n\nCómo usarlo\nFalló carga de componente...\n    \n\n\n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                qp-suspense-error\n            \n\n\n            \n                styles\n                \n    .suspense-error-wrapper {\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 10rem;\n      max-width: 25rem;\n      margin: 0 auto;\n    }\n\n    p {\n      margin-top: revert;\n      margin-left: 1rem;\n    }\n\n    .octagon {\n      background-color: #b30000;\n      width: 3rem;\n      height: 3rem;\n      background-size: 3rem 3rem;\n      line-height: 2.7rem;\n      text-align: center;\n      font-family: sans-serif;\n      font-size: 2.5rem;\n      font-weight: bold;\n      color: #fff;\n      \n      -webkit-clip-path: polygon(\n        29% 0, 71% 0, 100% 29%, 100% 71%, 71% 100%, 29% 100%, 0 71%, 0 29%\n      );\n      -moz-clip-path: polygon(\n        29% 0, 71% 0, 100% 29%, 100% 71%, 71% 100%, 29% 100%, 0 71%, 0 29%\n      );\n      -ms-clip-path: polygon(\n        29% 0, 71% 0, 100% 29%, 100% 71%, 71% 100%, 29% 100%, 0 71%, 0 29%\n      );\n      clip-path: polygon(\n        29% 0, 71% 0, 100% 29%, 100% 71%, 71% 100%, 29% 100%, 0 71%, 0 29%\n      );\n    }\n    \n            \n\n            \n                template\n                \n  \n    &times;\n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Componente qp-suspense-error\n * ==============================\n * Componente simple para el despliegue de errores de componentes\n * que se  intentaron cargar con qp-suspense. \n * - No usa imágenes, sólo CSS.\n * - Su uso no está restringido a qp-suspense.\n * - Utiliza proyección de contenido para desplegar un texto breve \n * (como descripción para el Error) en el bloque .\n * \n * Cómo usarlo\n * --------------\n * ```\n * Falló carga de componente...\n * ```\n */\n@Component({\n  selector: 'qp-suspense-error',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n  \n    \n      &times;\n    \n    \n  \n  `,\n  styles: [\n    `\n    .suspense-error-wrapper {\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 10rem;\n      max-width: 25rem;\n      margin: 0 auto;\n    }\n\n    p {\n      margin-top: revert;\n      margin-left: 1rem;\n    }\n\n    .octagon {\n      background-color: #b30000;\n      width: 3rem;\n      height: 3rem;\n      background-size: 3rem 3rem;\n      line-height: 2.7rem;\n      text-align: center;\n      font-family: sans-serif;\n      font-size: 2.5rem;\n      font-weight: bold;\n      color: #fff;\n      \n      -webkit-clip-path: polygon(\n        29% 0, 71% 0, 100% 29%, 100% 71%, 71% 100%, 29% 100%, 0 71%, 0 29%\n      );\n      -moz-clip-path: polygon(\n        29% 0, 71% 0, 100% 29%, 100% 71%, 71% 100%, 29% 100%, 0 71%, 0 29%\n      );\n      -ms-clip-path: polygon(\n        29% 0, 71% 0, 100% 29%, 100% 71%, 71% 100%, 29% 100%, 0 71%, 0 29%\n      );\n      clip-path: polygon(\n        29% 0, 71% 0, 100% 29%, 100% 71%, 71% 100%, 29% 100%, 0 71%, 0 29%\n      );\n    }\n    `\n  ],\n})\nexport class QpSuspenseErrorComponent {}\n\n    \n\n\n    \n            \n    .suspense-error-wrapper {\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 10rem;\n      max-width: 25rem;\n      margin: 0 auto;\n    }\n\n    p {\n      margin-top: revert;\n      margin-left: 1rem;\n    }\n\n    .octagon {\n      background-color: #b30000;\n      width: 3rem;\n      height: 3rem;\n      background-size: 3rem 3rem;\n      line-height: 2.7rem;\n      text-align: center;\n      font-family: sans-serif;\n      font-size: 2.5rem;\n      font-weight: bold;\n      color: #fff;\n      \n      -webkit-clip-path: polygon(\n        29% 0, 71% 0, 100% 29%, 100% 71%, 71% 100%, 29% 100%, 0 71%, 0 29%\n      );\n      -moz-clip-path: polygon(\n        29% 0, 71% 0, 100% 29%, 100% 71%, 71% 100%, 29% 100%, 0 71%, 0 29%\n      );\n      -ms-clip-path: polygon(\n        29% 0, 71% 0, 100% 29%, 100% 71%, 71% 100%, 29% 100%, 0 71%, 0 29%\n      );\n      clip-path: polygon(\n        29% 0, 71% 0, 100% 29%, 100% 71%, 71% 100%, 29% 100%, 0 71%, 0 29%\n      );\n    }\n    \n\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      ×    '\n    var COMPONENTS = [{'name': 'QpSuspenseErrorComponent', 'selector': 'qp-suspense-error'},{'name': 'QpSuspenseSpinnerComponent', 'selector': 'qp-suspense-spinner'},{'name': 'SuspenseComponent', 'selector': 'suspense, [suspense]'}];\n    var DIRECTIVES = [{'name': 'DefaultViewDirective', 'selector': '[defaultView]'},{'name': 'ErrorViewDirective', 'selector': '[errorView]'},{'name': 'FallbackViewDirective', 'selector': '[fallbackView]'}];\n    var ACTUAL_COMPONENT = {'name': 'QpSuspenseErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/QpSuspenseSpinnerComponent.html":{"url":"components/QpSuspenseSpinnerComponent.html","title":"component - QpSuspenseSpinnerComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  QpSuspenseSpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    libs/suspense/components/qp-suspense-spinner.component.ts\n\n\n\n    \n        Descripción\n    \n    \n        Componente qp-suspense-spinner\nComponente simple para el despliegue de un spinner de carga, para\ncomponentes que se están cargando usando qp-suspense.\n\nNo usa imágenes, sólo CSS.\nSu uso no está restringido a qp-suspense.\nUtiliza proyección de contenido para desplegar un texto breve\n(como indicador sobre el Componente que se está cargando) en el bloque .\n\nCómo usarlo\nCargando Componente...Opcionalmente se puede indicar el parámetro numérico [scale] para ajustar el tamaño del spinner:\nCargando Componente...\n    \n\n\n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                qp-suspense-spinner\n            \n\n\n            \n                styles\n                \n    .suspense-wrapper {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 10rem;\n      max-width: 25rem;\n      margin: 0 auto;\n    }\n  \n    .suspense-loader {  \n      display: flex;\n      justify-content: center;\n      align-items: center;\n  \n      margin: auto 2.5rem; \n      width: 3rem;\n      height: 3rem;\n      border: 0.5rem solid;\n      border-color: #cfd8dc transparent;\n      border-radius: 50%;\n      box-sizing: border-box;\n      animation: suspense-rotation 1200ms cubic-bezier(0.645, 0.045, 0.355, 1) infinite;\n    }\n    .suspense-loader::after {  \n      display: flex;\n      justify-content: center;\n      align-items: center;\n  \n      content: '';\n      width: 1.1rem;\n      height: 1.1rem;\n      margin: auto;\n      border-radius: 50%;\n      background-color: var(--primary);\n      box-sizing: border-box;\n      transform: translate3d(0,0,0);\n    }\n  \n    @keyframes suspense-rotation {\n      0% {\n        transform: translate3d(0, 0, 0) rotate(0deg);\n      }\n      100% {\n        transform: translate3d(0, 0, 0) rotate(360deg);\n      }\n    }\n    \n            \n\n            \n                template\n                \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n\n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                scale\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Entradas\n        \n            \n                \n                    \n                        \n                        scale\n                    \n                \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                \n                    \n                        Valor por defecto : 1.8\n                    \n                \n                        \n                            \n                                    Definido en libs/suspense/components/qp-suspense-spinner.component.ts:89\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Componente qp-suspense-spinner\n * ==============================\n * Componente simple para el despliegue de un spinner de carga, para\n * componentes que se están cargando usando qp-suspense. \n * - No usa imágenes, sólo CSS.\n * - Su uso no está restringido a qp-suspense.\n * - Utiliza proyección de contenido para desplegar un texto breve \n * (como indicador sobre el Componente que se está cargando) en el bloque .\n * \n * Cómo usarlo\n * --------------\n * ```\n * Cargando Componente...\n * ```\n * \n * Opcionalmente se puede indicar el parámetro numérico [scale] para ajustar el tamaño del spinner:\n * ```\n * Cargando Componente...\n * ```\n */\n@Component({\n  selector: 'qp-suspense-spinner',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n  \n    \n    \n  \n  `,\n  styles: [\n    `\n    .suspense-wrapper {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 10rem;\n      max-width: 25rem;\n      margin: 0 auto;\n    }\n  \n    .suspense-loader {  \n      display: flex;\n      justify-content: center;\n      align-items: center;\n  \n      margin: auto 2.5rem; \n      width: 3rem;\n      height: 3rem;\n      border: 0.5rem solid;\n      border-color: #cfd8dc transparent;\n      border-radius: 50%;\n      box-sizing: border-box;\n      animation: suspense-rotation 1200ms cubic-bezier(0.645, 0.045, 0.355, 1) infinite;\n    }\n    .suspense-loader::after {  \n      display: flex;\n      justify-content: center;\n      align-items: center;\n  \n      content: '';\n      width: 1.1rem;\n      height: 1.1rem;\n      margin: auto;\n      border-radius: 50%;\n      background-color: var(--primary);\n      box-sizing: border-box;\n      transform: translate3d(0,0,0);\n    }\n  \n    @keyframes suspense-rotation {\n      0% {\n        transform: translate3d(0, 0, 0) rotate(0deg);\n      }\n      100% {\n        transform: translate3d(0, 0, 0) rotate(360deg);\n      }\n    }\n    `\n  ],\n})\nexport class QpSuspenseSpinnerComponent {\n  @Input() scale = 1.8;\n}\n\n    \n\n\n    \n            \n    .suspense-wrapper {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 10rem;\n      max-width: 25rem;\n      margin: 0 auto;\n    }\n  \n    .suspense-loader {  \n      display: flex;\n      justify-content: center;\n      align-items: center;\n  \n      margin: auto 2.5rem; \n      width: 3rem;\n      height: 3rem;\n      border: 0.5rem solid;\n      border-color: #cfd8dc transparent;\n      border-radius: 50%;\n      box-sizing: border-box;\n      animation: suspense-rotation 1200ms cubic-bezier(0.645, 0.045, 0.355, 1) infinite;\n    }\n    .suspense-loader::after {  \n      display: flex;\n      justify-content: center;\n      align-items: center;\n  \n      content: '';\n      width: 1.1rem;\n      height: 1.1rem;\n      margin: auto;\n      border-radius: 50%;\n      background-color: var(--primary);\n      box-sizing: border-box;\n      transform: translate3d(0,0,0);\n    }\n  \n    @keyframes suspense-rotation {\n      0% {\n        transform: translate3d(0, 0, 0) rotate(0deg);\n      }\n      100% {\n        transform: translate3d(0, 0, 0) rotate(360deg);\n      }\n    }\n    \n\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'QpSuspenseErrorComponent', 'selector': 'qp-suspense-error'},{'name': 'QpSuspenseSpinnerComponent', 'selector': 'qp-suspense-spinner'},{'name': 'SuspenseComponent', 'selector': 'suspense, [suspense]'}];\n    var DIRECTIVES = [{'name': 'DefaultViewDirective', 'selector': '[defaultView]'},{'name': 'ErrorViewDirective', 'selector': '[errorView]'},{'name': 'FallbackViewDirective', 'selector': '[fallbackView]'}];\n    var ACTUAL_COMPONENT = {'name': 'QpSuspenseSpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/SuspenseCacheService.html":{"url":"injectables/SuspenseCacheService.html","title":"injectable - SuspenseCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Inyectables\n  SuspenseCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            libs/suspense/services/suspense-cache.service.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Implementación de servicio de cache en memoria (simple), para las\nclases asociadas a los componentes lazy que se van a cargar usando qp-suspense\n\n            \n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clazzMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                debugClazzMap\n                            \n                            \n                                getClazz\n                            \n                            \n                                hasClazz\n                            \n                            \n                                setClazz\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en libs/suspense/services/suspense-cache.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        debugClazzMap\n                        \n                    \n                \n            \n            \n                \ndebugClazzMap()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/services/suspense-cache.service.ts:48\n                \n            \n\n\n            \n                \n                    Despliega el contenido del caché de clases.\nSólo para debug.\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getClazz\n                        \n                    \n                \n            \n            \n                \ngetClazz(clazzName: string)\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/services/suspense-cache.service.ts:30\n                \n            \n\n\n            \n                \n                    Dado el nombre de un clase, la rescata desde el caché.\nSupone que previamente se ha hecho una verificación de su existencia.\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    clazzName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Llave de búsqueda para el rescate de la clase del componente. Nombre de la clase.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     T\n\n                    \n                    \n                        Clase asociada al componente a cargar\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasClazz\n                        \n                    \n                \n            \n            \n                \nhasClazz(clazzName: string)\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/services/suspense-cache.service.ts:20\n                \n            \n\n\n            \n                \n                    Verifica si una clase sen encuentra en el caché.\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    clazzName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Llave de búsqueda para el rescate de la clase del componente. Nombre de la clase.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        true si la clase se encuentra en el caché\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setClazz\n                        \n                    \n                \n            \n            \n                \nsetClazz(clazzName: string, clazz: T)\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/services/suspense-cache.service.ts:40\n                \n            \n\n\n            \n                \n                    Almacena la clase asociada al componente Suspenseable, utilizando el nombre de la clase\ncomo llave de búsqueda.\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    clazzName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nombre de la clase, que será usado como llave de búsqeuda/rescate\n\n                                    \n                                \n                                \n                                    clazz\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Clase (módulo ESM) asociada al componente\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clazzMap\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Map\n\n                    \n                \n                \n                    \n                        Valor por defecto : new Map()\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/services/suspense-cache.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Implementación de servicio de cache en memoria (simple), para las\n * clases asociadas a los componentes lazy que se van a cargar usando qp-suspense\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SuspenseCacheService {\n  private clazzMap: Map = new Map();\n\n  constructor() { }\n\n  /**\n   * Verifica si una clase sen encuentra en el caché.\n   * @param clazzName Llave de búsqueda para el rescate de la clase del componente. Nombre de la clase. \n   * @returns true si la clase se encuentra en el caché\n   */\n  hasClazz(clazzName: string): boolean {\n    return this.clazzMap.has(clazzName);\n  }\n\n  /**\n   * Dado el nombre de un clase, la rescata desde el caché.\n   * Supone que previamente se ha hecho una verificación de su existencia.\n   * @param clazzName Llave de búsqueda para el rescate de la clase del componente. Nombre de la clase. \n   * @returns Clase asociada al componente a cargar\n   */\n  getClazz(clazzName: string): T {\n    return this.clazzMap.get(clazzName) as T;\n  }\n\n  /**\n   * Almacena la clase asociada al componente Suspenseable, utilizando el nombre de la clase\n   * como llave de búsqueda. \n   * @param clazzName Nombre de la clase, que será usado como llave de búsqeuda/rescate\n   * @param clazz Clase (módulo ESM) asociada al componente\n   */\n  setClazz(clazzName: string, clazz: T) {\n    this.clazzMap.set(clazzName, clazz);\n  }\n\n  /**\n   * Despliega el contenido del caché de clases.\n   * Sólo para debug.\n   */\n  debugClazzMap() {\n    console.log(`[QpSuspenseCacheService]`, this.clazzMap);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/SuspenseComponent.html":{"url":"components/SuspenseComponent.html","title":"component - SuspenseComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  SuspenseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    libs/suspense/src/lib/suspense/suspense.component.ts\n\n\n\n    \n        Descripción\n    \n    \n        Componente suspense\nImplementación Angular de la lógica de carga de componentes tipo Suspense (al estilo React, o Vue).\nCarga de manera lazy un componente (usando imports dinámicos), y controla, a través del despliegue\nde estados, el estado de la carga de un componente:\n\ndefaultView: Componente a ser cargado\nfallbackView: Componente a desplegar mientras el componente default está cargándose\nerrorView: Componente de error que se despliega si es que fallara la carga del compoente default.\n\nVentajas\n\nMejor UX,, el usuario ve el contenido de la página en la medida que se va disponibilizando (vs una página completa de loader).\nMayor control sobre la carga de un componente (estados de carga y error).\nMinimización del bundle (imports dinamicos al momento de ser requeridos).\nOpción de definir prioridades de carga (a través de Webpack Magic comments).\n\nDesventajas\n\nSólo funciona para componentes definidos como Suspenseable.\nNo soporta @Output() (este funcionamiento se puede reemplazar por eventos/comportamiento reactivo).\nSi el componente a desplegar está dentro de un módulo que está importado en otro lugar,\nes casi lo mismo que no usarlo (no se le saca provecho a la carga dinámica).\nSu funcionamiento óptimo es usando componentes standalone al estilo de Angular 15.\nSi el componente no es standalone requiere que el modulo donde este esté definido implemente SuspenseableModule.\n\nTL;DR Desventajas\nHay que programar los componentes pensando en que serán Suspenseables.\nCómo se usa\n\nSe define el componente extendiendo la clase abstracta Suspenseable.\nDependiendo de el modo de operación requerido se deberá reimplementar la función setup() o eventHandlers(). Al extender alguno de\nlos subtipos Suspenseable, la misma implementación guía al desarrollador en que funciones debe reimplementar.\nEl componente padre debe definir variables para el contructor del componente y sus correspondientes parámetros.\nUso modo por defecto (no reactivo, despliega cuando termina el setup()):\n\n\n \n\n Cargando Comp...\n Falló carga de Comp\nclazzName puede ir como @Input() o como otro atributo dentro de @Input() componentParams:\ncomponentParams = { clazzName: 'CompComponent' };\nCompComponent debe extender de Suspenseable e implementar setup(), por ejemplo:\n  setup(): ObservableInput {\n    this.ngOnInit();\n    return of({\n      input: this.input,\n      otherInput: this.otherInput,\n      anotherInput: this.anotherInput\n    });\n  }Si el componente no es standalone, se le debe indicar a defaultView que el componente debe importarse desde el módulo donde se lo declara.\nEl parámetro isModule puede tomar un valor booleano o bien el nombre específico del módulo que se requiere.\nEl módulo en cuestión debe implementar SuspenseableModule.\nIMPORTANTE: Si el módulo lleva un nombre  diferente al del componente, asegurese de ser específico en el nombre del módulo para evitar errores y lograr\ndesplegar exitosamente el componente. A priori esto no debioera ser necesario ya que el componente \"sabe\" encontrar el nombre del módulo o del componente,\nsin embargo siempre es bueno estar al tanto de esto.\n Errores\nEn la mayoría de los casos los errores son bastante explicativos (favor leer los mensajes en la consola), sin embargo hay algunos\ncasos particulares que no resultan tan claros:\n\nTypeError: Cannot read properties of undefined (reading 'ɵcmp'): Quiere decir que no tiene una clase para poder instanciar el componente, lo que puede\npor varios motivos:\nEl nombre de la clase no corresponde al del componente de tipo Suspenseable (Ej. está mal escrito, no existe)\nEl import dinámico para obtener el contructor del componente tiene errores (Ej. apunta a otro componente/módulo)\nEn caso que el componente esté declarado en un módulo (componente no-standalone), el módulo debe declarar y exportar el componente. El módulo debe implementar\nSuspenseableModule\n\n\nErrores de compilacion en el template de un componente: Probablemente el componente de tipo Suspenseable tenga dependencias definidas en un módulo, por lo que\ndeberá indicarse isModule=true|, y el módulo debe implementar SuspenseableModule\n\nPara sacar mejor provecho de los lazy components se recomienda asegurar que el componente o su módulo asociado no esté importado en el componente padre (o su módulo),\nya que en ese caso el import se hace antes de que realmente sea necesario (pudiera haber casos donde sea válido, o necesario realizar antes la carga del módulo/componente).\n\n    \n\n\n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: EventService, useValue: EVENT_SERVICE\n}\n                                {\n    provide: SuspenseCacheService, useValue: SUSPENSE_CACHE\n}\n                                YieldToMainService\n                \n            \n\n\n            \n                selector\n                suspense, [suspense]\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                anchor\n                            \n                            \n                                    Private\n                                compRef\n                            \n                            \n                                defaultView\n                            \n                            \n                                    Private\n                                done\n                            \n                            \n                                environmentInjector\n                            \n                            \n                                errorView\n                            \n                            \n                                eventService\n                            \n                            \n                                fallbackView\n                            \n                            \n                                injector\n                            \n                            \n                                show\n                            \n                            \n                                suspenseables\n                            \n                            \n                                suspenseConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getComponentInstance\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                setComponentParams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en libs/suspense/src/lib/suspense/suspense.component.ts:213\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getComponentInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getComponentInstance(clazz: TDefaultSuspenseable | Type<>, componentParams?: literal type, isModule: boolean | string, clazzName?: string)\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/src/lib/suspense/suspense.component.ts:246\n                \n            \n\n\n            \n                \n                    Crea una instancia del componente Suspenseable, y en caso que corresponda,\nsetea los parámetros (@Input()) correspondientes.\nLa instancia será creada de la clase del componente o desde el módulo donde este esté definido.\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Valor por defecto\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    clazz\n                                    \n                                                TDefaultSuspenseable | Type<>\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Clase asociada al componente\n\n                                    \n                                \n                                \n                                    componentParams\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Si\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Parámetros (@Input()) del componente\n\n                                    \n                                \n                                \n                                    isModule\n                                    \n                                            boolean | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        Indica si el componente está dentro de un módulo\n\n                                    \n                                \n                                \n                                    clazzName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Si\n                                    \n\n                                    \n                                    \n\n                                    \n                                        (opcional) Nombre de la clase del componente\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         ComponentRef\n\n                    \n                    \n                        Instancia componente\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/src/lib/suspense/suspense.component.ts:278\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/src/lib/suspense/suspense.component.ts:450\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setComponentParams\n                        \n                    \n                \n            \n            \n                \nsetComponentParams(compRef: T | ISuspenseable, compParams: literal type)\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/src/lib/suspense/suspense.component.ts:227\n                \n            \n\n            \n                \n                    Parámetros de tipo :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    En caso que existan parámetros para el componente los asignará a la correspondiente instancia,\niterando por cada una de las llaves del objeto de parámetros.\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Valor por defecto\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    compRef\n                                    \n                                                T | ISuspenseable\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Instancia del componente a cargar\n\n                                    \n                                \n                                \n                                    compParams\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        Objeto con los parámetros que se van a asignar al componente (todos los\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        void en caso que no haya parámetros. Internamente modifica la instancia del componente entregado como parámetro.\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        anchor\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ViewContainerRef\n\n                    \n                \n                \n                    \n                        Decoradores : \n                        \n                        \n                            @ViewChild('anchor', {read: ViewContainerRef})\n                        \n                    \n                \n                    \n                        \n                                Definido en libs/suspense/src/lib/suspense/suspense.component.ts:152\n                        \n                    \n\n            \n                \n                    #anchor es el template contenedor de suspense donde se van a desplegar ya sea\nel componente Suspenseable, o sus estados de \"estoy cargando\" o de error (si corresponde)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        compRef\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ComponentRef\n\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/src/lib/suspense/suspense.component.ts:201\n                        \n                    \n\n            \n                \n                    Objeto de referencia para componente instanciado.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultView\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         DefaultViewDirective\n\n                    \n                \n                \n                    \n                        Decoradores : \n                        \n                        \n                            @ContentChild(DefaultViewDirective)\n                        \n                    \n                \n                    \n                        \n                                Definido en libs/suspense/src/lib/suspense/suspense.component.ts:158\n                        \n                    \n\n            \n                \n                    Las directivas definen las áreas del DOM donde se va a desplegar el componente que\ncorresponda según el flujo de carga del componente Suspenseable\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        done\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Subject\n\n                    \n                \n                \n                    \n                        Valor por defecto : new Subject()\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/src/lib/suspense/suspense.component.ts:207\n                        \n                    \n\n            \n                \n                    Subject para control de suscripción sobre ejecución de función\nsetup() de componente Suspenseable en modo de operación \"normal\" (no reactivo)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        environmentInjector\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     EnvironmentInjector\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(EnvironmentInjector)\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/src/lib/suspense/suspense.component.ts:183\n                        \n                    \n\n            \n                \n                    Inyectores que permiten la incorporación de estos componentes en la vista.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorView\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ErrorViewDirective\n\n                    \n                \n                \n                    \n                        Decoradores : \n                        \n                        \n                            @ContentChild(ErrorViewDirective)\n                        \n                    \n                \n                    \n                        \n                                Definido en libs/suspense/src/lib/suspense/suspense.component.ts:160\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventService\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EventService\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(EVENT_SERVICE)\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/src/lib/suspense/suspense.component.ts:190\n                        \n                    \n\n            \n                \n                    Servicio de eventos para comunicación entre componentes. Utilizado para el modo de operacion reactivo.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fallbackView\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         FallbackViewDirective\n\n                    \n                \n                \n                    \n                        Decoradores : \n                        \n                        \n                            @ContentChild(FallbackViewDirective)\n                        \n                    \n                \n                    \n                        \n                                Definido en libs/suspense/src/lib/suspense/suspense.component.ts:159\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Injector\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(Injector)\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/src/lib/suspense/suspense.component.ts:184\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : false\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/src/lib/suspense/suspense.component.ts:196\n                        \n                    \n\n            \n                \n                    Boolean para controlar el despliegue del bloque d proyección de contenido. Esto va a aplicar en caso que se utilice un\ncomponente Suspenseable de tipo \"no-lazy\" (ie que no se carga dinámicamente).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        suspenseables\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         QueryList\n\n                    \n                \n                \n                    \n                        Decoradores : \n                        \n                        \n                            @ContentChildren(SUSPENSE as any)\n                        \n                    \n                \n                    \n                        \n                                Definido en libs/suspense/src/lib/suspense/suspense.component.ts:177\n                        \n                    \n\n            \n                \n                    Para el caso de requerir desplegar componentes Suspenseables de tipo \"no-lazy\" (ie que no se cargan dinámicamente)\nse hace referencia a un QueryList de ISuspenseable. En estos casos SE DEBE indicar en el componente un provider que\nseñale explícitamente que es un componente de tipo Suspenseable, por ejemplo:\n@Component({\n  selector: 'app-not-lazy',\n  templateUrl: './not-lazy.component.html',\n  styleUrls: [ './not-lazy.component.scss' ],\n  providers: [ useSuspense(NotLazyComponent) ],\n})\nexport class NotLazyComponent extends SuspenseableClassic  { ... }\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        suspenseConsole\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : inject(SUSPENSE_LOG)\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/src/lib/suspense/suspense.component.ts:213\n                        \n                    \n\n            \n                \n                    Wrapper para función de registro de mensajes de log.\nMostrará los mensajes solamente si la aplicación ha configurado el provider DEBUG_SUSPENSE explícitamente en true.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ContentChild,\n  ViewChild,\n  ViewContainerRef,\n  Type,\n  Injector,\n  ComponentRef,\n  ContentChildren,\n  QueryList,\n  createComponent,\n  inject,\n  EnvironmentInjector,\n  createNgModule,\n  NgModuleRef,\n} from '@angular/core';\nimport { CommonModule, NgIf } from '@angular/common';\nimport { from, forkJoin, Subject, takeUntil, finalize, ObservableInput } from 'rxjs';\nimport { EVENT_SERVICE, ISuspenseable, SUSPENSE, SuspenseableModule, SuspenseableRenderer, SUSPENSE_CACHE, SUSPENSE_LOG, TDefaultSuspenseable } from '@queplan/qp-suspense/types';\nimport { DefaultViewDirective, FallbackViewDirective, ErrorViewDirective } from '@queplan/qp-suspense/directives';\nimport { EventService, SuspenseCacheService, YieldToMainService } from '@queplan/qp-suspense/services';\n\nlet suspenseConsole: Console;\n\n/**\n * Componente suspense\n * ========================\n * \n * Implementación Angular de la lógica de carga de componentes tipo Suspense (al estilo React, o Vue).  \n * Carga de manera lazy un componente (usando imports dinámicos), y controla, a través del despliegue \n * de estados, el estado de la carga de un componente:\n * \n * - `defaultView`: Componente a ser cargado\n * - `fallbackView`: Componente a desplegar mientras el componente default está cargándose\n * - `errorView`: Componente de error que se despliega si es que fallara la carga del compoente default.\n * \n * Ventajas\n * -----------\n * \n * - Mejor UX,, el usuario ve el contenido de la página en la medida que se va disponibilizando (vs una página completa de loader).\n * - Mayor control sobre la carga de un componente (estados de carga y error).\n * - Minimización del bundle (imports dinamicos al momento de ser requeridos).\n * - Opción de definir prioridades de carga (a través de Webpack Magic comments).\n * \n * Desventajas\n * -------------\n * \n * - Sólo funciona para componentes definidos como Suspenseable.\n * - No soporta @Output() (este funcionamiento se puede reemplazar por eventos/comportamiento reactivo).\n * - Si el componente a desplegar está dentro de un módulo que está importado en otro lugar, \n *   es casi lo mismo que no usarlo (no se le saca provecho a la carga dinámica).\n * - Su funcionamiento óptimo es usando componentes standalone al estilo de Angular 15.\n * - Si el componente no es standalone requiere que el modulo donde este esté definido implemente SuspenseableModule.\n * \n * TL;DR Desventajas\n * -------------------\n * \n * Hay que programar los componentes pensando en que serán Suspenseables.\n * \n * Cómo se usa\n * -------------\n * \n * 1. Se define el componente extendiendo la clase abstracta Suspenseable.\n * 2. Dependiendo de el modo de operación requerido se deberá reimplementar la función setup() o eventHandlers(). Al extender alguno de\n *    los subtipos Suspenseable, la misma implementación guía al desarrollador en que funciones debe reimplementar.\n * 3. El componente _padre_ debe definir variables para el contructor del componente y sus correspondientes parámetros.\n * 4. Uso modo por defecto (no reactivo, despliega cuando termina el setup()):\n * \n * ```\n * \n *  \n * \n *  Cargando Comp...\n *  Falló carga de Comp\n * \n * ```\n * \n * `clazzName` puede ir como @Input() o como otro atributo dentro de @Input() componentParams:\n * `componentParams = { clazzName: 'CompComponent' };`\n * CompComponent debe extender de Suspenseable e implementar setup(), por ejemplo:\n * \n * ```\n *   setup(): ObservableInput {\n *     this.ngOnInit();\n *     return of({\n *       input: this.input,\n *       otherInput: this.otherInput, \n *       anotherInput: this.anotherInput\n *     });\n *   }\n * ```\n * \n * Si el componente no es standalone, se le debe indicar a defaultView que el componente debe importarse desde el módulo donde se lo declara.\n * El parámetro isModule puede tomar un valor booleano o bien el nombre específico del módulo que se requiere.\n * El módulo en cuestión debe implementar SuspenseableModule.  \n * **IMPORTANTE**: Si el módulo lleva un nombre  diferente al del componente, asegurese de ser específico en el nombre del módulo para evitar errores y lograr \n * desplegar exitosamente el componente. A priori esto no debioera ser necesario ya que el componente *\"sabe\"* encontrar el nombre del módulo o del componente,\n * sin embargo siempre es bueno estar al tanto de esto.\n * \n * ```\n *  \n * ```\n * \n * Errores\n * ---------\n * En la mayoría de los casos los errores son bastante explicativos (favor leer los mensajes en la consola), sin embargo hay algunos \n * casos particulares que no resultan tan claros:\n * \n * - `TypeError: Cannot read properties of undefined (reading 'ɵcmp')`: Quiere decir que no tiene una clase para poder instanciar el componente, lo que puede \n *   por varios motivos:\n *   * El nombre de la clase no corresponde al del componente de tipo Suspenseable (Ej. está mal escrito, no existe)\n *   * El import dinámico para obtener el contructor del componente tiene errores (Ej. apunta a otro componente/módulo)\n *   * En caso que el componente esté declarado en un módulo (componente no-standalone), el módulo debe declarar y exportar el componente. El módulo debe implementar \n *     SuspenseableModule\n * - Errores de compilacion en el template de un componente: Probablemente el componente de tipo Suspenseable tenga dependencias definidas en un módulo, por lo que \n *   deberá indicarse isModule=true|, y el módulo debe implementar SuspenseableModule\n * \n * Para sacar mejor provecho de los lazy components se recomienda asegurar que el componente o su módulo asociado no esté importado en el componente padre (o su módulo),\n * ya que en ese caso el import se hace antes de que realmente sea necesario (pudiera haber casos donde sea válido, o necesario realizar antes la carga del módulo/componente).\n */\n@Component({\n  selector: 'suspense, [suspense]',\n  template: `\n    \n    \n  `,\n  standalone: true,\n  imports: [\n    CommonModule, \n    NgIf,\n    DefaultViewDirective, \n    FallbackViewDirective, \n    ErrorViewDirective\n  ],\n  providers: [ \n    {\n      provide: EventService,\n      useValue: EVENT_SERVICE\n    },\n    {\n      provide: SuspenseCacheService,\n      useValue: SUSPENSE_CACHE\n    },\n    YieldToMainService \n  ]\n})\nexport class SuspenseComponent {\n  /**\n   * #anchor es el template contenedor de `suspense` donde se van a desplegar ya sea\n   * el componente Suspenseable, o sus estados de \"estoy cargando\" o de error (si corresponde)\n   */\n  @ViewChild      ('anchor', { read: ViewContainerRef }) anchor: ViewContainerRef;\n\n  /**\n   * Las directivas definen las áreas del DOM donde se va a desplegar el componente que \n   * corresponda según el flujo de carga del componente Suspenseable\n   */\n  @ContentChild   (DefaultViewDirective) defaultView           : DefaultViewDirective;\n  @ContentChild   (FallbackViewDirective) fallbackView         : FallbackViewDirective;\n  @ContentChild   (ErrorViewDirective) errorView               : ErrorViewDirective;\n\n  /**\n   * Para el caso de requerir desplegar componentes Suspenseables de tipo \"no-lazy\" (ie que no se cargan dinámicamente)\n   * se hace referencia a un QueryList de ISuspenseable. En estos casos **SE DEBE** indicar en el componente un provider que\n   * señale explícitamente que es un componente de tipo Suspenseable, por ejemplo:\n   * \n   * ```\n   * @Component({\n   *   selector: 'app-not-lazy',\n   *   templateUrl: './not-lazy.component.html',\n   *   styleUrls: [ './not-lazy.component.scss' ],\n   *   providers: [ useSuspense(NotLazyComponent) ],\n   * })\n   * export class NotLazyComponent extends SuspenseableClassic  { ... }\n   * ```\n   */\n  @ContentChildren(SUSPENSE as any) suspenseables              : QueryList;\n  // https://github.com/angular/angular/commit/97dc85ba5e4eb6cfa741908a04cfccb1459cec9b\n\n  /**\n   * Inyectores que permiten la incorporación de estos componentes en la vista.\n   */\n  environmentInjector: EnvironmentInjector = inject(EnvironmentInjector);\n  injector           : Injector            = inject(Injector);\n\n\n    /**\n   * Servicio de eventos para comunicación entre componentes. Utilizado para el modo de operacion reactivo.\n   */\n  eventService: EventService = inject(EVENT_SERVICE);\n\n  /**\n   * Boolean para controlar el despliegue del bloque d proyección de contenido. Esto va a aplicar en caso que se utilice un\n   * componente Suspenseable de tipo \"no-lazy\" (ie que no se carga dinámicamente).\n   */\n  show = false;\n\n  /**\n   * Objeto de referencia para componente instanciado.\n   */\n  private compRef: ComponentRef;  \n\n    /**\n   * Subject para control de suscripción sobre ejecución de función\n   * setup() de componente Suspenseable en modo de operación \"normal\" (no reactivo)\n   */\n  private done: Subject = new Subject();\n\n  /**\n   * Wrapper para función de registro de mensajes de log.\n   * Mostrará los mensajes solamente si la aplicación ha configurado el provider DEBUG_SUSPENSE explícitamente en true.\n   */\n  suspenseConsole = inject(SUSPENSE_LOG);\n\n  constructor() { \n    suspenseConsole = this.suspenseConsole;\n  }\n\n  /**\n   * En caso que existan parámetros para el componente los asignará a la correspondiente instancia,\n   * iterando por cada una de las llaves del objeto de parámetros.\n   * \n   * @param compRef Instancia del componente a cargar\n   * @param compParams Objeto con los parámetros que se van a asignar al componente (todos los @Input() )\n   * @returns void en caso que no haya parámetros. Internamente modifica la instancia del componente entregado como parámetro.\n   */\n  setComponentParams(compRef: T | ISuspenseable, compParams: { clazzName?: string | undefined, [key: string]: unknown } = {}) {\n    const params: Array = Object.keys(compParams).filter(v => v !== 'clazzName');\n    if (!compParams || params.length === 0) return;\n    \n    params.forEach(param => {\n      (compRef as any)[param as keyof typeof compRef] = compParams[param];\n    });\n  }\n\n  /**\n   * Crea una instancia del componente Suspenseable, y en caso que corresponda,\n   * setea los parámetros (@Input()) correspondientes.\n   * La instancia será creada de la clase del componente o desde el módulo donde este esté definido.\n   * @param clazz Clase asociada al componente\n   * @param componentParams Parámetros (@Input()) del componente\n   * @param isModule Indica si el componente está dentro de un módulo\n   * @param clazzName (opcional) Nombre de la clase del componente\n   * @returns Instancia componente\n   */\n  private getComponentInstance(clazz: TDefaultSuspenseable | Type, componentParams?: { clazzName?: string, [key: string]: unknown }, isModule: boolean | string = false, clazzName?: string): ComponentRef {\n    let componentInstance: ComponentRef;\n\n    /**\n     * compClazz hace referencia a la clase del componente y será obtenidda según sea el valor de this.defaultView.isModule\n     */\n    let compClazz        : Type;\n    let isStandAlone = false;\n    if (isModule) {\n      suspenseConsole.log('Componente esta dentro de un modulo: ', clazz, Object.keys(clazz));\n      const moduleName: string                         = (typeof isModule === 'string') ? isModule : Object.keys(clazz).shift() as string;\n      const moduleRef: NgModuleRef = createNgModule(clazz[moduleName as keyof typeof clazz], this.injector)\n            compClazz                                  = moduleRef.instance.getComponent();\n    } else { \n      suspenseConsole.log('Componente es de tipo Suspenseable: ', clazz);\n      let _clazzName: string | undefined = !clazzName ? ( !(clazz as TDefaultSuspenseable).default ? Object.keys(clazz).shift() as string : undefined ) : clazzName;\n          compClazz                      = !_clazzName ? (clazz as TDefaultSuspenseable).default : (clazz as TDefaultSuspenseable)[_clazzName as keyof typeof clazz];\n          isStandAlone                   = !!_clazzName;\n    }\n    \n    /**\n     * **IMPORTANTE**: Al crear la instancia del componente, si esto se hace usando `this.anchor.createComponent(compClazz)`, la instancia del componente es\n     * INMEDIATAMENTE  agregada a la vista, independiente de si el componente está en un estado listo o no listo para ser desplegada.\n     * Crear un componente simplemente con `createComponent()` no agrega el componente a la vista, sin embargo esto no funciona para componentes de tipo `standalone`.\n     */\n    componentInstance = isStandAlone ? this.anchor.createComponent(compClazz) : createComponent(compClazz, { environmentInjector: this.environmentInjector });\n    // componentInstance = createComponent(compClazz, { environmentInjector: this.environmentInjector });\n    this.setComponentParams(componentInstance.instance, componentParams);\n    \n    return componentInstance;\n  }\n\n  ngAfterViewInit() {\n    this.anchor.clear();\n\n    /**\n     * Crea la vista con el componente para desplegar el estado \"cargando\" (loader/spinner/otro)\n     */\n    this.anchor.createEmbeddedView(this.fallbackView.tpl, { index: 0 });\n    const isLazy = this.defaultView?.fetch;\n\n    /**\n     * Si en su definición el componente no tiene un factory (es decir no define un import), fetch devolverá undefined\n     * y por ende se entenderá que el componente no es lazy.\n     */\n    if (!isLazy) {\n      suspenseConsole.log('Not lazy components.')\n\n      /**\n       * Recorre los componentes Suspenseable hijos y ejecuta la función setup() de cada uno de ellos.\n       * Una vez que estén listos, se ejecuta la función renderComponenteReady() para desplegarlos en la vista.\n       */\n      const setup: Array> = this.suspenseables.map((comp) => { \n        return comp.setup();\n      });\n      forkJoin(setup).pipe(\n        takeUntil(this.done),\n        finalize(async () => await YieldToMainService.yieldToMain())\n      ).subscribe({\n        next: (_readyStatus?: Array) => {\n          try {\n            this.suspenseables.forEach(comp => {\n              ( comp as SuspenseableRenderer)?.renderComponenteReady();\n            });\n            this.anchor?.clear();\n  \n            /**\n             * Muestra el  ng-content (proyección de contenido)\n             */\n            this.show = true;\n            this.done.next(true);\n          } catch(renderErr) {\n            suspenseConsole.warn('Se interrumpio proceso de renderizado del componente (probablemente debido a un navegacion fuera de la página inicial antes de terminar de cargarla).', renderErr);\n          }\n        },\n        error: (_err) => {\n          try {\n            this.anchor?.remove(0);\n            this.anchor?.createEmbeddedView(this.errorView.tpl);\n            this.done.next(false);\n          } catch(renderErr) {\n            suspenseConsole.warn('Se interrumpio proceso de renderizado del componente (probablemente debido a un navegacion fuera de la página inicial antes de terminar de cargarla).', renderErr);\n          }\n        },\n      });\n\n      return;\n    }\n\n    let clazzName    = this.defaultView.getClazzName();\n\n    /**\n     * Fetch puede ser un import con prioridades (webpack magic comments)\n     * @see https://medium.com/@geor.oikonomopoulos/angular-component-dynamic-import-prioritization-using-ngcomponentoutlet-d9681becba9b\n     */\n    const fetchClass = this.defaultView.fetch(clazzName);\n    fetchClass().then((comp: TDefaultSuspenseable | Type) => {\n      this.compRef = this.getComponentInstance(comp, this.defaultView.componentParams, this.defaultView.isModule);\n\n      if(!this.defaultView.onEvent) {\n        suspenseConsole.log(`No hay evento para carga dinamica del componente.\\nUsando setup().`);\n\n        /**\n         * La operación normal de suspense intentará desplegar el componente trás la \n         * ejecución de la función `setup(): ObservableInput`\n         * `done` se encargará de asegurar que el subscribe no genere una fuga de memoria.\n         */\n        from(this.compRef.instance.setup()).pipe(\n          takeUntil(this.done),\n          finalize(async () => await YieldToMainService.yieldToMain())\n        ).subscribe({\n          next: () => {\n            try {\n              ( this.compRef.instance as SuspenseableRenderer)?.renderComponenteReady();\n              this.anchor?.remove(0);\n              this.anchor?.insert(this.compRef.hostView);\n              this.done.next(true);\n            } catch (renderErr) {\n              suspenseConsole.warn('Se interrumpio proceso de renderizado del componente (probablemente debido a un navegacion fuera de la página inicial antes de terminar de cargarla).', renderErr);\n            }\n          },\n          error: () => {\n            try {\n              this.anchor?.remove(0);\n              this.anchor?.createEmbeddedView(this.errorView.tpl);\n              this.done.next(false);\n            } catch (renderErr) {\n              suspenseConsole.warn('Se interrumpio proceso de renderizado del componente (probablemente debido a un navegacion fuera de la página inicial antes de terminar de cargarla).', renderErr);\n            }\n          },\n        });\n      } else {\n        const eventName = this.defaultView.onEvent;\n        clazzName       = Object.keys(comp).shift() as string;\n        if (!(clazzName?.toLowerCase())?.startsWith(eventName)) {\n          this.done.next(false);\n          throw new Error(`El evento debe usar el nombre del componente: ${(clazzName.toLowerCase()).replace('component', '')} y tiene el valor de: ${eventName}`);\n        } else {\n          /**\n           * Caso de operación reactiva:\n           * - Genera la instancia del componente\n           * - Setea eventName en el componente (llamada a `eventHandlers()`)\n           */\n          suspenseConsole.log(`EventHandlers para ${clazzName}`);\n          this.compRef.instance.eventHandler(eventName);\n\n          /**\n           * Declara los eventos a ser monitoreados:\n           * - :load para informar la carga (estado \"ready\") del componente\n           * - :error para informar algún error en la carga del componente\n           * IMPORTANTE: Aquí no se tiene el detalle específico del error.\n           */\n          this.eventService.on(`${eventName}:load`, async () => {\n            suspenseConsole.log(`${eventName}:load`);\n            try {\n              /**\n               * Requiere un fallback para el caso en que  la navegacion haya  interrumpido el proceso de renderizado, y\n               * que haya eventos pendientes por recibir (mismo componente intentando ser renderizado después de múltiples \n               * navegaciones).\n               */\n              if (this.anchor.length >= 2) { this.anchor?.remove(0); }\n              this.anchor?.insert(this.compRef.hostView);\n              this.done.next(true);\n\n              await YieldToMainService.yieldToMain();\n            } catch (renderErr) {\n              suspenseConsole.warn('Se interrumpio proceso de renderizado del componente (probablemente debido a un navegacion fuera de la página inicial antes de terminar de cargarla).', renderErr);\n              suspenseConsole.log(this.anchor.length);\n            }\n          });  \n          this.eventService.on(`${eventName}:error`, async () => {\n            suspenseConsole.log(`${eventName}:error`);\n            try {\n              this.anchor?.clear();\n              this.anchor?.createEmbeddedView(this.errorView.tpl);\n              this.done.next(false);\n\n              await YieldToMainService.yieldToMain();\n            } catch (renderErr) {\n              suspenseConsole.warn('Se interrumpio proceso de renderizado del componente (probablemente debido a un navegacion fuera de la página inicial antes de terminar de cargarla).', renderErr);\n            }\n          });\n        }\n      }\n    })\n    .catch((suspenseErr: unknown) => {\n      this.done.next(false);\n      suspenseConsole.error(`No se pudo generar instancia de component Suspense!`, suspenseErr);\n      suspenseConsole.error('Verifique el tipo de componente implementado. Si es de tipo SuspenseableBroadcaster de debe indicar el nombre del evento en el @Input() onEvent');\n      \n      /**\n       * En caso de error, limpia la vista y despliega el componente para desplegar el estado de error\n       * en la carga del componente Suspenseable.\n       */\n      try {\n        this.anchor?.clear();\n        this.anchor?.createEmbeddedView(this.errorView.tpl);\n      } catch (renderErr) {\n        suspenseConsole.warn('Se interrumpio proceso de renderizado del componente (probablemente debido a un navegacion fuera de la página inicial antes de terminar de cargarla).', renderErr);\n      }\n    });\n\n  }\n\n  ngOnDestroy() {\n    /**\n     * Elimina las referencias al componente que se ha cargado\n     */\n    this.compRef?.destroy();\n    (this.compRef as any) = null;\n    this.done.next(true);\n\n    /**\n     * En caso de operación reactiva, elimina los eventos usados para\n     * notificar la carga o error en la carga del componente.\n     * Son eventos \"de un solo uso\".\n     */\n    const eventName = this.defaultView?.onEvent || (this.compRef?.instance as any)?.eventName;\n    if(eventName){\n      suspenseConsole.log(`Eliminando eventos: ${eventName}:load y ${eventName}:error`);\n      this.eventService.off(`${eventName}:load`);\n      this.eventService.off(`${eventName}:error`);\n    } else {\n      suspenseConsole.log(`No fue posible detectar eventos para eliminar.`);\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'QpSuspenseErrorComponent', 'selector': 'qp-suspense-error'},{'name': 'QpSuspenseSpinnerComponent', 'selector': 'qp-suspense-spinner'},{'name': 'SuspenseComponent', 'selector': 'suspense, [suspense]'}];\n    var DIRECTIVES = [{'name': 'DefaultViewDirective', 'selector': '[defaultView]'},{'name': 'ErrorViewDirective', 'selector': '[errorView]'},{'name': 'FallbackViewDirective', 'selector': '[fallbackView]'}];\n    var ACTUAL_COMPONENT = {'name': 'SuspenseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/Suspenseable.html":{"url":"injectables/Suspenseable.html","title":"injectable - Suspenseable","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Inyectables\n  Suspenseable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            libs/suspense/types/types.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Clase abstracta que define la estructura de un componente de tipo Suspenseable.\nConsidera de manera muy inocente, todos los posibles casos de uso, y funciones posiblemente requeridas.\nEs abstracta de modo de a lo menos obligar la implmentación de las interfaces OnInit y OnDestroy.\n\n            \n\n            \n                Extiende\n            \n            \n                        SuspenseableRenderer\n            \n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Opcional\n                                eventName\n                            \n                            \n                                eventService\n                            \n                            \n                                defaultDisplay\n                            \n                            \n                                elementRef\n                            \n                            \n                                platformId\n                            \n                            \n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                broadcastError\n                            \n                            \n                                broadcastLoad\n                            \n                            \n                                eventHandler\n                            \n                            \n                                init\n                            \n                            \n                                    Abstract\n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                setup\n                            \n                            \n                                renderComponenteReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastError\n                        \n                    \n                \n            \n            \n                \nbroadcastError()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/types.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastLoad\n                        \n                    \n                \n            \n            \n                \nbroadcastLoad()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/types.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventHandler\n                        \n                    \n                \n            \n            \n                \neventHandler(eventName: string)\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/types.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/types.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/types.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/types.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setup\n                        \n                    \n                \n            \n            \n                \nsetup()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/types.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :     ObservableInput\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderComponenteReady\n                        \n                    \n                \n            \n            \n                \nrenderComponenteReady()\n                \n            \n\n\n            \n                \n                    Heredado desde         SuspenseableRenderer\n\n                \n            \n            \n                \n                        Definido en         SuspenseableRenderer:110\n\n                \n            \n\n\n            \n                \n                    En caso que la operación sea desde dentro de un browser, se cambia el valor de display a su valor inicial; de\nesa manera se despliega el componente (asumiendo un estado listo para ser desplegado).\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                            Opcional\n                        eventName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/types/types.ts:135\n                        \n                    \n\n            \n                \n                    Nombre del evento a capturar, en caso de operar en modo \"reactivo\"\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventService\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EventService\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(EventService)\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/types/types.ts:130\n                        \n                    \n\n            \n                \n                    Servicio de eventos, requerido para el modo de operación \"reactivo\"\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valor por defecto : 'inherit'\n                    \n                \n                        \n                            \n                                Heredado desde         SuspenseableRenderer\n\n                            \n                        \n                    \n                        \n                                Definido en         SuspenseableRenderer:92\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementRef\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ElementRef\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(ElementRef)\n                    \n                \n                        \n                            \n                                Heredado desde         SuspenseableRenderer\n\n                            \n                        \n                    \n                        \n                                Definido en         SuspenseableRenderer:89\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platformId\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Object\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(PLATFORM_ID)\n                    \n                \n                        \n                            \n                                Heredado desde         SuspenseableRenderer\n\n                            \n                        \n                    \n                        \n                                Definido en         SuspenseableRenderer:90\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Renderer2\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(Renderer2)\n                    \n                \n                        \n                            \n                                Heredado desde         SuspenseableRenderer\n\n                            \n                        \n                    \n                        \n                                Definido en         SuspenseableRenderer:88\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, inject, Injectable, InjectionToken, OnDestroy, OnInit, PLATFORM_ID, Renderer2, Type } from '@angular/core';\nimport { ObservableInput } from 'rxjs';\nimport { EventService, SuspenseCacheService } from '@queplan/qp-suspense/services';\nimport { SuspenseableBroadcaster } from './suspenseable-broadcaster';\nimport { SuspenseableClassic } from './suspenseable-classic';\nimport { SuspenseableEventDriven } from './suspenseable-event-driven';\n\nexport const SUSPENSE = new InjectionToken('SUSPENSE');\n\n/**\n * Define la estructura esperada para un componente al que se pueda aplicar la \n * lógica tipo Suspense (al estilo React, o Vue)\n * @see https://netbasal.com/adding-suspense-to-angular-%EF%B8%8F-%EF%B8%8F-1f34fd603584\n */\nexport interface ISuspenseable {\n  /**\n   * Funcion de configuración o preparación de un componente de tipo Suspenseable\n   * Debe responder al momento en que el componente esté efectivamente en condiciones de\n   * ser desplegado.\n   */\n  setup(): ObservableInput;\n\n  /**\n   * Cabe la posibilidad que el componente esté en un estado \"listo para poder desplegarse\"\n   * una vez que se hayan ejecutado ciertos procesos, que serán capturados a través de los eventos:\n   * - :load una vez que el componente este listo\n   * - :error en caso que deba informarse un error\n   * Este tipo de operación podríamos  interpretarlo como reactivo, ya que son eventos que\n   * disparan ciertas acciones.\n   * La implementación recomendada para esta función es:\n   * ```\n   * eventHandler(eventName: string): void {\n   *   this.eventName = eventName;\n   * }\n   * ```\n   * Si la variable eventName del componente Suspenseable no tiene valor definido, la carga del \n   * componente buscará realizarse luego de llamar la función `setup()`\n   * @param eventName Nombre que servirá para identificar el evento a capturar\n   */\n  eventHandler(eventName: string): void;\n\n  /**\n   * En caso de estar habilitado el modo \"reactivo\" (habiendo definido el nombre del evento a capturar\n   * en la variable eventName del componente de tipo Suspenseable), la función informará el estado de carga \n   * como listo. \n   */\n  broadcastLoad(): void;\n\n  /**\n   * En caso de estar habilitado el modo \"reactivo\" (habiendo definido el nombre del evento a capturar\n   * en la variable eventName del componente de tipo Suspenseable), la función informará un estado de error \n   * en la carga del componente. \n   */\n  broadcastError(): void;\n\n  /**\n   * Funcion encargada de la inicialización del componente.\n   * Pensada para absorber las operaciones que realiza ngOnInit().\n   * Su implementación es opcional.\n   */\n  init(): void;\n}\n\n/**\n * Define la estructura que debe implementar un módulo que declare un componente Suspenseable no standalone\n */\nexport interface SuspenseableModule {\n  /**\n   * Debe retornar el componente Suspenseable que está declarado en el módulo\n   */\n  getComponent(): Type;\n}\n\n/**\n * Un componente de tipo Suspenseable, dependiendo de como sea inyectado en la vista, pudiera ser desplegado\n * antes que se encuentre en un estado listo para ser desplegado. Dado que eso es un error, se define una\n * clase que se encargará de que el componente no sea desplegado hasta que se encuentre en un estado listo.\n * Al momento de cargar el componente, y de iniciar el proceso del constructor, y flujos del ciclo de vida de \n * Angular (ngOnInit, ngAfterViewInit, etc), el componente ya se encuentra cargado en memoria, sin embargo se \n * desconoce su estado. Estando en memoria, para eviar que se despliegue, se oculta el componente vía CSS usando \n * `display: none`, y se desplegará, cambiando a `display: inherit` ó su valor inicial,  una vez que se encuentre \n * en un estado listo.\n * \n * Todos los subtipos de Suspenseable extienden de esta clase.\n */\nexport class SuspenseableRenderer {\n  renderer: Renderer2    = inject(Renderer2);\n  elementRef: ElementRef = inject(ElementRef);\n  platformId: Object     = inject(PLATFORM_ID);\n\n  defaultDisplay: string = 'inherit';\n\n\n  /**\n   * En caso que la operación sea desde dentro de un browser, se rescatará el valor CSS inicial/original de `display` \n   * del componente, y se cambiará a none, de esa manera se oculta el componente (asumiendo un estado *no listo*).\n   */\n  constructor() {\n    if(isPlatformBrowser(this.platformId)) {\n      this.defaultDisplay = window.getComputedStyle(this.elementRef.nativeElement).getPropertyValue('display');\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'none');\n    } \n  }\n\n  /**\n   * En caso que la operación sea desde dentro de un browser, se cambia el valor de `display` a su valor inicial; de\n   * esa manera se despliega el componente (asumiendo un estado *listo para ser desplegado*).\n   */\n  renderComponenteReady() {\n    if(isPlatformBrowser(this.platformId)) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', this.defaultDisplay);  \n    }\n  }\n}\n\n/**\n * Clase abstracta que define la estructura de un componente de tipo Suspenseable.\n * Considera de manera muy inocente, todos los posibles casos de uso, y funciones posiblemente requeridas.\n * Es abstracta de modo de a lo menos obligar la implmentación de las interfaces OnInit y OnDestroy.\n */\n@Injectable()\nexport abstract class Suspenseable extends SuspenseableRenderer implements ISuspenseable, OnInit, OnDestroy {\n  abstract ngOnInit(): void;\n  abstract ngOnDestroy(): void;\n  \n  /**\n   * Servicio de eventos, requerido para el modo de operación \"reactivo\"\n   */\n  eventService : EventService = inject(EventService);\n\n  /**\n   * Nombre del evento a capturar, en caso de operar en modo \"reactivo\"\n   */\n  eventName   ?: string;\n\n  init() {\n    throw new Error('init() no implementado');\n  }\n\n  setup(): ObservableInput {\n    /**\n     * Permite que en un contexto de desarrollo sepamos que este método no\n     * está implementado => despliegue de estado de error para carga del componente\n     * Aplica solamente para el modo de operación \"normal\" (usando  función `setup()` )\n     */\n    throw new Error('setup() no implementado');\n  }\n\n  eventHandler(eventName: string): void {\n    /**\n     * Permite que en un contexto de desarrollo sepamos que este método no\n     * está implementado => despliegue de estado de error para carga del componente\n     * Aplica solamente para el modo de operación \"reactivo\" (variable `eventName` con valor definido )\n     */\n    throw new Error('eventHandler() no implementado');\n  }\n\n  broadcastLoad(): void {\n    /**\n     * Sólo notifica el estado en caso de  estar operando en modo \"reactivo\"\n     */\n    if (this.eventName) {   \n      this.renderComponenteReady();   \n      this.eventService.broadcast(`${this.eventName}:load`, true);\n    } else {\n      throw new Error('Usando modo reactivo sin haber defido el nombre del evento. Verifique implementación de eventHandler()');\n    }\n  }\n\n  broadcastError(): void {\n    /**\n     * Sólo notifica el estado en caso de  estar operando en modo \"reactivo\"\n     */    \n    if (this.eventName) {\n      this.renderComponenteReady();\n      this.eventService.broadcast(`${this.eventName}:error`, true);\n    } else {\n      throw new Error('Usando modo reactivo sin haber defido el nombre del evento. Verifique implementación de eventHandler()');\n    }\n  }\n}\n\n/**\n * Clase abstracta que define la estructura de un componente de tipo Suspenseable aplicable cuando el  componente se encuentra\n * definido dentro de un módulo. A priori se desconoce que subtipo de componente Suspenseable será, por lo que lo menos malo es\n * usar la clase abstracta Suspenseable, y definir explícitamente todos los métodos que se requieran.\n */\nexport abstract class SuspenseableInModule extends Suspenseable {}\n\n/**\n * Tipo especial para la respuesta del import de un componente definido como Suspenseable.\n * Usando el atributo default se evita requerir expresamente el nombre del componente.\n */\nexport type TDefaultSuspenseable   = { default: Type };\n\n/**\n * Tipo de la promesa utilizada en la directiva defaultView para la carga de un componente Suspenseable.\n * Componentes Suspenseable \"normales\" son de tipo Promise\n * Componentes Suspenseable \"standalone\" o aquellos que cuyo factory sea el módulo donde están definidos son de tipo Promise>\n * \n */\nexport type SuspenseFactoryPromise = () => Promise | Promise>;\n\n/**\n * Tipo general para los componentes de tipo Suspenseable.\n * Sabemos que es Suspenseable, pero no sabemos que tipo de Suspenseable es.\n */\nexport type TSuspenseable = Type;\n\n/**\n * Se utiliza como proveedor de un componente de tipo Suspenseable que es cargado de modo \"no lazy\" (es decir sin un import explícito).\n * En este caso, lo más habitual es que los componentes esten definidos dentro de un módulo.\n * @param comp {TSuspenseable} Componente de tipo Suspenseable\n * @returns \n */\nexport const useSuspense = (comp: TSuspenseable) => ({\n  provide: SUSPENSE,\n  useExisting: comp,\n});\n\n/**\n * InjectionToken para servicio de eventos.\n * Se define de esta manera para asegurarse que sea efectivamente un Singleton, y que sea posible reutilizar \n * el objeto.\n */\nexport const EVENT_SERVICE = new InjectionToken('EventService', {\n  providedIn: 'root',\n  factory: () => {\n    // console.log('EVENT_SERVICE', new Date());\n    return inject(EventService);\n  }\n});\n\n/**\n * InjectionToken para servicio de caché para clases de componentes importados dinamicamente.\n * Se define de esta manera para asegurarse que sea efectivamente un Singleton, y que sea posible reutilizar \n * el objeto.\n */\nexport const SUSPENSE_CACHE = new InjectionToken>('SuspenseCache', {\n  providedIn: 'root',\n  factory: () => {\n    // console.log('SUSPENSE_CACHE', new Date());\n    return inject(SuspenseCacheService);\n  }\n});\n\n/**\n * Función deno-operación que permite deshabilitar la consola del navegador.\n */\nconst _noOp                 =  () => {};\n\n/**\n * Variable de respaldo de la consola del navegador en si estado original.\n */\nconst  originalConsole      = console;\n\n/**\n * InjectionToken para habilitar o deshabilitar la consola del navegador.\n * Si está en true se habilita, si está en false se deshabilita. Se utiliza como `provider` en el\n * `app.module` de la aplicación.  \n * ```\n * providers: [\n *    {\n *       provide: DEBUG_SUSPENSE,\n *       useValue: false // true para habilitar la consola del navegador\n *     },\n *   ],\n * ```\n */\nexport let DEBUG_SUSPENSE = new InjectionToken('DEBUG_SUSPENSE',{\n  providedIn: 'root',\n  factory: () => false\n});\n\n/**\n * Habilita o deshabilita la consola del navegador en función del parámetro que reciba.\n * @param debug {boolean} Indica si se debe habilitar o deshabilitar la consola del navegador.\n * @returns Función de console a utilizar.\n */\nexport const toggleConsole  = (debug: boolean = false): Console => {\n  let newConsole: Console = originalConsole;\n  if (!debug) {\n    (newConsole as any) = {\n      log  : _noOp,\n      warn : _noOp,\n      debug: _noOp,\n      info : _noOp,\n    };\n  }\n\n  return newConsole;\n};\n\n/**\n * InjectionToken para exponer la consola del navegador.\n * La consola que  será disponibilizada será bajo el contexto de la líbrería, de modo de no afectar el comportamiento\n * de las demás aplicaciones.\n */\nexport const SUSPENSE_LOG = new InjectionToken('SUSPENSE_LOG',\n{\n  providedIn: 'root',\n  factory   : () => toggleConsole(inject(DEBUG_SUSPENSE))\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"classes/SuspenseableBroadcaster.html":{"url":"classes/SuspenseableBroadcaster.html","title":"class - SuspenseableBroadcaster","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Clases\n  SuspenseableBroadcaster\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            libs/suspense/types/suspenseable-broadcaster.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Definición de clase abstracta para la implementación de un componente Suspenseable\ncuya operación de en modo \"reactivo\", es decir basada en la captura de eventos que indiquen\ncuando el componente está listo para ser desplegado o cuando se ha producido un error.\nSólo fuerza la definición del método eventHandler(), que debe definir el nombre del evento\na capturar.\nModo reactivo\nEl componente se despliega una vez recibido el evento :load:\n\n \n\n Cargando Comp...\n Falló carga de Comp\nEl nombre del evento debe ser el mismo que el nombre del componente SuspenseableBroadcaster, sin el sufijo \"Component\";\ny debe ser indicado como el @Input() onEvent del componente.\nSi se especifica onEvent con algún error, el componente no se desplegará y el mensaje de error indicará la corrección a realizar.\nEn este modo, una vez que el componente realice las operaciones que lo disponibilizan para ser desplegado, se deberá incluir la\ncorrespondiente llamada al método this.broadcastLoad().\nAnálogamente, en caso de error se deberá llamar al método this.broadcastError().\n\n            \n\n            \n                Extiende\n            \n            \n                        SuspenseableRenderer\n            \n\n            \n                Implementa\n            \n            \n                        Pick\n            \n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Opcional\n                                eventName\n                            \n                            \n                                eventService\n                            \n                            \n                                defaultDisplay\n                            \n                            \n                                elementRef\n                            \n                            \n                                platformId\n                            \n                            \n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                broadcastError\n                            \n                            \n                                broadcastLoad\n                            \n                            \n                                    Abstract\n                                eventHandler\n                            \n                            \n                                renderComponenteReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                            Opcional\n                        eventName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/types/suspenseable-broadcaster.ts:42\n                        \n                    \n\n            \n                \n                    Nombre del evento a capturar, en caso de operar en modo \"reactivo\"\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventService\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EventService\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(EVENT_SERVICE)\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/types/suspenseable-broadcaster.ts:37\n                        \n                    \n\n            \n                \n                    Servicio de eventos, requerido para el modo de operación \"reactivo\"\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valor por defecto : 'inherit'\n                    \n                \n                        \n                            \n                                Heredado desde         SuspenseableRenderer\n\n                            \n                        \n                    \n                        \n                                Definido en         SuspenseableRenderer:92\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementRef\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ElementRef\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(ElementRef)\n                    \n                \n                        \n                            \n                                Heredado desde         SuspenseableRenderer\n\n                            \n                        \n                    \n                        \n                                Definido en         SuspenseableRenderer:89\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platformId\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Object\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(PLATFORM_ID)\n                    \n                \n                        \n                            \n                                Heredado desde         SuspenseableRenderer\n\n                            \n                        \n                    \n                        \n                                Definido en         SuspenseableRenderer:90\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Renderer2\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(Renderer2)\n                    \n                \n                        \n                            \n                                Heredado desde         SuspenseableRenderer\n\n                            \n                        \n                    \n                        \n                                Definido en         SuspenseableRenderer:88\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastError\n                        \n                    \n                \n            \n            \n                \nbroadcastError()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/suspenseable-broadcaster.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastLoad\n                        \n                    \n                \n            \n            \n                \nbroadcastLoad()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/suspenseable-broadcaster.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        eventHandler\n                        \n                    \n                \n            \n            \n                \n                    \n                    eventHandler(eventName: string)\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/suspenseable-broadcaster.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderComponenteReady\n                        \n                    \n                \n            \n            \n                \nrenderComponenteReady()\n                \n            \n\n\n            \n                \n                    Heredado desde         SuspenseableRenderer\n\n                \n            \n            \n                \n                        Definido en         SuspenseableRenderer:110\n\n                \n            \n\n\n            \n                \n                    En caso que la operación sea desde dentro de un browser, se cambia el valor de display a su valor inicial; de\nesa manera se despliega el componente (asumiendo un estado listo para ser desplegado).\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { inject } from \"@angular/core\";\nimport { EventService } from \"@queplan/qp-suspense/services\";\nimport { EVENT_SERVICE, ISuspenseable, SuspenseableRenderer } from \"./types\";\n\n/**\n * Definición de clase abstracta para la implementación de un componente Suspenseable\n * cuya operación de en modo \"reactivo\", es decir basada en la captura de eventos que indiquen\n * cuando el componente está listo para ser desplegado o cuando se ha producido un error.\n * Sólo fuerza la definición del método `eventHandler()`, que debe definir el nombre del evento\n * a capturar.\n * \n * Modo reactivo \n * ----------------\n * \n * El componente se despliega una vez recibido el evento `:load`:\n * \n * ```\n * \n *  \n * \n *  Cargando Comp...\n *  Falló carga de Comp\n * \n * ```\n * \n * El nombre del evento debe ser el mismo que el nombre del componente SuspenseableBroadcaster, sin el sufijo \"Component\";\n * y debe ser indicado como el @Input() `onEvent` del componente.  \n * Si se especifica onEvent con algún error, el componente no se desplegará y el mensaje de error indicará la corrección a realizar.\n * En este modo, una vez que el componente realice las operaciones que lo disponibilizan para ser desplegado, se deberá incluir la \n * correspondiente llamada al método `this.broadcastLoad()`.  \n * Análogamente, en caso de error se deberá llamar al método `this.broadcastError()`.\n */\nexport abstract class SuspenseableBroadcaster extends SuspenseableRenderer implements Pick {\n  /**\n   * Servicio de eventos, requerido para el modo de operación \"reactivo\"\n   */\n  eventService : EventService = inject(EVENT_SERVICE);\n\n  /**\n   * Nombre del evento a capturar, en caso de operar en modo \"reactivo\"\n   */\n  eventName   ?: string;\n  \n  abstract eventHandler(eventName: string): void;\n\n  broadcastLoad(): void {\n    /**\n     * Sólo notifica el estado en caso de  estar operando en modo \"reactivo\"\n     */\n    if (this.eventName) {   \n      this.renderComponenteReady();   \n      this.eventService.broadcast(`${this.eventName}:load`, true);\n    } else {\n      throw new Error('Usando modo reactivo sin haber defido el nombre del evento. Verifique implementación de eventHandler()');\n    }\n  }\n\n  broadcastError(): void {\n    /**\n     * Sólo notifica el estado en caso de  estar operando en modo \"reactivo\"\n     */    \n    if (this.eventName) {\n      this.renderComponenteReady();\n      this.eventService.broadcast(`${this.eventName}:error`, true);\n    } else {\n      throw new Error('Usando modo reactivo sin haber defido el nombre del evento. Verifique implementación de eventHandler()');\n    }\n  }\n  \n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"classes/SuspenseableClassic.html":{"url":"classes/SuspenseableClassic.html","title":"class - SuspenseableClassic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Clases\n  SuspenseableClassic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            libs/suspense/types/suspenseable-classic.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Definición de la clase abstracta que permite implementar un componente de tipo Suspenseable en su modo de\noperación \"normal\" (usando  función setup()), es decir un componente se entenderá en estado listo para ser desplegado\ncuando la función setup se haya ejecutado sin errores.\nSe forzará la implementación de la función setup() para este subtipo de componentes Suspenseable.\n\n            \n\n            \n                Extiende\n            \n            \n                        SuspenseableRenderer\n            \n\n            \n                Implementa\n            \n            \n                        Pick\n            \n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                defaultDisplay\n                            \n                            \n                                elementRef\n                            \n                            \n                                platformId\n                            \n                            \n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                setup\n                            \n                            \n                                renderComponenteReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valor por defecto : 'inherit'\n                    \n                \n                        \n                            \n                                Heredado desde         SuspenseableRenderer\n\n                            \n                        \n                    \n                        \n                                Definido en         SuspenseableRenderer:92\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementRef\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ElementRef\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(ElementRef)\n                    \n                \n                        \n                            \n                                Heredado desde         SuspenseableRenderer\n\n                            \n                        \n                    \n                        \n                                Definido en         SuspenseableRenderer:89\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platformId\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Object\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(PLATFORM_ID)\n                    \n                \n                        \n                            \n                                Heredado desde         SuspenseableRenderer\n\n                            \n                        \n                    \n                        \n                                Definido en         SuspenseableRenderer:90\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Renderer2\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(Renderer2)\n                    \n                \n                        \n                            \n                                Heredado desde         SuspenseableRenderer\n\n                            \n                        \n                    \n                        \n                                Definido en         SuspenseableRenderer:88\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        setup\n                        \n                    \n                \n            \n            \n                \n                    \n                    setup()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/suspenseable-classic.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :     ObservableInput\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderComponenteReady\n                        \n                    \n                \n            \n            \n                \nrenderComponenteReady()\n                \n            \n\n\n            \n                \n                    Heredado desde         SuspenseableRenderer\n\n                \n            \n            \n                \n                        Definido en         SuspenseableRenderer:110\n\n                \n            \n\n\n            \n                \n                    En caso que la operación sea desde dentro de un browser, se cambia el valor de display a su valor inicial; de\nesa manera se despliega el componente (asumiendo un estado listo para ser desplegado).\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObservableInput } from \"rxjs\";\nimport { ISuspenseable, SuspenseableRenderer } from \"./types\";\n\n/**\n * Definición de la clase abstracta que permite implementar un componente de tipo Suspenseable en su modo de \n * operación \"normal\" (usando  función `setup()`), es decir un componente se entenderá *en estado listo para ser desplegado* \n * cuando la función setup se haya ejecutado sin errores.\n * Se forzará la implementación de la función `setup()` para este subtipo de componentes Suspenseable.\n */\nexport abstract class SuspenseableClassic extends SuspenseableRenderer implements Pick {\n  abstract setup(): ObservableInput;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"classes/SuspenseableEventDriven.html":{"url":"classes/SuspenseableEventDriven.html","title":"class - SuspenseableEventDriven","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Clases\n  SuspenseableEventDriven\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            libs/suspense/types/suspenseable-event-driven.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Definición de la clase abstracta que permite implementar un componente de tipo Suspenseable en su modo de\noperación en base a un control de estados de tipo evento. Sigue la misma lógica que el modo \"normal\" (usando  función setup()), sin embargo\nel estado listo o error se determina en base al valor de las correspondientes variables de estado.\nSe desconoce en que momento, y tras la ejecución de que operación/operaciones, el componente estará listo para ser desplegado. Por ello se disponibilizan\nlos BehaviorSubject setupReady y hasError para que el componente pueda notificar cuando se encuentre en estado listo o error.\n\nsetupReady: Indicará que el componente está listo para ser desplegado\nhasError: Indicará que el componente no se pudo cargar debido a un estado de error\n\nSe forzará la implementación de la función setup() para este subtipo de componentes Suspenseable, de paso se\nprovee la función defaultEventDrivenSetup() que permite implementar el control de estados de forma sencilla.\n\n            \n\n            \n                Extiende\n            \n            \n                        SuspenseableRenderer\n            \n\n            \n                Implementa\n            \n            \n                        Pick\n            \n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                hasError\n                            \n                            \n                                initialized\n                            \n                            \n                                setupReady\n                            \n                            \n                                suspenseConsole\n                            \n                            \n                                defaultDisplay\n                            \n                            \n                                elementRef\n                            \n                            \n                                platformId\n                            \n                            \n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                defaultEventDrivenSetup\n                            \n                            \n                                init\n                            \n                            \n                                    Abstract\n                                setup\n                            \n                            \n                                renderComponenteReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en libs/suspense/types/suspenseable-event-driven.ts:26\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Valor por defecto : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/types/suspenseable-event-driven.ts:50\n                        \n                    \n\n            \n                \n                    Indica que el componente llegó a un estado de error, por lo que no debe ser desplegado.\nComo es un BehaviorSubject, admite un valor inicial.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : false\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/types/suspenseable-event-driven.ts:37\n                        \n                    \n\n            \n                \n                    Variable de control para saber si ya está lista la inicializacion del componente.\nPudiera no utilizarse.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupReady\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Valor por defecto : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/types/suspenseable-event-driven.ts:43\n                        \n                    \n\n            \n                \n                    Indica que el componente está listo para ser desplegado.\nComo es un BehaviorSubject, admite un valor inicial.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        suspenseConsole\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : inject(SUSPENSE_LOG)\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/types/suspenseable-event-driven.ts:26\n                        \n                    \n\n            \n                \n                    Wrapper para función de registro de mensajes de log.\nMostrará los mensajes solamente si la aplicación ha configurado el provider DEBUG_SUSPENSE explícitamente en true.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valor por defecto : 'inherit'\n                    \n                \n                        \n                            \n                                Heredado desde         SuspenseableRenderer\n\n                            \n                        \n                    \n                        \n                                Definido en         SuspenseableRenderer:92\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementRef\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ElementRef\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(ElementRef)\n                    \n                \n                        \n                            \n                                Heredado desde         SuspenseableRenderer\n\n                            \n                        \n                    \n                        \n                                Definido en         SuspenseableRenderer:89\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platformId\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Object\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(PLATFORM_ID)\n                    \n                \n                        \n                            \n                                Heredado desde         SuspenseableRenderer\n\n                            \n                        \n                    \n                        \n                                Definido en         SuspenseableRenderer:90\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Renderer2\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(Renderer2)\n                    \n                \n                        \n                            \n                                Heredado desde         SuspenseableRenderer\n\n                            \n                        \n                    \n                        \n                                Definido en         SuspenseableRenderer:88\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultEventDrivenSetup\n                        \n                    \n                \n            \n            \n                \ndefaultEventDrivenSetup(response: literal type, useInit)\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/suspenseable-event-driven.ts:62\n                \n            \n\n\n            \n                \n                    Implementación de la función setup() que permite aprovechar el control de estados de forma sencilla.\nLa idea es que dentro del mismo componente se seteen los valores para setupReady o para hasError. Llamando esta función desde setup() se\nrealiza el monitoreo de estas variables, asegurando que el componente efectivamente se despliegue cuando esté listo, o bien se informe el estado\nde error.\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Valor por defecto\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : unknown } Objeto JSON (estructura a priori desconocida) que será devuelto como respuesta\n\n                                    \n                                \n                                \n                                    useInit\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        Indica si se debe llamar a la función init() antes de resolver la función setup()\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     ObservableInput\n\n                    \n                    \n                        Observable que se resolverá cuando el componente esté listo para ser desplegado. La respuesta es del mismo tipo que  la de setup()\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/suspenseable-event-driven.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        setup\n                        \n                    \n                \n            \n            \n                \n                    \n                    setup()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/suspenseable-event-driven.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :     ObservableInput\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderComponenteReady\n                        \n                    \n                \n            \n            \n                \nrenderComponenteReady()\n                \n            \n\n\n            \n                \n                    Heredado desde         SuspenseableRenderer\n\n                \n            \n            \n                \n                        Definido en         SuspenseableRenderer:110\n\n                \n            \n\n\n            \n                \n                    En caso que la operación sea desde dentro de un browser, se cambia el valor de display a su valor inicial; de\nesa manera se despliega el componente (asumiendo un estado listo para ser desplegado).\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { inject } from \"@angular/core\";\nimport { BehaviorSubject, combineLatest, filter, map, ObservableInput, takeUntil, tap } from \"rxjs\";\nimport { ISuspenseable, SuspenseableRenderer, SUSPENSE_LOG } from \"./types\";\n\nlet suspenseConsole: Console;\n\n/**\n * Definición de la clase abstracta que permite implementar un componente de tipo Suspenseable en su modo de\n * operación en base a un control de estados de tipo evento. Sigue la misma lógica que el modo \"normal\" (usando  función `setup()`), sin embargo\n * el estado listo o error se determina en base al valor de las correspondientes variables de estado.\n * Se desconoce en que momento, y tras la ejecución de que operación/operaciones, el componente estará listo para ser desplegado. Por ello se disponibilizan\n * los BehaviorSubject `setupReady` y `hasError` para que el componente pueda notificar cuando se encuentre en estado listo o error.\n * \n * * setupReady: Indicará que el componente está listo para ser desplegado\n * * hasError: Indicará que el componente no se pudo cargar debido a un estado de error\n * \n * Se forzará la implementación de la función `setup()` para este subtipo de componentes Suspenseable, de paso se\n * provee la función `defaultEventDrivenSetup()` que permite implementar el control de estados de forma sencilla.\n */\nexport abstract class SuspenseableEventDriven  extends SuspenseableRenderer implements Pick {\n\n  /**\n   * Wrapper para función de registro de mensajes de log.\n   * Mostrará los mensajes solamente si la aplicación ha configurado el provider DEBUG_SUSPENSE explícitamente en true.\n   */\n  suspenseConsole = inject(SUSPENSE_LOG);\n\n  constructor() {\n    super();\n    suspenseConsole = this.suspenseConsole;\n  }\n  \n  /**\n   * Variable de control para saber si ya está lista la inicializacion del componente.\n   * Pudiera no utilizarse.\n   */\n  initialized = false;\n\n  /**\n   * Indica que el componente está listo para ser desplegado.\n   * Como es un BehaviorSubject, admite un valor inicial.\n   */\n  setupReady : BehaviorSubject = new BehaviorSubject(false);\n\n\n  /**\n   * Indica que el componente llegó a un estado de error, por lo que no debe ser desplegado.\n   * Como es un BehaviorSubject, admite un valor inicial.\n   */\n  hasError   : BehaviorSubject = new BehaviorSubject(false);\n\n\n  /**\n   * Implementación de la función `setup()` que permite aprovechar el control de estados de forma sencilla.\n   * La idea es que dentro del mismo componente se seteen los valores para `setupReady` o para `hasError`. Llamando esta función desde `setup()` se\n   * realiza el monitoreo de estas variables, asegurando que el componente efectivamente se despliegue cuando esté listo, o bien se informe el estado \n   * de error.\n   * @param response { [key: string]: unknown } Objeto JSON (estructura a priori desconocida) que será devuelto como respuesta \n   * @param useInit { boolean } Indica si se debe llamar a la función `init()` antes de resolver la función `setup()`\n   * @returns { ObservableInput } Observable que se resolverá cuando el componente esté listo para ser desplegado. La respuesta es del mismo tipo que  la de setup()\n   */\n  defaultEventDrivenSetup(response: { [key: string]: unknown }, useInit = false): ObservableInput {\n    suspenseConsole.log('[defaultEventDrivenSetup] setup()');\n\n    if(useInit) {\n      this.init();\n    }\n    /**\n     * Se suscribe inicialmente a setupReady.\n     * Escuchará el observable mientras no este listo Ó tenga error, por ello se combina el observable.\n     * Se filtra para que escuche alguna de las 2 respuestas y en caso de error lanzará una excepción (new Error).\n     * Responde un observable con el objeto de respuesta indicado.\n     */\n    return this.setupReady.pipe(\n      takeUntil( \n        combineLatest([this.setupReady, this.hasError]).pipe(\n          filter(([ isReady, hasError ]) => isReady || hasError),\n          tap( \n            ([ isReady, hasError ]) => {\n              suspenseConsole.log('[defaultEventDrivenSetup] isReady, hasError: ', isReady, hasError );\n              if (hasError) throw new Error('[defaultEventDrivenSetup] No se pudo cargar el componente');\n            } \n          )\n        )\n      ),\n      map(() => (response))\n    );\n  }\n\n  init() {\n    /**\n     * Función de inicialización del componente, quizás sea pasar lo del ngInit a otra función.\n     * Típicamente seteará la variable initialized a true.\n     */\n    throw new Error('init() no implementado');\n  }\n  \n  abstract setup(): ObservableInput;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"classes/SuspenseableInModule.html":{"url":"classes/SuspenseableInModule.html","title":"class - SuspenseableInModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Clases\n  SuspenseableInModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            libs/suspense/types/types.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Clase abstracta que define la estructura de un componente de tipo Suspenseable aplicable cuando el  componente se encuentra\ndefinido dentro de un módulo. A priori se desconoce que subtipo de componente Suspenseable será, por lo que lo menos malo es\nusar la clase abstracta Suspenseable, y definir explícitamente todos los métodos que se requieran.\n\n            \n\n            \n                Extiende\n            \n            \n                        Suspenseable\n            \n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Opcional\n                                eventName\n                            \n                            \n                                eventService\n                            \n                            \n                                defaultDisplay\n                            \n                            \n                                elementRef\n                            \n                            \n                                platformId\n                            \n                            \n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                broadcastError\n                            \n                            \n                                broadcastLoad\n                            \n                            \n                                eventHandler\n                            \n                            \n                                init\n                            \n                            \n                                    Abstract\n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                setup\n                            \n                            \n                                renderComponenteReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                            Opcional\n                        eventName\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                Heredado desde         Suspenseable\n\n                            \n                        \n                    \n                        \n                                Definido en         Suspenseable:135\n\n                        \n                    \n\n            \n                \n                    Nombre del evento a capturar, en caso de operar en modo \"reactivo\"\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventService\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         EventService\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(EventService)\n                    \n                \n                        \n                            \n                                Heredado desde         Suspenseable\n\n                            \n                        \n                    \n                        \n                                Definido en         Suspenseable:130\n\n                        \n                    \n\n            \n                \n                    Servicio de eventos, requerido para el modo de operación \"reactivo\"\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valor por defecto : 'inherit'\n                    \n                \n                        \n                            \n                                Heredado desde         SuspenseableRenderer\n\n                            \n                        \n                    \n                        \n                                Definido en         SuspenseableRenderer:92\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementRef\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ElementRef\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(ElementRef)\n                    \n                \n                        \n                            \n                                Heredado desde         SuspenseableRenderer\n\n                            \n                        \n                    \n                        \n                                Definido en         SuspenseableRenderer:89\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platformId\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Object\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(PLATFORM_ID)\n                    \n                \n                        \n                            \n                                Heredado desde         SuspenseableRenderer\n\n                            \n                        \n                    \n                        \n                                Definido en         SuspenseableRenderer:90\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Renderer2\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(Renderer2)\n                    \n                \n                        \n                            \n                                Heredado desde         SuspenseableRenderer\n\n                            \n                        \n                    \n                        \n                                Definido en         SuspenseableRenderer:88\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastError\n                        \n                    \n                \n            \n            \n                \nbroadcastError()\n                \n            \n\n\n            \n                \n                    Heredado desde         Suspenseable\n\n                \n            \n            \n                \n                        Definido en         Suspenseable:171\n\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastLoad\n                        \n                    \n                \n            \n            \n                \nbroadcastLoad()\n                \n            \n\n\n            \n                \n                    Heredado desde         Suspenseable\n\n                \n            \n            \n                \n                        Definido en         Suspenseable:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventHandler\n                        \n                    \n                \n            \n            \n                \neventHandler(eventName: string)\n                \n            \n\n\n            \n                \n                    Heredado desde         Suspenseable\n\n                \n            \n            \n                \n                        Definido en         Suspenseable:150\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Heredado desde         Suspenseable\n\n                \n            \n            \n                \n                        Definido en         Suspenseable:137\n\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Heredado desde         Suspenseable\n\n                \n            \n            \n                \n                        Definido en         Suspenseable:125\n\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Heredado desde         Suspenseable\n\n                \n            \n            \n                \n                        Definido en         Suspenseable:124\n\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setup\n                        \n                    \n                \n            \n            \n                \nsetup()\n                \n            \n\n\n            \n                \n                    Heredado desde         Suspenseable\n\n                \n            \n            \n                \n                        Definido en         Suspenseable:141\n\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :     ObservableInput\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderComponenteReady\n                        \n                    \n                \n            \n            \n                \nrenderComponenteReady()\n                \n            \n\n\n            \n                \n                    Heredado desde         SuspenseableRenderer\n\n                \n            \n            \n                \n                        Definido en         SuspenseableRenderer:110\n\n                \n            \n\n\n            \n                \n                    En caso que la operación sea desde dentro de un browser, se cambia el valor de display a su valor inicial; de\nesa manera se despliega el componente (asumiendo un estado listo para ser desplegado).\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, inject, Injectable, InjectionToken, OnDestroy, OnInit, PLATFORM_ID, Renderer2, Type } from '@angular/core';\nimport { ObservableInput } from 'rxjs';\nimport { EventService, SuspenseCacheService } from '@queplan/qp-suspense/services';\nimport { SuspenseableBroadcaster } from './suspenseable-broadcaster';\nimport { SuspenseableClassic } from './suspenseable-classic';\nimport { SuspenseableEventDriven } from './suspenseable-event-driven';\n\nexport const SUSPENSE = new InjectionToken('SUSPENSE');\n\n/**\n * Define la estructura esperada para un componente al que se pueda aplicar la \n * lógica tipo Suspense (al estilo React, o Vue)\n * @see https://netbasal.com/adding-suspense-to-angular-%EF%B8%8F-%EF%B8%8F-1f34fd603584\n */\nexport interface ISuspenseable {\n  /**\n   * Funcion de configuración o preparación de un componente de tipo Suspenseable\n   * Debe responder al momento en que el componente esté efectivamente en condiciones de\n   * ser desplegado.\n   */\n  setup(): ObservableInput;\n\n  /**\n   * Cabe la posibilidad que el componente esté en un estado \"listo para poder desplegarse\"\n   * una vez que se hayan ejecutado ciertos procesos, que serán capturados a través de los eventos:\n   * - :load una vez que el componente este listo\n   * - :error en caso que deba informarse un error\n   * Este tipo de operación podríamos  interpretarlo como reactivo, ya que son eventos que\n   * disparan ciertas acciones.\n   * La implementación recomendada para esta función es:\n   * ```\n   * eventHandler(eventName: string): void {\n   *   this.eventName = eventName;\n   * }\n   * ```\n   * Si la variable eventName del componente Suspenseable no tiene valor definido, la carga del \n   * componente buscará realizarse luego de llamar la función `setup()`\n   * @param eventName Nombre que servirá para identificar el evento a capturar\n   */\n  eventHandler(eventName: string): void;\n\n  /**\n   * En caso de estar habilitado el modo \"reactivo\" (habiendo definido el nombre del evento a capturar\n   * en la variable eventName del componente de tipo Suspenseable), la función informará el estado de carga \n   * como listo. \n   */\n  broadcastLoad(): void;\n\n  /**\n   * En caso de estar habilitado el modo \"reactivo\" (habiendo definido el nombre del evento a capturar\n   * en la variable eventName del componente de tipo Suspenseable), la función informará un estado de error \n   * en la carga del componente. \n   */\n  broadcastError(): void;\n\n  /**\n   * Funcion encargada de la inicialización del componente.\n   * Pensada para absorber las operaciones que realiza ngOnInit().\n   * Su implementación es opcional.\n   */\n  init(): void;\n}\n\n/**\n * Define la estructura que debe implementar un módulo que declare un componente Suspenseable no standalone\n */\nexport interface SuspenseableModule {\n  /**\n   * Debe retornar el componente Suspenseable que está declarado en el módulo\n   */\n  getComponent(): Type;\n}\n\n/**\n * Un componente de tipo Suspenseable, dependiendo de como sea inyectado en la vista, pudiera ser desplegado\n * antes que se encuentre en un estado listo para ser desplegado. Dado que eso es un error, se define una\n * clase que se encargará de que el componente no sea desplegado hasta que se encuentre en un estado listo.\n * Al momento de cargar el componente, y de iniciar el proceso del constructor, y flujos del ciclo de vida de \n * Angular (ngOnInit, ngAfterViewInit, etc), el componente ya se encuentra cargado en memoria, sin embargo se \n * desconoce su estado. Estando en memoria, para eviar que se despliegue, se oculta el componente vía CSS usando \n * `display: none`, y se desplegará, cambiando a `display: inherit` ó su valor inicial,  una vez que se encuentre \n * en un estado listo.\n * \n * Todos los subtipos de Suspenseable extienden de esta clase.\n */\nexport class SuspenseableRenderer {\n  renderer: Renderer2    = inject(Renderer2);\n  elementRef: ElementRef = inject(ElementRef);\n  platformId: Object     = inject(PLATFORM_ID);\n\n  defaultDisplay: string = 'inherit';\n\n\n  /**\n   * En caso que la operación sea desde dentro de un browser, se rescatará el valor CSS inicial/original de `display` \n   * del componente, y se cambiará a none, de esa manera se oculta el componente (asumiendo un estado *no listo*).\n   */\n  constructor() {\n    if(isPlatformBrowser(this.platformId)) {\n      this.defaultDisplay = window.getComputedStyle(this.elementRef.nativeElement).getPropertyValue('display');\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'none');\n    } \n  }\n\n  /**\n   * En caso que la operación sea desde dentro de un browser, se cambia el valor de `display` a su valor inicial; de\n   * esa manera se despliega el componente (asumiendo un estado *listo para ser desplegado*).\n   */\n  renderComponenteReady() {\n    if(isPlatformBrowser(this.platformId)) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', this.defaultDisplay);  \n    }\n  }\n}\n\n/**\n * Clase abstracta que define la estructura de un componente de tipo Suspenseable.\n * Considera de manera muy inocente, todos los posibles casos de uso, y funciones posiblemente requeridas.\n * Es abstracta de modo de a lo menos obligar la implmentación de las interfaces OnInit y OnDestroy.\n */\n@Injectable()\nexport abstract class Suspenseable extends SuspenseableRenderer implements ISuspenseable, OnInit, OnDestroy {\n  abstract ngOnInit(): void;\n  abstract ngOnDestroy(): void;\n  \n  /**\n   * Servicio de eventos, requerido para el modo de operación \"reactivo\"\n   */\n  eventService : EventService = inject(EventService);\n\n  /**\n   * Nombre del evento a capturar, en caso de operar en modo \"reactivo\"\n   */\n  eventName   ?: string;\n\n  init() {\n    throw new Error('init() no implementado');\n  }\n\n  setup(): ObservableInput {\n    /**\n     * Permite que en un contexto de desarrollo sepamos que este método no\n     * está implementado => despliegue de estado de error para carga del componente\n     * Aplica solamente para el modo de operación \"normal\" (usando  función `setup()` )\n     */\n    throw new Error('setup() no implementado');\n  }\n\n  eventHandler(eventName: string): void {\n    /**\n     * Permite que en un contexto de desarrollo sepamos que este método no\n     * está implementado => despliegue de estado de error para carga del componente\n     * Aplica solamente para el modo de operación \"reactivo\" (variable `eventName` con valor definido )\n     */\n    throw new Error('eventHandler() no implementado');\n  }\n\n  broadcastLoad(): void {\n    /**\n     * Sólo notifica el estado en caso de  estar operando en modo \"reactivo\"\n     */\n    if (this.eventName) {   \n      this.renderComponenteReady();   \n      this.eventService.broadcast(`${this.eventName}:load`, true);\n    } else {\n      throw new Error('Usando modo reactivo sin haber defido el nombre del evento. Verifique implementación de eventHandler()');\n    }\n  }\n\n  broadcastError(): void {\n    /**\n     * Sólo notifica el estado en caso de  estar operando en modo \"reactivo\"\n     */    \n    if (this.eventName) {\n      this.renderComponenteReady();\n      this.eventService.broadcast(`${this.eventName}:error`, true);\n    } else {\n      throw new Error('Usando modo reactivo sin haber defido el nombre del evento. Verifique implementación de eventHandler()');\n    }\n  }\n}\n\n/**\n * Clase abstracta que define la estructura de un componente de tipo Suspenseable aplicable cuando el  componente se encuentra\n * definido dentro de un módulo. A priori se desconoce que subtipo de componente Suspenseable será, por lo que lo menos malo es\n * usar la clase abstracta Suspenseable, y definir explícitamente todos los métodos que se requieran.\n */\nexport abstract class SuspenseableInModule extends Suspenseable {}\n\n/**\n * Tipo especial para la respuesta del import de un componente definido como Suspenseable.\n * Usando el atributo default se evita requerir expresamente el nombre del componente.\n */\nexport type TDefaultSuspenseable   = { default: Type };\n\n/**\n * Tipo de la promesa utilizada en la directiva defaultView para la carga de un componente Suspenseable.\n * Componentes Suspenseable \"normales\" son de tipo Promise\n * Componentes Suspenseable \"standalone\" o aquellos que cuyo factory sea el módulo donde están definidos son de tipo Promise>\n * \n */\nexport type SuspenseFactoryPromise = () => Promise | Promise>;\n\n/**\n * Tipo general para los componentes de tipo Suspenseable.\n * Sabemos que es Suspenseable, pero no sabemos que tipo de Suspenseable es.\n */\nexport type TSuspenseable = Type;\n\n/**\n * Se utiliza como proveedor de un componente de tipo Suspenseable que es cargado de modo \"no lazy\" (es decir sin un import explícito).\n * En este caso, lo más habitual es que los componentes esten definidos dentro de un módulo.\n * @param comp {TSuspenseable} Componente de tipo Suspenseable\n * @returns \n */\nexport const useSuspense = (comp: TSuspenseable) => ({\n  provide: SUSPENSE,\n  useExisting: comp,\n});\n\n/**\n * InjectionToken para servicio de eventos.\n * Se define de esta manera para asegurarse que sea efectivamente un Singleton, y que sea posible reutilizar \n * el objeto.\n */\nexport const EVENT_SERVICE = new InjectionToken('EventService', {\n  providedIn: 'root',\n  factory: () => {\n    // console.log('EVENT_SERVICE', new Date());\n    return inject(EventService);\n  }\n});\n\n/**\n * InjectionToken para servicio de caché para clases de componentes importados dinamicamente.\n * Se define de esta manera para asegurarse que sea efectivamente un Singleton, y que sea posible reutilizar \n * el objeto.\n */\nexport const SUSPENSE_CACHE = new InjectionToken>('SuspenseCache', {\n  providedIn: 'root',\n  factory: () => {\n    // console.log('SUSPENSE_CACHE', new Date());\n    return inject(SuspenseCacheService);\n  }\n});\n\n/**\n * Función deno-operación que permite deshabilitar la consola del navegador.\n */\nconst _noOp                 =  () => {};\n\n/**\n * Variable de respaldo de la consola del navegador en si estado original.\n */\nconst  originalConsole      = console;\n\n/**\n * InjectionToken para habilitar o deshabilitar la consola del navegador.\n * Si está en true se habilita, si está en false se deshabilita. Se utiliza como `provider` en el\n * `app.module` de la aplicación.  \n * ```\n * providers: [\n *    {\n *       provide: DEBUG_SUSPENSE,\n *       useValue: false // true para habilitar la consola del navegador\n *     },\n *   ],\n * ```\n */\nexport let DEBUG_SUSPENSE = new InjectionToken('DEBUG_SUSPENSE',{\n  providedIn: 'root',\n  factory: () => false\n});\n\n/**\n * Habilita o deshabilita la consola del navegador en función del parámetro que reciba.\n * @param debug {boolean} Indica si se debe habilitar o deshabilitar la consola del navegador.\n * @returns Función de console a utilizar.\n */\nexport const toggleConsole  = (debug: boolean = false): Console => {\n  let newConsole: Console = originalConsole;\n  if (!debug) {\n    (newConsole as any) = {\n      log  : _noOp,\n      warn : _noOp,\n      debug: _noOp,\n      info : _noOp,\n    };\n  }\n\n  return newConsole;\n};\n\n/**\n * InjectionToken para exponer la consola del navegador.\n * La consola que  será disponibilizada será bajo el contexto de la líbrería, de modo de no afectar el comportamiento\n * de las demás aplicaciones.\n */\nexport const SUSPENSE_LOG = new InjectionToken('SUSPENSE_LOG',\n{\n  providedIn: 'root',\n  factory   : () => toggleConsole(inject(DEBUG_SUSPENSE))\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/SuspenseableModule.html":{"url":"interfaces/SuspenseableModule.html","title":"interface - SuspenseableModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SuspenseableModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            libs/suspense/types/types.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Define la estructura que debe implementar un módulo que declare un componente Suspenseable no standalone\n\n            \n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Métodos\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getComponent\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        getComponent\n                        \n                    \n                \n            \n            \n                \ngetComponent()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/types.ts:72\n                \n            \n\n\n            \n                \n                    Debe retornar el componente Suspenseable que está declarado en el módulo\n\n\n                    \n                        Devuelve :         Type\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, inject, Injectable, InjectionToken, OnDestroy, OnInit, PLATFORM_ID, Renderer2, Type } from '@angular/core';\nimport { ObservableInput } from 'rxjs';\nimport { EventService, SuspenseCacheService } from '@queplan/qp-suspense/services';\nimport { SuspenseableBroadcaster } from './suspenseable-broadcaster';\nimport { SuspenseableClassic } from './suspenseable-classic';\nimport { SuspenseableEventDriven } from './suspenseable-event-driven';\n\nexport const SUSPENSE = new InjectionToken('SUSPENSE');\n\n/**\n * Define la estructura esperada para un componente al que se pueda aplicar la \n * lógica tipo Suspense (al estilo React, o Vue)\n * @see https://netbasal.com/adding-suspense-to-angular-%EF%B8%8F-%EF%B8%8F-1f34fd603584\n */\nexport interface ISuspenseable {\n  /**\n   * Funcion de configuración o preparación de un componente de tipo Suspenseable\n   * Debe responder al momento en que el componente esté efectivamente en condiciones de\n   * ser desplegado.\n   */\n  setup(): ObservableInput;\n\n  /**\n   * Cabe la posibilidad que el componente esté en un estado \"listo para poder desplegarse\"\n   * una vez que se hayan ejecutado ciertos procesos, que serán capturados a través de los eventos:\n   * - :load una vez que el componente este listo\n   * - :error en caso que deba informarse un error\n   * Este tipo de operación podríamos  interpretarlo como reactivo, ya que son eventos que\n   * disparan ciertas acciones.\n   * La implementación recomendada para esta función es:\n   * ```\n   * eventHandler(eventName: string): void {\n   *   this.eventName = eventName;\n   * }\n   * ```\n   * Si la variable eventName del componente Suspenseable no tiene valor definido, la carga del \n   * componente buscará realizarse luego de llamar la función `setup()`\n   * @param eventName Nombre que servirá para identificar el evento a capturar\n   */\n  eventHandler(eventName: string): void;\n\n  /**\n   * En caso de estar habilitado el modo \"reactivo\" (habiendo definido el nombre del evento a capturar\n   * en la variable eventName del componente de tipo Suspenseable), la función informará el estado de carga \n   * como listo. \n   */\n  broadcastLoad(): void;\n\n  /**\n   * En caso de estar habilitado el modo \"reactivo\" (habiendo definido el nombre del evento a capturar\n   * en la variable eventName del componente de tipo Suspenseable), la función informará un estado de error \n   * en la carga del componente. \n   */\n  broadcastError(): void;\n\n  /**\n   * Funcion encargada de la inicialización del componente.\n   * Pensada para absorber las operaciones que realiza ngOnInit().\n   * Su implementación es opcional.\n   */\n  init(): void;\n}\n\n/**\n * Define la estructura que debe implementar un módulo que declare un componente Suspenseable no standalone\n */\nexport interface SuspenseableModule {\n  /**\n   * Debe retornar el componente Suspenseable que está declarado en el módulo\n   */\n  getComponent(): Type;\n}\n\n/**\n * Un componente de tipo Suspenseable, dependiendo de como sea inyectado en la vista, pudiera ser desplegado\n * antes que se encuentre en un estado listo para ser desplegado. Dado que eso es un error, se define una\n * clase que se encargará de que el componente no sea desplegado hasta que se encuentre en un estado listo.\n * Al momento de cargar el componente, y de iniciar el proceso del constructor, y flujos del ciclo de vida de \n * Angular (ngOnInit, ngAfterViewInit, etc), el componente ya se encuentra cargado en memoria, sin embargo se \n * desconoce su estado. Estando en memoria, para eviar que se despliegue, se oculta el componente vía CSS usando \n * `display: none`, y se desplegará, cambiando a `display: inherit` ó su valor inicial,  una vez que se encuentre \n * en un estado listo.\n * \n * Todos los subtipos de Suspenseable extienden de esta clase.\n */\nexport class SuspenseableRenderer {\n  renderer: Renderer2    = inject(Renderer2);\n  elementRef: ElementRef = inject(ElementRef);\n  platformId: Object     = inject(PLATFORM_ID);\n\n  defaultDisplay: string = 'inherit';\n\n\n  /**\n   * En caso que la operación sea desde dentro de un browser, se rescatará el valor CSS inicial/original de `display` \n   * del componente, y se cambiará a none, de esa manera se oculta el componente (asumiendo un estado *no listo*).\n   */\n  constructor() {\n    if(isPlatformBrowser(this.platformId)) {\n      this.defaultDisplay = window.getComputedStyle(this.elementRef.nativeElement).getPropertyValue('display');\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'none');\n    } \n  }\n\n  /**\n   * En caso que la operación sea desde dentro de un browser, se cambia el valor de `display` a su valor inicial; de\n   * esa manera se despliega el componente (asumiendo un estado *listo para ser desplegado*).\n   */\n  renderComponenteReady() {\n    if(isPlatformBrowser(this.platformId)) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', this.defaultDisplay);  \n    }\n  }\n}\n\n/**\n * Clase abstracta que define la estructura de un componente de tipo Suspenseable.\n * Considera de manera muy inocente, todos los posibles casos de uso, y funciones posiblemente requeridas.\n * Es abstracta de modo de a lo menos obligar la implmentación de las interfaces OnInit y OnDestroy.\n */\n@Injectable()\nexport abstract class Suspenseable extends SuspenseableRenderer implements ISuspenseable, OnInit, OnDestroy {\n  abstract ngOnInit(): void;\n  abstract ngOnDestroy(): void;\n  \n  /**\n   * Servicio de eventos, requerido para el modo de operación \"reactivo\"\n   */\n  eventService : EventService = inject(EventService);\n\n  /**\n   * Nombre del evento a capturar, en caso de operar en modo \"reactivo\"\n   */\n  eventName   ?: string;\n\n  init() {\n    throw new Error('init() no implementado');\n  }\n\n  setup(): ObservableInput {\n    /**\n     * Permite que en un contexto de desarrollo sepamos que este método no\n     * está implementado => despliegue de estado de error para carga del componente\n     * Aplica solamente para el modo de operación \"normal\" (usando  función `setup()` )\n     */\n    throw new Error('setup() no implementado');\n  }\n\n  eventHandler(eventName: string): void {\n    /**\n     * Permite que en un contexto de desarrollo sepamos que este método no\n     * está implementado => despliegue de estado de error para carga del componente\n     * Aplica solamente para el modo de operación \"reactivo\" (variable `eventName` con valor definido )\n     */\n    throw new Error('eventHandler() no implementado');\n  }\n\n  broadcastLoad(): void {\n    /**\n     * Sólo notifica el estado en caso de  estar operando en modo \"reactivo\"\n     */\n    if (this.eventName) {   \n      this.renderComponenteReady();   \n      this.eventService.broadcast(`${this.eventName}:load`, true);\n    } else {\n      throw new Error('Usando modo reactivo sin haber defido el nombre del evento. Verifique implementación de eventHandler()');\n    }\n  }\n\n  broadcastError(): void {\n    /**\n     * Sólo notifica el estado en caso de  estar operando en modo \"reactivo\"\n     */    \n    if (this.eventName) {\n      this.renderComponenteReady();\n      this.eventService.broadcast(`${this.eventName}:error`, true);\n    } else {\n      throw new Error('Usando modo reactivo sin haber defido el nombre del evento. Verifique implementación de eventHandler()');\n    }\n  }\n}\n\n/**\n * Clase abstracta que define la estructura de un componente de tipo Suspenseable aplicable cuando el  componente se encuentra\n * definido dentro de un módulo. A priori se desconoce que subtipo de componente Suspenseable será, por lo que lo menos malo es\n * usar la clase abstracta Suspenseable, y definir explícitamente todos los métodos que se requieran.\n */\nexport abstract class SuspenseableInModule extends Suspenseable {}\n\n/**\n * Tipo especial para la respuesta del import de un componente definido como Suspenseable.\n * Usando el atributo default se evita requerir expresamente el nombre del componente.\n */\nexport type TDefaultSuspenseable   = { default: Type };\n\n/**\n * Tipo de la promesa utilizada en la directiva defaultView para la carga de un componente Suspenseable.\n * Componentes Suspenseable \"normales\" son de tipo Promise\n * Componentes Suspenseable \"standalone\" o aquellos que cuyo factory sea el módulo donde están definidos son de tipo Promise>\n * \n */\nexport type SuspenseFactoryPromise = () => Promise | Promise>;\n\n/**\n * Tipo general para los componentes de tipo Suspenseable.\n * Sabemos que es Suspenseable, pero no sabemos que tipo de Suspenseable es.\n */\nexport type TSuspenseable = Type;\n\n/**\n * Se utiliza como proveedor de un componente de tipo Suspenseable que es cargado de modo \"no lazy\" (es decir sin un import explícito).\n * En este caso, lo más habitual es que los componentes esten definidos dentro de un módulo.\n * @param comp {TSuspenseable} Componente de tipo Suspenseable\n * @returns \n */\nexport const useSuspense = (comp: TSuspenseable) => ({\n  provide: SUSPENSE,\n  useExisting: comp,\n});\n\n/**\n * InjectionToken para servicio de eventos.\n * Se define de esta manera para asegurarse que sea efectivamente un Singleton, y que sea posible reutilizar \n * el objeto.\n */\nexport const EVENT_SERVICE = new InjectionToken('EventService', {\n  providedIn: 'root',\n  factory: () => {\n    // console.log('EVENT_SERVICE', new Date());\n    return inject(EventService);\n  }\n});\n\n/**\n * InjectionToken para servicio de caché para clases de componentes importados dinamicamente.\n * Se define de esta manera para asegurarse que sea efectivamente un Singleton, y que sea posible reutilizar \n * el objeto.\n */\nexport const SUSPENSE_CACHE = new InjectionToken>('SuspenseCache', {\n  providedIn: 'root',\n  factory: () => {\n    // console.log('SUSPENSE_CACHE', new Date());\n    return inject(SuspenseCacheService);\n  }\n});\n\n/**\n * Función deno-operación que permite deshabilitar la consola del navegador.\n */\nconst _noOp                 =  () => {};\n\n/**\n * Variable de respaldo de la consola del navegador en si estado original.\n */\nconst  originalConsole      = console;\n\n/**\n * InjectionToken para habilitar o deshabilitar la consola del navegador.\n * Si está en true se habilita, si está en false se deshabilita. Se utiliza como `provider` en el\n * `app.module` de la aplicación.  \n * ```\n * providers: [\n *    {\n *       provide: DEBUG_SUSPENSE,\n *       useValue: false // true para habilitar la consola del navegador\n *     },\n *   ],\n * ```\n */\nexport let DEBUG_SUSPENSE = new InjectionToken('DEBUG_SUSPENSE',{\n  providedIn: 'root',\n  factory: () => false\n});\n\n/**\n * Habilita o deshabilita la consola del navegador en función del parámetro que reciba.\n * @param debug {boolean} Indica si se debe habilitar o deshabilitar la consola del navegador.\n * @returns Función de console a utilizar.\n */\nexport const toggleConsole  = (debug: boolean = false): Console => {\n  let newConsole: Console = originalConsole;\n  if (!debug) {\n    (newConsole as any) = {\n      log  : _noOp,\n      warn : _noOp,\n      debug: _noOp,\n      info : _noOp,\n    };\n  }\n\n  return newConsole;\n};\n\n/**\n * InjectionToken para exponer la consola del navegador.\n * La consola que  será disponibilizada será bajo el contexto de la líbrería, de modo de no afectar el comportamiento\n * de las demás aplicaciones.\n */\nexport const SUSPENSE_LOG = new InjectionToken('SUSPENSE_LOG',\n{\n  providedIn: 'root',\n  factory   : () => toggleConsole(inject(DEBUG_SUSPENSE))\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"classes/SuspenseableRenderer.html":{"url":"classes/SuspenseableRenderer.html","title":"class - SuspenseableRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Clases\n  SuspenseableRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            libs/suspense/types/types.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Un componente de tipo Suspenseable, dependiendo de como sea inyectado en la vista, pudiera ser desplegado\nantes que se encuentre en un estado listo para ser desplegado. Dado que eso es un error, se define una\nclase que se encargará de que el componente no sea desplegado hasta que se encuentre en un estado listo.\nAl momento de cargar el componente, y de iniciar el proceso del constructor, y flujos del ciclo de vida de\nAngular (ngOnInit, ngAfterViewInit, etc), el componente ya se encuentra cargado en memoria, sin embargo se\ndesconoce su estado. Estando en memoria, para eviar que se despliegue, se oculta el componente vía CSS usando\ndisplay: none, y se desplegará, cambiando a display: inherit ó su valor inicial,  una vez que se encuentre\nen un estado listo.\nTodos los subtipos de Suspenseable extienden de esta clase.\n\n            \n\n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                defaultDisplay\n                            \n                            \n                                elementRef\n                            \n                            \n                                platformId\n                            \n                            \n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                renderComponenteReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en libs/suspense/types/types.ts:92\n                            \n                        \n\n                \n                    \n                            En caso que la operación sea desde dentro de un browser, se rescatará el valor CSS inicial/original de display\ndel componente, y se cambiará a none, de esa manera se oculta el componente (asumiendo un estado no listo).\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valor por defecto : 'inherit'\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/types/types.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementRef\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ElementRef\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(ElementRef)\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/types/types.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platformId\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Object\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(PLATFORM_ID)\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/types/types.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Renderer2\n\n                    \n                \n                \n                    \n                        Valor por defecto : inject(Renderer2)\n                    \n                \n                    \n                        \n                                Definido en libs/suspense/types/types.ts:88\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        renderComponenteReady\n                        \n                    \n                \n            \n            \n                \nrenderComponenteReady()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/types/types.ts:110\n                \n            \n\n\n            \n                \n                    En caso que la operación sea desde dentro de un browser, se cambia el valor de display a su valor inicial; de\nesa manera se despliega el componente (asumiendo un estado listo para ser desplegado).\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, inject, Injectable, InjectionToken, OnDestroy, OnInit, PLATFORM_ID, Renderer2, Type } from '@angular/core';\nimport { ObservableInput } from 'rxjs';\nimport { EventService, SuspenseCacheService } from '@queplan/qp-suspense/services';\nimport { SuspenseableBroadcaster } from './suspenseable-broadcaster';\nimport { SuspenseableClassic } from './suspenseable-classic';\nimport { SuspenseableEventDriven } from './suspenseable-event-driven';\n\nexport const SUSPENSE = new InjectionToken('SUSPENSE');\n\n/**\n * Define la estructura esperada para un componente al que se pueda aplicar la \n * lógica tipo Suspense (al estilo React, o Vue)\n * @see https://netbasal.com/adding-suspense-to-angular-%EF%B8%8F-%EF%B8%8F-1f34fd603584\n */\nexport interface ISuspenseable {\n  /**\n   * Funcion de configuración o preparación de un componente de tipo Suspenseable\n   * Debe responder al momento en que el componente esté efectivamente en condiciones de\n   * ser desplegado.\n   */\n  setup(): ObservableInput;\n\n  /**\n   * Cabe la posibilidad que el componente esté en un estado \"listo para poder desplegarse\"\n   * una vez que se hayan ejecutado ciertos procesos, que serán capturados a través de los eventos:\n   * - :load una vez que el componente este listo\n   * - :error en caso que deba informarse un error\n   * Este tipo de operación podríamos  interpretarlo como reactivo, ya que son eventos que\n   * disparan ciertas acciones.\n   * La implementación recomendada para esta función es:\n   * ```\n   * eventHandler(eventName: string): void {\n   *   this.eventName = eventName;\n   * }\n   * ```\n   * Si la variable eventName del componente Suspenseable no tiene valor definido, la carga del \n   * componente buscará realizarse luego de llamar la función `setup()`\n   * @param eventName Nombre que servirá para identificar el evento a capturar\n   */\n  eventHandler(eventName: string): void;\n\n  /**\n   * En caso de estar habilitado el modo \"reactivo\" (habiendo definido el nombre del evento a capturar\n   * en la variable eventName del componente de tipo Suspenseable), la función informará el estado de carga \n   * como listo. \n   */\n  broadcastLoad(): void;\n\n  /**\n   * En caso de estar habilitado el modo \"reactivo\" (habiendo definido el nombre del evento a capturar\n   * en la variable eventName del componente de tipo Suspenseable), la función informará un estado de error \n   * en la carga del componente. \n   */\n  broadcastError(): void;\n\n  /**\n   * Funcion encargada de la inicialización del componente.\n   * Pensada para absorber las operaciones que realiza ngOnInit().\n   * Su implementación es opcional.\n   */\n  init(): void;\n}\n\n/**\n * Define la estructura que debe implementar un módulo que declare un componente Suspenseable no standalone\n */\nexport interface SuspenseableModule {\n  /**\n   * Debe retornar el componente Suspenseable que está declarado en el módulo\n   */\n  getComponent(): Type;\n}\n\n/**\n * Un componente de tipo Suspenseable, dependiendo de como sea inyectado en la vista, pudiera ser desplegado\n * antes que se encuentre en un estado listo para ser desplegado. Dado que eso es un error, se define una\n * clase que se encargará de que el componente no sea desplegado hasta que se encuentre en un estado listo.\n * Al momento de cargar el componente, y de iniciar el proceso del constructor, y flujos del ciclo de vida de \n * Angular (ngOnInit, ngAfterViewInit, etc), el componente ya se encuentra cargado en memoria, sin embargo se \n * desconoce su estado. Estando en memoria, para eviar que se despliegue, se oculta el componente vía CSS usando \n * `display: none`, y se desplegará, cambiando a `display: inherit` ó su valor inicial,  una vez que se encuentre \n * en un estado listo.\n * \n * Todos los subtipos de Suspenseable extienden de esta clase.\n */\nexport class SuspenseableRenderer {\n  renderer: Renderer2    = inject(Renderer2);\n  elementRef: ElementRef = inject(ElementRef);\n  platformId: Object     = inject(PLATFORM_ID);\n\n  defaultDisplay: string = 'inherit';\n\n\n  /**\n   * En caso que la operación sea desde dentro de un browser, se rescatará el valor CSS inicial/original de `display` \n   * del componente, y se cambiará a none, de esa manera se oculta el componente (asumiendo un estado *no listo*).\n   */\n  constructor() {\n    if(isPlatformBrowser(this.platformId)) {\n      this.defaultDisplay = window.getComputedStyle(this.elementRef.nativeElement).getPropertyValue('display');\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'none');\n    } \n  }\n\n  /**\n   * En caso que la operación sea desde dentro de un browser, se cambia el valor de `display` a su valor inicial; de\n   * esa manera se despliega el componente (asumiendo un estado *listo para ser desplegado*).\n   */\n  renderComponenteReady() {\n    if(isPlatformBrowser(this.platformId)) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', this.defaultDisplay);  \n    }\n  }\n}\n\n/**\n * Clase abstracta que define la estructura de un componente de tipo Suspenseable.\n * Considera de manera muy inocente, todos los posibles casos de uso, y funciones posiblemente requeridas.\n * Es abstracta de modo de a lo menos obligar la implmentación de las interfaces OnInit y OnDestroy.\n */\n@Injectable()\nexport abstract class Suspenseable extends SuspenseableRenderer implements ISuspenseable, OnInit, OnDestroy {\n  abstract ngOnInit(): void;\n  abstract ngOnDestroy(): void;\n  \n  /**\n   * Servicio de eventos, requerido para el modo de operación \"reactivo\"\n   */\n  eventService : EventService = inject(EventService);\n\n  /**\n   * Nombre del evento a capturar, en caso de operar en modo \"reactivo\"\n   */\n  eventName   ?: string;\n\n  init() {\n    throw new Error('init() no implementado');\n  }\n\n  setup(): ObservableInput {\n    /**\n     * Permite que en un contexto de desarrollo sepamos que este método no\n     * está implementado => despliegue de estado de error para carga del componente\n     * Aplica solamente para el modo de operación \"normal\" (usando  función `setup()` )\n     */\n    throw new Error('setup() no implementado');\n  }\n\n  eventHandler(eventName: string): void {\n    /**\n     * Permite que en un contexto de desarrollo sepamos que este método no\n     * está implementado => despliegue de estado de error para carga del componente\n     * Aplica solamente para el modo de operación \"reactivo\" (variable `eventName` con valor definido )\n     */\n    throw new Error('eventHandler() no implementado');\n  }\n\n  broadcastLoad(): void {\n    /**\n     * Sólo notifica el estado en caso de  estar operando en modo \"reactivo\"\n     */\n    if (this.eventName) {   \n      this.renderComponenteReady();   \n      this.eventService.broadcast(`${this.eventName}:load`, true);\n    } else {\n      throw new Error('Usando modo reactivo sin haber defido el nombre del evento. Verifique implementación de eventHandler()');\n    }\n  }\n\n  broadcastError(): void {\n    /**\n     * Sólo notifica el estado en caso de  estar operando en modo \"reactivo\"\n     */    \n    if (this.eventName) {\n      this.renderComponenteReady();\n      this.eventService.broadcast(`${this.eventName}:error`, true);\n    } else {\n      throw new Error('Usando modo reactivo sin haber defido el nombre del evento. Verifique implementación de eventHandler()');\n    }\n  }\n}\n\n/**\n * Clase abstracta que define la estructura de un componente de tipo Suspenseable aplicable cuando el  componente se encuentra\n * definido dentro de un módulo. A priori se desconoce que subtipo de componente Suspenseable será, por lo que lo menos malo es\n * usar la clase abstracta Suspenseable, y definir explícitamente todos los métodos que se requieran.\n */\nexport abstract class SuspenseableInModule extends Suspenseable {}\n\n/**\n * Tipo especial para la respuesta del import de un componente definido como Suspenseable.\n * Usando el atributo default se evita requerir expresamente el nombre del componente.\n */\nexport type TDefaultSuspenseable   = { default: Type };\n\n/**\n * Tipo de la promesa utilizada en la directiva defaultView para la carga de un componente Suspenseable.\n * Componentes Suspenseable \"normales\" son de tipo Promise\n * Componentes Suspenseable \"standalone\" o aquellos que cuyo factory sea el módulo donde están definidos son de tipo Promise>\n * \n */\nexport type SuspenseFactoryPromise = () => Promise | Promise>;\n\n/**\n * Tipo general para los componentes de tipo Suspenseable.\n * Sabemos que es Suspenseable, pero no sabemos que tipo de Suspenseable es.\n */\nexport type TSuspenseable = Type;\n\n/**\n * Se utiliza como proveedor de un componente de tipo Suspenseable que es cargado de modo \"no lazy\" (es decir sin un import explícito).\n * En este caso, lo más habitual es que los componentes esten definidos dentro de un módulo.\n * @param comp {TSuspenseable} Componente de tipo Suspenseable\n * @returns \n */\nexport const useSuspense = (comp: TSuspenseable) => ({\n  provide: SUSPENSE,\n  useExisting: comp,\n});\n\n/**\n * InjectionToken para servicio de eventos.\n * Se define de esta manera para asegurarse que sea efectivamente un Singleton, y que sea posible reutilizar \n * el objeto.\n */\nexport const EVENT_SERVICE = new InjectionToken('EventService', {\n  providedIn: 'root',\n  factory: () => {\n    // console.log('EVENT_SERVICE', new Date());\n    return inject(EventService);\n  }\n});\n\n/**\n * InjectionToken para servicio de caché para clases de componentes importados dinamicamente.\n * Se define de esta manera para asegurarse que sea efectivamente un Singleton, y que sea posible reutilizar \n * el objeto.\n */\nexport const SUSPENSE_CACHE = new InjectionToken>('SuspenseCache', {\n  providedIn: 'root',\n  factory: () => {\n    // console.log('SUSPENSE_CACHE', new Date());\n    return inject(SuspenseCacheService);\n  }\n});\n\n/**\n * Función deno-operación que permite deshabilitar la consola del navegador.\n */\nconst _noOp                 =  () => {};\n\n/**\n * Variable de respaldo de la consola del navegador en si estado original.\n */\nconst  originalConsole      = console;\n\n/**\n * InjectionToken para habilitar o deshabilitar la consola del navegador.\n * Si está en true se habilita, si está en false se deshabilita. Se utiliza como `provider` en el\n * `app.module` de la aplicación.  \n * ```\n * providers: [\n *    {\n *       provide: DEBUG_SUSPENSE,\n *       useValue: false // true para habilitar la consola del navegador\n *     },\n *   ],\n * ```\n */\nexport let DEBUG_SUSPENSE = new InjectionToken('DEBUG_SUSPENSE',{\n  providedIn: 'root',\n  factory: () => false\n});\n\n/**\n * Habilita o deshabilita la consola del navegador en función del parámetro que reciba.\n * @param debug {boolean} Indica si se debe habilitar o deshabilitar la consola del navegador.\n * @returns Función de console a utilizar.\n */\nexport const toggleConsole  = (debug: boolean = false): Console => {\n  let newConsole: Console = originalConsole;\n  if (!debug) {\n    (newConsole as any) = {\n      log  : _noOp,\n      warn : _noOp,\n      debug: _noOp,\n      info : _noOp,\n    };\n  }\n\n  return newConsole;\n};\n\n/**\n * InjectionToken para exponer la consola del navegador.\n * La consola que  será disponibilizada será bajo el contexto de la líbrería, de modo de no afectar el comportamiento\n * de las demás aplicaciones.\n */\nexport const SUSPENSE_LOG = new InjectionToken('SUSPENSE_LOG',\n{\n  providedIn: 'root',\n  factory   : () => toggleConsole(inject(DEBUG_SUSPENSE))\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/YieldToMainService.html":{"url":"injectables/YieldToMainService.html","title":"injectable - YieldToMainService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Inyectables\n  YieldToMainService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            libs/suspense/services/yield-to-main.service.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Servicio que permite ejecutar tareas en segundo plano, sin bloquear la UI.\nEstá definido como un servicio de funciones estáticas, de modo de poder ser ejecutyado sin necesidad de inyectarlo.\nSee https://web.dev/optimize-long-tasks\n\n            \n\n\n\n            \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                prioritizeTask\n                            \n                            \n                                    Static\n                                    Async\n                                yieldTaskArray\n                            \n                            \n                                    Static\n                                yieldToMain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en libs/suspense/services/yield-to-main.service.ts:24\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        prioritizeTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    prioritizeTask(task: () => void, priority: taskPriority)\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/services/yield-to-main.service.ts:77\n                \n            \n\n            \n                \n                    Parámetros de tipo :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Permite la ejecución de una tarea en segundo plano, asignándole una prioridad, sin bloquear la UI.\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Valor por defecto\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        tarea a ejecutar\n\n                                    \n                                \n                                \n                                    priority\n                                    \n                                                taskPriority\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        taskPriority.MEDIUM\n                                    \n\n                                    \n                                        prioridad de la tarea. Por defecto es MEDIUM\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Promise\n\n                    \n                    \n                        promesa que se resuelve cuando la tarea se haya ejecutado\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        yieldTaskArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    yieldTaskArray(tasks: Array, watchUserInput)\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/services/yield-to-main.service.ts:44\n                \n            \n\n\n            \n                \n                    Recorre el arreglo de tareas y las ejecuta en segundo plano, sin bloquear la UI.\n                                verificará si hay entrada de datos pendientes previo \"producir\" la ejecución (yieldToMain).\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Valor por defecto\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    tasks\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Arreglo de las funciones que se ha identificado como tareas que pueden ser ejecutadas en segundo plano.\n\n                                    \n                                \n                                \n                                    watchUserInput\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        Indica si se debe vigilar la entrada del usuario. Si es true, se vigilará la entrada del usuario y se \nverificará si hay entrada de datos pendientes previo \"producir\" la ejecución (yieldToMain).\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        yieldToMain\n                        \n                    \n                \n            \n            \n                \n                    \n                    yieldToMain()\n                \n            \n\n\n            \n                \n                    Definido en libs/suspense/services/yield-to-main.service.ts:32\n                \n            \n\n            \n                \n                    Parámetros de tipo :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    \"Produce\" la ejecución de una tarea en segundo plano, sin bloquear la UI.\n\n\n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        promesa que se resuelve cuando se haya ejecutado la tarea.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Enum para definir la prioridad de las tareas.\n * Permite utilizar alias un poco más simples y descriptivos, en caso que se requiera.\n */\nconst enum taskPriority {\n  BACKGROUND    = 'background',\n  USER_VISIBLE  = 'user-visible',\n  USER_BLOCKING = 'user-blocking',\n  LOW           = 'background',\n  MEDIUM        = 'user-visible',\n  HIGH          = 'user-blocking',\n};\n\n/**\n * Servicio que permite ejecutar tareas en segundo plano, sin bloquear la UI.\n * Está definido como un servicio de funciones estáticas, de modo de poder ser ejecutyado sin necesidad de inyectarlo.\n * @see https://web.dev/optimize-long-tasks\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class YieldToMainService {\n\n  constructor() { }\n\n  /**\n   * \"Produce\" la ejecución de una tarea en segundo plano, sin bloquear la UI.\n   * @returns {Promise} promesa que se resuelve cuando se haya ejecutado la tarea.\n   */\n  static yieldToMain () {\n    return new Promise(resolve => {\n      setTimeout(resolve, 0);\n    });\n  }\n\n  /**\n   * Recorre el arreglo de tareas y las ejecuta en segundo plano, sin bloquear la UI.\n   * @param tasks {Array void>} Arreglo de las funciones que se ha identificado como tareas que pueden ser ejecutadas en segundo plano.\n   * @param watchUserInput {boolean} Indica si se debe vigilar la entrada del usuario. Si es true, se vigilará la entrada del usuario y se \n   *                                 verificará si hay entrada de datos pendientes previo \"producir\" la ejecución (yieldToMain).\n   */\n  static async yieldTaskArray(tasks: Array void>, watchUserInput = false) {\n    while (tasks.length > 0) {\n      if(watchUserInput) {\n        // Yield to a pending user input:\n        if ((navigator as any)['scheduling'].isInputPending()) {\n          // There's a pending user input. Yield here:\n          await YieldToMainService.yieldToMain();\n        } else {\n          // Shift the task out of the queue:\n          const task = tasks?.shift();\n    \n          // Run the task:\n          if (task) task();\n        }\n      } else {\n        // Shift the first task off the tasks array:\n        const task = tasks.shift();\n\n        // Run the task:\n        if (task) task();\n\n        // Yield to the main thread:\n        await YieldToMainService.yieldToMain();\n      }\n    }\n  }\n\n  /**\n   * Permite la ejecución de una tarea en segundo plano, asignándole una prioridad, sin bloquear la UI.\n   * @param task {() => void} tarea a ejecutar\n   * @param priority {taskPriority} prioridad de la tarea. Por defecto es MEDIUM\n   * @returns {Promise} promesa que se resuelve cuando la tarea se haya ejecutado\n   */\n  static prioritizeTask(task: () => void, priority: taskPriority = taskPriority.MEDIUM): Promise{\n    let result;\n\n    // Si el navegador soporta la API de scheduling, se utiliza para ejecutar la tarea en segundo plano, con la prioridad indicada.\n    if ('scheduler' in window) {\n      result = (window as any)['scheduler'].postTask(task, { priority });\n    } else {\n      task();\n      result = YieldToMainService.yieldToMain();\n    }\n\n    return result;    \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencias\n    \n    \n        \n            @angular/animations : ~15.2.1\n        \n            @angular/common : ~15.2.1\n        \n            @angular/compiler : ~15.2.1\n        \n            @angular/core : ~15.2.1\n        \n            @angular/forms : ~15.2.1\n        \n            @angular/platform-browser : ~15.2.1\n        \n            @angular/platform-browser-dynamic : ~15.2.1\n        \n            @angular/router : ~15.2.1\n        \n            ajv : ^8.12.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.4.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscelánea\n  Enumeraciones\n\n\n\n    Índice\n    \n        \n            \n                \n                    \n                        \n                            taskPriority   (libs/.../yield-to-main.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/suspense/services/yield-to-main.service.ts\n    \n        \n            \n                \n                    \n                        \n                        taskPriority\n                    \n                \n                    \n                        \n                            Enum para definir la prioridad de las tareas.\nPermite utilizar alias un poco más simples y descriptivos, en caso que se requiera.\n\n                        \n                    \n                        \n                            \n                                 BACKGROUND\n                            \n                        \n                        \n                            \n                                Valor : background\n                            \n                        \n                        \n                            \n                                 USER_VISIBLE\n                            \n                        \n                        \n                            \n                                Valor : user-visible\n                            \n                        \n                        \n                            \n                                 USER_BLOCKING\n                            \n                        \n                        \n                            \n                                Valor : user-blocking\n                            \n                        \n                        \n                            \n                                 LOW\n                            \n                        \n                        \n                            \n                                Valor : background\n                            \n                        \n                        \n                            \n                                 MEDIUM\n                            \n                        \n                        \n                            \n                                Valor : user-visible\n                            \n                        \n                        \n                            \n                                 HIGH\n                            \n                        \n                        \n                            \n                                Valor : user-blocking\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nQP Suspense\nQP Suspense es una implementación de la lógica de Suspense (al estilo React, Vue, Svelte). Muy en simple (y raptando descaradamente la definición de Suspense que trae React):\n\n lets you display a fallback until its children have finished loading.\n\nEntonces tenemos que aplicando suspense podemos, de alguna manera, asegurar que el o los componentes serán desplegados cuando efectivamente estén listos para ser desplegados. Y mientras tanto se muestra un loader (fallback).\nRequerimientos\nDe momento el único requerimiento es una versión de Angular >= v14 , ya que  utiliza componentes y directivas standalone.\nInstalación\nLa librería aún no está publicada en NPM, sin embargo se puede instalar desde el repositorio Github, referenciando directamente el paquete:\nnpm install https://github.com/QuePlan/qp-suspense/releases/download/v1.0.1/queplan-qp-suspense-1.0.1.tgz\nVersiones disponibles: https://github.com/QuePlan/qp-suspense/releases\nSuspense en Angular\nResumiendo mucho el uso de este componente, el caso de uso más simple es: \n\n  \n  \n    Cargando componente MyComponent\n  \n  \n    ERROR cargando componente MyComponent\n  \ny bajo el supuesto que el código no sea lo suficiente autoexplicativo:\n\ndefaultView : es donde se va a desplegar el componente Suspenseable. Recibe como valor el import asociado a la clase donde se ha definido el componente.\nfallbackView : es el loader que se mostrará mientras el componente efectivamente se carga.\nerrorView : es el componente que se va a desplegar en caso de presentarse errores en la carga del componente.\n\nSi se desea minimizar el LCP reservando el espacio para el componente, se puede utilizar un elemento HTML, con estilos o clases CSS; y usar suspense como una\ndirectiva de tipo atributo:\n\n  \n\n  \n    Fetching Users...\n  \nCasos de uso\n\nComponentes cargados de manera lazy.\nComponentes definidos dentro de un módulo, cargados de manera lazy.\nComponentes cuya carga está definida por marcas de estado setupReady y  hasError.\nComponentes que informan su estado de cargado o error a través de un  evento.\nComponentes que son cargados de manera no-lazy.\n\nEn todos los casos, los componentes deben estar definidos como alguna variedad de Suspenseable, y según sea la clase que extienden, serán los métodos que van a requerir implementar (los subtipos + OOP se encargan de esa magia).\nPara mayor información se recomienda ejecutar el proyecto de ejemplo:\nnpm start -- --configuration=development --project qp-suspense-demo --o\nEl detalle cada caso supuestamente está bien documentado.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Módulos\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Descripción general\n\n    \n\n    \n        \n            \n                \n                    \n                    3 Componentes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Directivas\n                \n            \n        \n        \n            \n                \n                    \n                    4 Inyectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Clases\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Propiedades\n    \n    \n        \n            Version : 1.0.1\n        \n            Keywords : angular, component, suspense, qp-suspense, ng-suspense\n        \n            License : MIT\n        \n            Repository : https://github.com/QuePlan/qp-suspense\n        \n            Author : Jose Ignacio Santa Cruz G\n    \n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscelánea\n  Alias de tipo\n\n\n\n    Índice\n    \n        \n            \n                \n                    \n                        \n                            listenerFunction   (libs/.../event.service.ts)\n                        \n                        \n                            SuspenseFactoryPromise   (libs/.../types.ts)\n                        \n                        \n                            TDefaultSuspenseable   (libs/.../types.ts)\n                        \n                        \n                            TSuspenseable   (libs/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/suspense/services/event.service.ts\n    \n    \n        \n            \n                \n                    \n                    listenerFunction\n                \n            \n            \n                \n                    Tipo de dato para definir la función que se ejecutará cuando se dispare un evento.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    libs/suspense/types/types.ts\n    \n    \n        \n            \n                \n                    \n                    SuspenseFactoryPromise\n                \n            \n            \n                \n                    Tipo de la promesa utilizada en la directiva defaultView para la carga de un componente Suspenseable.\nComponentes Suspenseable \"normales\" son de tipo Promise\nComponentes Suspenseable \"standalone\" o aquellos que cuyo factory sea el módulo donde están definidos son de tipo Promise>\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TDefaultSuspenseable\n                \n            \n            \n                \n                    Tipo especial para la respuesta del import de un componente definido como Suspenseable.\nUsando el atributo default se evita requerir expresamente el nombre del componente.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TSuspenseable\n                \n            \n            \n                \n                    Tipo general para los componentes de tipo Suspenseable.\nSabemos que es Suspenseable, pero no sabemos que tipo de Suspenseable es.\n\n                \n            \n            \n                \n                            Type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscelánea\n  Variables\n\n\n\n    Índice\n    \n        \n            \n                \n                    \n                        \n                            _noOp   (libs/.../types.ts)\n                        \n                        \n                            DEBUG_SUSPENSE   (libs/.../types.ts)\n                        \n                        \n                            EVENT_SERVICE   (libs/.../types.ts)\n                        \n                        \n                            originalConsole   (libs/.../types.ts)\n                        \n                        \n                            SUSPENSE   (libs/.../types.ts)\n                        \n                        \n                            SUSPENSE_CACHE   (libs/.../types.ts)\n                        \n                        \n                            SUSPENSE_LOG   (libs/.../types.ts)\n                        \n                        \n                            suspenseConsole   (libs/.../default-view.directive.ts)\n                        \n                        \n                            suspenseConsole   (libs/.../suspenseable-event-driven.ts)\n                        \n                        \n                            suspenseConsole   (libs/.../suspense.component.ts)\n                        \n                        \n                            toggleConsole   (libs/.../types.ts)\n                        \n                        \n                            useSuspense   (libs/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/suspense/types/types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        _noOp\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : () => {}\n                    \n                \n\n            \n                \n                    Función deno-operación que permite deshabilitar la consola del navegador.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEBUG_SUSPENSE\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : new InjectionToken('DEBUG_SUSPENSE',{\n  providedIn: 'root',\n  factory: () => false\n})\n                    \n                \n\n            \n                \n                    InjectionToken para habilitar o deshabilitar la consola del navegador.\nSi está en true se habilita, si está en false se deshabilita. Se utiliza como provider en el\napp.module de la aplicación.  \nproviders: [\n   {\n      provide: DEBUG_SUSPENSE,\n      useValue: false // true para habilitar la consola del navegador\n    },\n  ],\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EVENT_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : new InjectionToken('EventService', {\n  providedIn: 'root',\n  factory: () => {\n    // console.log('EVENT_SERVICE', new Date());\n    return inject(EventService);\n  }\n})\n                    \n                \n\n            \n                \n                    InjectionToken para servicio de eventos.\nSe define de esta manera para asegurarse que sea efectivamente un Singleton, y que sea posible reutilizar \nel objeto.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        originalConsole\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : console\n                    \n                \n\n            \n                \n                    Variable de respaldo de la consola del navegador en si estado original.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SUSPENSE\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : new InjectionToken('SUSPENSE')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SUSPENSE_CACHE\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : new InjectionToken>('SuspenseCache', {\n  providedIn: 'root',\n  factory: () => {\n    // console.log('SUSPENSE_CACHE', new Date());\n    return inject(SuspenseCacheService);\n  }\n})\n                    \n                \n\n            \n                \n                    InjectionToken para servicio de caché para clases de componentes importados dinamicamente.\nSe define de esta manera para asegurarse que sea efectivamente un Singleton, y que sea posible reutilizar \nel objeto.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SUSPENSE_LOG\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : new InjectionToken('SUSPENSE_LOG',\n{\n  providedIn: 'root',\n  factory   : () => toggleConsole(inject(DEBUG_SUSPENSE))\n})\n                    \n                \n\n            \n                \n                    InjectionToken para exponer la consola del navegador.\nLa consola que  será disponibilizada será bajo el contexto de la líbrería, de modo de no afectar el comportamiento\nde las demás aplicaciones.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleConsole\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : (debug: boolean = false): Console => {\n  let newConsole: Console = originalConsole;\n  if (!debug) {\n    (newConsole as any) = {\n      log  : _noOp,\n      warn : _noOp,\n      debug: _noOp,\n      info : _noOp,\n    };\n  }\n\n  return newConsole;\n}\n                    \n                \n\n            \n                \n                    Habilita o deshabilita la consola del navegador en función del parámetro que reciba.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useSuspense\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : (comp: TSuspenseable) => ({\n  provide: SUSPENSE,\n  useExisting: comp,\n})\n                    \n                \n\n            \n                \n                    Se utiliza como proveedor de un componente de tipo Suspenseable que es cargado de modo \"no lazy\" (es decir sin un import explícito).\nEn este caso, lo más habitual es que los componentes esten definidos dentro de un módulo.\n\n                \n            \n\n        \n    \n\n    libs/suspense/directives/default-view.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        suspenseConsole\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Console\n\n                    \n                \n\n\n        \n    \n\n    libs/suspense/types/suspenseable-event-driven.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        suspenseConsole\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Console\n\n                    \n                \n\n\n        \n    \n\n    libs/suspense/src/lib/suspense/suspense.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        suspenseConsole\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     Console\n\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"}}
}
